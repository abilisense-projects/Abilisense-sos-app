{"version":3,"file":"static/js/main.e1e76992.js","mappings":"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","sources":["config/ValidationSchemas.js","redux/actions/registerActions.js","components/signUp/LoginButton.js","components/signUp/signUp1.js","components/signUp/SignUp2.js","components/signUp/SignUp3.js","components/signUp/MedicalConditionsList.js","pages/SignUpPage.js","components/history/ShowAlerts.js","pages/HistoryPage.js","components/home/locationButton.js","pages/SettingsPage.js","components/sos_button/SosButton.js","components/sos_button/Status.js","components/sos_button/ProblemType.js","components/sos_button/SendAlert.js","components/sos_button/FindLocation.js","components/sos_button/CancelButton.js","components/sos_button/AlertSendingConfirmationModel.js","components/home/SquareIconButton.js","components/sos_button/CancelAlertButton.js","pages/HomeScreen.js","pages/AccessibilityPage.js","pages/SideBarMenu.js","components/logout/LogoutModel.js","pages/Logout.js","pages/Login.js","config/loginValidationSchema.js","redux/actions/loginActions.js","redux/reducers/registerReducers.js","redux/reducers/loginReducers.js","redux/store.js","components/forget_password/CodeInput.js","components/forget_password/PublicFunctions.js","components/forget_password/EmailVerification.js","components/forget_password/ResetPassword.js","config/passwordValidation.js","components/forget_password/PasswordInput.js","components/forget_password/CompleteResetPassword.js","components/forget_password/ResetSuccessfully.js","components/forget_password/BackToLogin.js","pages/ResetPassword.js","components/forget_password/forget_password.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as Yup from 'yup';\n\n// Function to check if a string contains potential malicious code\nconst isSafeString = (value) => !/<script.*>.*<\\/script>/i.test(value);\n\nexport const signUpValidationSchema = (t) => {\n  return Yup.object().shape({\n    firstname: Yup.string()\n      .required(t('First name is required'))\n      .matches(/^[A-Za-zא-ת]+$/, t('First name should only contain alphabets'))\n      .max(50, t('First name is too long')),\n\n    lastname: Yup.string()\n      .required(t('Last name is required'))\n      .matches(/^[A-Za-zא-ת]+$/, t('Last name should only contain alphabets'))\n      .max(50, t('Last name is too long')),\n\n    email: Yup.string()\n      .email(t('Provide a valid email'))\n      .required(t('Email is required'))\n      .test(\n        'Validate Email',\n        t('Provide a valid email'),\n        (value) => {\n          const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n          return re.test(String(value).toLowerCase());\n        },\n      ),\n\n    password: Yup.string()\n      .required(t('Password is required'))\n      .min(8, t('Your password must contain at least 8 characters'))\n      .matches(/^(?=.*[a-zA-Zא-ת])(?=.*\\d)/, t('Password must contain at least one letter and one number')),\n\n    phoneNumber: Yup.string()\n      .required(t('Phone Number is required'))\n      .matches(/^[0-9]+$/, t('Phone number should only contain digits')),\n\n    country: Yup.string()\n      .required(t('Country is required'))\n      .test('is-safe', t('Invalid characters in country'), isSafeString),\n\n    city: Yup.string()\n      .required(t('City is required'))\n      .test('is-safe', t('Invalid characters in city'), isSafeString),\n\n    street: Yup.string()\n      .required(t('Street is required'))\n      .test('is-safe', t('Invalid characters in street'), isSafeString),\n\n    buildingNumber: Yup.number()\n      .required(t('Building number is required'))\n      .typeError(t('Building number should only contain numbers'))\n      .positive(t('Building number should be a positive number'))\n      .integer(t('Building number should be an integer')),\n\n    entrance: Yup.string().test('is-safe', t('Invalid characters in entrance'), isSafeString),\n\n    floor: Yup.number()\n      .required(t('Floor is required'))\n      .typeError(t('Floor should only contain numbers'))\n      .positive(t('Floor should be a positive number'))\n      .integer(t('Floor should be an integer')),\n\n    apartmentNumber: Yup.number()\n      .required(t('Apartment number is required'))\n      .typeError(t('Apartment number should only contain numbers'))\n      .positive(t('Apartment number should be a positive number'))\n      .integer(t('Apartment number should be an integer')),\n\n    additionalNotes: Yup.string().test('is-safe', t('Invalid characters in additional notes'), isSafeString),\n\n    dateOfBirth: Yup.string()\n      .required(t('Date of Birth is required'))\n      .matches(/^(19|20)\\d\\d-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/, t('Invalid Date of Birth format. Please use YYYY-MM-DD')),\n  });\n};\n"," export const setUserData = (userData) => ({\n    type: 'SET_USER_DATA',\n    payload: userData,\n  });\n  \n  export const setAddressData = (addressData) => ({\n    type: 'SET_ADDRESS_DATA',\n    payload: addressData,\n  });\n\n  export const addMedicalConditions = (conditions) => ({\n    type: 'ADD_MEDICAL_CONDITIONS',\n    payload: conditions,\n  });\n\n  export const removeMedicalCondition = (condition) => ({\n    type: 'REMOVE_MEDICAL_CONDITION',\n    payload: condition,\n  });\n\n  export const resetRegisterData = () => ({\n    type: 'RESET_REGISTER_DATA',\n  });\n  ","import React from 'react';\nimport { TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst BackButton = () => {\n  const navigation = useNavigation();\n\n  return (\n    <TouchableOpacity onPress={() => navigation.navigate('Login')} style={styles.backButton}>\n      <Text style={styles.backButtonText}>Back to Login</Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backButton: {\n    position: 'absolute',\n    top: 10,\n    left: 10,\n  },\n\n  backButtonText: {\n    fontSize: 16,\n    color: 'blue',\n  },\n});\n\nexport default BackButton;\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, Pressable, StyleSheet } from 'react-native';\nimport { signUpValidationSchema } from '../../config/ValidationSchemas';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUserData } from '../../redux/actions/registerActions';\nimport { useTranslation } from 'react-i18next';\nimport BackButton from './LoginButton';\nimport { SERVER_BASE_URL } from '@env';\n\nconst SignUpScreen = ({ onStepChange }) => {\n\n  const user = useSelector((state) => state.register.userData);\n  const [errors, setErrors] = useState({});\n  const { t, i18n } = useTranslation();\n\n  const [formData, setFormData] = useState({\n    firstname: user.firstname,\n    lastname: user.lastname,\n    email: user.email,\n    password: user.password,\n  });\n\n  const fieldDisplayNames = {\n    firstname: t('First name'),\n    lastname: t('Last name'),\n    email: t('Email'),\n    password: t('Password'),\n  };\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = (key, text) => {\n    setFormData({ ...formData, [key]: text });\n    setErrors({ ...errors, [key]: null }); // Reset error when the user starts typing\n  };\n\n  const isFieldValid = (key) => {\n    if (formData[key] && !errors[key]) {\n      // Check validation conditions\n      try {\n        signUpValidationSchema(t).validateSyncAt(key, formData);\n        return true;\n      } catch (validationError) {\n        return false;\n      }\n    }\n    return false;\n  };\n\n  const renderLabel = (key) => {\n    return (\n      <Text style={styles.placeholderLabel}>\n        {formData[key] ? fieldDisplayNames[key] : ''}\n      </Text>\n    );\n  };\n\n  const handleSignUp = async (newStep) => {\n    const formErrors = {};\n    Object.keys(formData).forEach((key) => {\n      try {\n        signUpValidationSchema(t).validateSyncAt(key, formData);\n      } catch (validationError) {\n        formErrors[key] = validationError.message;\n      }\n    });\n\n    if (Object.keys(formErrors).length === 0) {\n      // No errors, proceed to the next step\n      setErrors({});\n      checkIfEmailExistsFunction(newStep);\n    } else {\n      // Validation failed, set the errors\n      setErrors(formErrors);\n    }\n  }\n\n  const checkIfEmailExistsFunction = async (newStep) => {\n    const result = await checkIfEmailExists(formData.email);\n    if (!result) {\n      console.log(\"Excellent! There is no such email\");\n      // send data to store\n      dispatch(setUserData(formData));\n      onStepChange(newStep);\n    } else {\n      console.log(\"Invalid email\");\n      // Set the error for the 'email' key\n      setErrors({ ...errors, email: t('Provide a valid email') });\n      // You can also display a message to the user if needed\n    }\n  };\n\n  const checkIfEmailExists = async (email) => {\n    try {\n      return await axios.post(`${SERVER_BASE_URL}/api/patients//get-by-email/`, { email })\n        .then(response => {\n          console.log('The form data:', response.data);\n          return response.data\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n    }\n    catch (error) {\n      console.error('Error fetching data:', error);\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <BackButton />\n      <Text style={styles.title}>{t(\"Sign Up\")}</Text>\n\n      {Object.keys(formData).map((key) => (\n        <View key={key} style={styles.inputContainer}>\n          {renderLabel(key)}\n          <TextInput\n            style={{\n              ...styles.input,\n              height: 40, // Set a fixed height for the input\n              borderColor: isFieldValid(key) ? 'green' : errors[key] ? 'red' : 'gray',\n            }}\n            placeholder={fieldDisplayNames[key]}\n            onChangeText={(text) => handleInputChange(key, text)}\n            value={formData[key]}\n            keyboardType={key === 'email' ? 'email-address' : 'default'}\n            secureTextEntry={key === 'password'}\n          />\n          {isFieldValid(key) && (\n            <View style={styles.iconContainer}>\n              <MaterialIcons name=\"check\" size={24} color=\"green\" style={styles.icon} />\n            </View>\n          )}\n          {errors[key] && <Text style={styles.error}>{errors[key]}</Text>}\n        </View>\n      ))}\n\n      <View style={styles.buttonContainer}>\n        {/* <Pressable style={styles.buttonPrev} onPress={() => onStepChange(1)}>\n          <Text style={styles.buttonText}>{t(\"Prev\")}</Text>\n        </Pressable> */}\n\n        <Pressable style={styles.buttonNext} onPress={() => handleSignUp(2)}>\n          <Text style={styles.buttonText}>{t(\"Next\")}</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    marginTop: 30,\n  },\n  inputContainer: {\n    position: 'relative',\n    marginBottom: 20,\n  },\n  input: {\n    width: '80%',\n    borderWidth: 1,\n    paddingLeft: 10,\n    flexDirection: 'row',\n    alignItems: 'center', // Center the icon vertically\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  error: {\n    color: 'red',\n    marginTop: 5,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center', // Center the buttons horizontally\n    width: '80%',\n    marginTop: 20,\n  },\n  buttonNext: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    maxWidth: 150, // Set your desired maximum width\n  },\n\n  icon: {\n    marginLeft: 10, // Adjust the margin as needed\n  },\n  iconContainer: {\n    position: 'absolute',\n    top: 12,\n    right: 12,\n  },\n  placeholderLabel: {\n    position: 'absolute',\n    left: 10,\n    top: -8,\n    fontSize: 12,\n    backgroundColor: 'rgb(243, 243, 243)',\n    paddingHorizontal: 5,\n    color: 'black',\n  },\n});\n\nexport default SignUpScreen;","import React, { useState } from 'react';\nimport {\n  View, Text, TextInput, Pressable, ScrollView, KeyboardAvoidingView, Platform, StyleSheet,\n} from 'react-native';\nimport { signUpValidationSchema } from '../../config/ValidationSchemas';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAddressData } from '../../redux/actions/registerActions';\nimport { useTranslation } from 'react-i18next';\nimport BackButton from './LoginButton';\n\nconst SignUp2 = ({ onStepChange }) => {\n  const addressData = useSelector((state) => state.register.addressData);\n\n  const [formData, setFormData] = useState({\n    phoneNumber: addressData.phoneNumber,\n    dateOfBirth: addressData.dateOfBirth,\n    country: addressData.country,\n    city: addressData.city,\n    street: addressData.street,\n    buildingNumber: addressData.buildingNumber,\n    entrance: addressData.entrance,\n    floor: addressData.floor,\n    apartmentNumber: addressData.apartmentNumber,\n    additionalNotes: addressData.additionalNotes,\n  });\n\n  const placeholderText = {\n    phoneNumber: t('Phone number'),\n    dateOfBirth: t('YYYY-MM-DD'),\n    country: t('Country'),\n    city: t('City'),\n    street: t('Street'),\n    buildingNumber: t('Building number'),\n    entrance: t('Entrance'),\n    floor: t('Floor'),\n    apartmentNumber: t('Apartment number'),\n    additionalNotes: t('Additional notes'),\n  };\n\n  const [errors, setErrors] = useState({});\n  const { t, i18n } = useTranslation();\n  const dispatch = useDispatch();\n\n  const handleInputChange = (key, text) => {\n    setFormData({ ...formData, [key]: text });\n    setErrors({ ...errors, [key]: null }); // Reset error when the user starts typing\n  };\n\n  const isFieldValid = (key) => {\n    if (formData[key] && !errors[key]) {\n      // Check validation conditions\n      try {\n        signUpValidationSchema.validateSyncAt(key, formData);\n        return true;\n      } catch (validationError) {\n        return false;\n      }\n    }\n    return false;\n  };\n\n  const renderLabel = (key) => {\n    return (\n      <Text style={styles.placeholderLabel}>\n        {key === 'dateOfBirth' ? t('Date of birth') : formData[key] ? placeholderText[key] : ''}\n      </Text>\n    );\n  };\n\n  const handleSignUp = (newStep) => {\n    const formErrors = {};\n    Object.keys(formData).forEach((key) => {\n      try {\n        signUpValidationSchema.validateSyncAt(key, formData);\n      } catch (validationError) {\n        formErrors[key] = validationError.message;\n      }\n    });\n\n    if (Object.keys(formErrors).length === 0) {\n      // No errors, proceed to the next step\n      setErrors({});\n      // Send data to store\n      dispatch(setAddressData(formData));\n      onStepChange(newStep);\n    } else {\n      // Validation failed, set the errors\n      setErrors(formErrors);\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      style={{ flex: 1 }}\n    >\n      <ScrollView contentContainerStyle={styles.container}>\n      <BackButton />\n        <Text style={styles.title}>{(\"Sign Up - Step 2\")}</Text>\n\n        {Object.keys(formData).map((key) => (\n          <View key={key} style={styles.inputContainer}>\n            {renderLabel(key)}\n            <TextInput\n              style={{\n                ...styles.input,\n                height: 40, // Set a fixed height for the input\n                borderColor: isFieldValid(key)\n                  ? 'green'\n                  : errors[key]\n                    ? 'red'\n                    : 'gray',\n              }}\n              placeholder={placeholderText[key]}\n              onChangeText={(text) => handleInputChange(key, text)}\n              value={formData[key]}\n              keyboardType={key === 'dateOfBirth' ? 'numeric' : 'default'}\n            />\n            {isFieldValid(key) && (\n              <View style={styles.iconContainer}>\n                <MaterialIcons name=\"check\" size={24} color=\"green\" style={styles.icon} />\n              </View>\n            )}\n            {errors[key] && <Text style={styles.error}>{errors[key]}</Text>}\n\n            {key === 'dateOfBirth' && (\n              <Text style={styles.additionalText}>\n               {t(\"Year-Month-Day\")}\n              </Text>\n            )}\n          </View>\n        ))}\n\n        <View style={styles.buttonContainer}>\n          <Pressable style={styles.buttonPrev} onPress={() => onStepChange(1)}>\n            <Text style={styles.buttonText}>{t(\"Prev\")}</Text>\n          </Pressable>\n\n          <Pressable style={styles.buttonNext} onPress={() => handleSignUp(3)}>\n            <Text style={styles.buttonText}>{t(\"Next\")}</Text>\n          </Pressable>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    marginTop: 30,\n  },\n  inputContainer: {\n    position: 'relative',\n    marginBottom: 20,\n  },\n  input: {\n    width: '80%',\n    borderWidth: 1,\n    paddingLeft: 10,\n    flexDirection: 'row',\n    alignItems: 'center', // Center the icon vertically\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  error: {\n    color: 'red',\n    marginTop: 5,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center', // Center the buttons horizontally\n    width: '80%',\n    marginTop: 20,\n  },\n  buttonPrev: {\n    backgroundColor: '#ccc',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    marginRight: 10,\n    maxWidth: 150, // Set your desired maximum width\n  },\n  buttonNext: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    maxWidth: 150, // Set your desired maximum width\n  },\n  icon: {\n    marginLeft: 10, // Adjust the margin as needed\n  },\n  iconContainer: {\n    position: 'absolute',\n    top: 12,\n    right: 12,\n  },\n  placeholderLabel: {\n    position: 'absolute',\n    left: 10,\n    top: -8,\n    fontSize: 12,\n    backgroundColor: 'rgb(243, 243, 243)',\n    paddingHorizontal: 5,\n    color: 'black',\n  },\n  additionalText: {\n    fontSize: 12,\n    color: 'gray',\n    marginLeft: 10,\n  },\n});\n\nexport default SignUp2;","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, TextInput, ScrollView, Dimensions, StyleSheet } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMedicalConditions, removeMedicalCondition } from '../../redux/actions/registerActions';\nimport { useNavigation } from '@react-navigation/native';\nimport { SERVER_BASE_URL } from '@env';\nimport { useTranslation } from 'react-i18next';\nimport BackButton from './LoginButton';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nconst windowWidth = Dimensions.get('window').width;\n\nconst MedicalConditionsComponent = ({ onStepChange }) => {\n  const [newCondition, setNewCondition] = useState('');\n  const { t, i18n } = useTranslation();\n  const user = useSelector((state) => state.register.userData);\n  const address = useSelector((state) => state.register.addressData);\n  const medicalConditions = useSelector((state) => state.register.medicalConditions);\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n\n  const data = {\n    fname: user.firstname,\n    lname: user.lastname,\n    email: user.email,\n    password: user.password,\n    phone: address.phoneNumber,\n    address: {\n      country: address.country,\n      city: address.city,\n      street: address.street,\n      buildingNumber: address.buildingNumber,\n      floor: address.floor,\n      apartmentNumber: address.apartmentNumber,\n      comments: address.additionalNotes,\n    },\n    dateOfBirth: address.dateOfBirth,\n  };\n\n  const handleSelectConditions = (condition) => {\n    if (!medicalConditions.includes(condition)) {\n      dispatch(addMedicalConditions(condition));\n    }\n    setNewCondition('');\n  };\n\n  const GoToLoginPage = async () => {\n    const clientData = await insertClientDataIntoDB(data);\n    if (clientData) {\n      const medicalConditionsInserted = await insertmedicalConditionsInDB(clientData._id);\n      if (medicalConditionsInserted) {\n        navigation.navigate('Home');\n      }\n    }\n  };\n\n  const insertClientDataIntoDB = async (ClientData) => {\n    try {\n      return await axios\n        .post(`${SERVER_BASE_URL}/api/patients//add-patient/`, ClientData)\n        .then((response) => response.data)\n        .catch((error) => {\n          console.error(error);\n          throw error;\n        });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n  };\n\n  const insertmedicalConditionsInDB = async (patient_id) => {\n    const url = `${SERVER_BASE_URL}/api/medicalConditions/add-medical-conditions/`;\n    const data = { patient: patient_id, medicalConditions: medicalConditions };\n\n    try {\n      const response = await axios.post(url, data);\n      console.log('response.data:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n  };\n\n  const removeCondition = (conditionToRemove) => {\n    dispatch(removeMedicalCondition(conditionToRemove));\n  };\n\n  const renderConditions = () => {\n    return (\n      <View style={styles.conditionsListContainer}>\n        <Text style={styles.conditionsListTitle}>Selected Medical Conditions:</Text>\n        {medicalConditions.map((condition, index) => (\n          <View key={index} style={styles.conditionItem}>\n            <Text style={styles.conditionText}>{condition}</Text>\n            <TouchableOpacity\n              style={styles.removeButtonContainer}\n              onPress={() => removeCondition(condition)}\n            >\n              <Text style={styles.removeButton}>X</Text>\n            </TouchableOpacity>\n          </View>\n        ))}\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.scrollViewContainer}>\n      <View style={styles.container}>\n        <BackButton />\n\n        <View style={styles.middleContainer}>\n          <TouchableOpacity onPress={() => onStepChange(4)} style={styles.selectConditionsButton}>\n            <MaterialIcons name=\"list\" size={24} color=\"blue\" style={styles.icon} />\n            <Text style={styles.selectConditionsButtonText}>Open to select Medical Conditions</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder={t(\"Other medical condition\")}\n            value={newCondition}\n            onChangeText={(text) => setNewCondition(text)}\n          />\n          <TouchableOpacity onPress={() => handleSelectConditions(newCondition)}>\n            <Text style={styles.addButton}>{t(\"Add\")}</Text>\n          </TouchableOpacity>\n        </View>\n\n\n        {renderConditions()}\n\n        <TouchableOpacity style={styles.registerButton} onPress={() => GoToLoginPage()}>\n          <Text style={styles.buttonText}>{t(\"Register\")}</Text>\n        </TouchableOpacity>\n\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity style={styles.buttonPrev} onPress={() => onStepChange(2)}>\n            <Text style={styles.buttonText}>{t(\"Prev\")}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollViewContainer: {\n    flexGrow: 1,\n    justifyContent: 'space-between',\n  },\n  container: {\n    flex: 1,\n  },\n  middleContainer: {\n    flex: 1,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    padding: 20,\n    maxWidth: 600,\n    marginHorizontal: 'auto',\n  },\n  selectConditionsButton: {\n    borderRadius: 5,\n    padding: 15,\n    marginTop: 30,\n    borderWidth: 2,\n    borderColor: 'blue',\n    shadowOpacity: 0.3,\n    shadowRadius: 4,\n    elevation: 5,\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: windowWidth - 40,\n  },\n  selectConditionsButtonText: {\n    color: 'black',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 10,\n    maxWidth: 600,\n    width: '100%',\n    justifyContent: 'space-between',\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 10,\n    marginRight: 10,\n  },\n  addButton: {\n    color: 'blue',\n    padding: 10,\n  },\n  conditionsListContainer: {\n    marginTop: 10,\n    width: '100%',\n    maxWidth: 600,\n  },\n  conditionsListTitle: {\n    color: 'green',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  conditionItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: 'green',\n    padding: 10,\n    margin: 5,\n    backgroundColor: 'transparent',\n  },\n  conditionText: {\n    color: 'black',\n    marginRight: 5,\n    fontWeight: 'bold',\n  },\n  removeButtonContainer: {\n    position: 'absolute',\n    right: 10,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n  },\n  removeButton: {\n    marginLeft: 5,\n    color: 'green',\n    fontWeight: 'bold',\n  },\n  registerButton: {\n    backgroundColor: 'blue',\n    borderRadius: 10,\n    padding: 15,\n    alignItems: 'center',\n    marginTop: 20,\n    width: '100%',\n    maxWidth: windowWidth - 40,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  buttonPrev: {\n    backgroundColor: '#ccc',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    margin: 10,\n  },\n});\n\nexport default MedicalConditionsComponent;\n","import React, { useState, useEffect } from 'react';\nimport { View, TextInput, TouchableOpacity, FlatList, Text, StyleSheet } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMedicalConditions } from '../../redux/actions/registerActions';\nimport medicalConditionsData from '../../medicinenetDiseases'; // Adjust the path accordingly\nimport { useTranslation } from 'react-i18next';\n\nconst MedicalConditionsList = ({ onStepChange }) => {\n  const { t, i18n } = useTranslation();\n  const [inputValue, setInputValue] = useState('');\n  const [filteredConditions, setFilteredConditions] = useState([]);\n  const [selectedCondition, setSelectedCondition] = useState(null); // Track the selected condition\n  const dispatch = useDispatch();\n  const medicalConditions = useSelector((state) => state.register.medicalConditions);\n\n  const handleInputChange = (text) => {\n    setInputValue(text);\n\n    // Filter the list of medical conditions according to the entered input\n    const filteredData = text.trim() !== ''\n      ? medicalConditionsData\n        .filter(conditionObj => conditionObj.disease.toLowerCase().startsWith(text.toLowerCase()))\n        .map(conditionObj => conditionObj.disease)\n      : [];\n\n    setFilteredConditions(filteredData);\n  };\n\n  const handleSelectCondition = (condition) => {\n    if (!medicalConditions.includes(condition)) {\n      dispatch(addMedicalConditions(condition));\n      setSelectedCondition(condition); // Set the selected condition\n    }\n  };\n\n\n  const renderItem = ({ item }) => (\n    <TouchableOpacity\n      onPress={() => handleSelectCondition(item)}\n      style={[\n        styles.conditionButton,\n        selectedCondition === item && styles.selectedConditionButton,\n      ]}\n    >\n      <Text style={[selectedCondition === item && { color: 'white' }]}>\n        {item}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.closeButton} onPress={() => onStepChange(3)}>\n        <Text style={styles.closeButtonText}>Close</Text>\n      </TouchableOpacity>\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Enter medical condition\"\n          value={inputValue}\n          onChangeText={handleInputChange}\n          style={styles.input}\n        />\n      </View>\n\n      <View style={styles.centeredContainer}>\n        {filteredConditions.length > 0 && (\n          <FlatList\n            data={filteredConditions}\n            renderItem={renderItem}\n            keyExtractor={(item) => item}\n            contentContainerStyle={styles.listContainer} // Added contentContainerStyle\n          />\n        )}\n      </View>\n\n\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  inputContainer: {\n    marginTop: 30,\n  },\n  input: {\n    height: 40,\n    borderColor: 'green',\n    borderWidth: 1,\n    borderRadius: 10,\n    marginBottom: 10,\n    padding: 10,\n  },\n\n  conditionButton: {\n    backgroundColor: '#e0e0e0',\n    borderRadius: 10,\n    padding: 10,\n    marginVertical: 5,\n    alignItems: 'center',\n    minWidth: 300, // Adjust the minimum width as needed\n  },\n\n  selectedConditionButton: {\n    backgroundColor: 'blue',\n  },\n\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    left: 10,\n  },\n  closeButtonText: {\n    fontSize: 16,\n    color: 'blue',\n  },\n  centeredContainer: {\n    flex: 1,\n    justifyContent: 'center', // Center the content vertically\n  },\n  listContainer: {\n    alignItems: 'center', // Center the items horizontally\n  },\n});\n\nexport default MedicalConditionsList;\n","import React, { useEffect, useState } from 'react';\nimport SignUpScreen from '../components/signUp/signUp1';\nimport SignUp2 from '../components/signUp/SignUp2';\nimport MedicalConditionsComponent from '../components/signUp/SignUp3';\nimport MedicalConditionsList from '../components/signUp/MedicalConditionsList';\nimport { useTranslation } from 'react-i18next';\nimport { StyleSheet, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native';\n\nimport { useDispatch } from 'react-redux';\nimport { resetRegisterData } from '../redux/actions/registerActions';\n\nconst SignUpPage = () => {\n  const [step, setStep] = useState(1);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Dispatch the action to reset the Redux state\n    dispatch(resetRegisterData());\n  }, [dispatch]);\n  const { t, i18n } = useTranslation();\n\n\n  const handleStepChange = (newStep) => {\n    setStep(newStep);\n  };\n\n  return (\n    <>\n      <TouchableOpacity style={styles.translateButton} onPress={() => {i18n.language == \"he\" ? i18n.changeLanguage('en') : i18n.changeLanguage('he') }}>\n        <Text style={styles.translateButtonText}>{i18n.language == \"he\" ? \"English\" : \"עברית\"}</Text>\n      </TouchableOpacity>\n      {step === 1 && <SignUpScreen onStepChange={handleStepChange} />}\n      {step === 2 && <SignUp2 onStepChange={handleStepChange} />}\n      {step === 3 && <MedicalConditionsComponent onStepChange={handleStepChange} />}\n      {step === 4 && <MedicalConditionsList onStepChange={handleStepChange} />}\n      {step === 3 && <MedicalConditionsComponent onStepChange={handleStepChange} />}\n      {step === 4 && <MedicalConditionsList onStepChange={handleStepChange} />}\n    </>\n  );\n};\n\n\n\nconst styles = StyleSheet.create({\n  translateButton: {\n    // position: 'absolute',\n    padding: 10,\n    margin: 10,\n  },\n  translateButtonText: {\n    color: 'blue',\n  },\n});\n\nexport default SignUpPage;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { View, Text, StyleSheet, Modal, TouchableOpacity } from 'react-native';\nimport { Table, Row, TableWrapper, Cell } from 'react-native-table-component';\nimport { SERVER_BASE_URL } from '@env';\nimport { useTranslation } from 'react-i18next';\n\n\n\nconst ShowAlerts = ({ navigation, data, showHistory }) => {\n    const [popupVisible, setPopupVisible] = useState(false);\n    const [selectedRowData, setSelectedRowData] = useState(null);\n    const { t, i18n } = useTranslation();\n\n    const openPopup = (rowData) => {\n        setSelectedRowData(rowData);\n        setPopupVisible(true);\n    };\n\n    const closePopup = () => {\n        setPopupVisible(false);\n        if (!selectedRowData) {\n            setSelectedRowData(null);\n        }\n    };\n\n    const cancelAlert = async (alertId) => {\n        const url = `${SERVER_BASE_URL}/api/alerts/update-alert/${alertId}`;\n        const statusUpdate = { \"status\": \"canceled\" };\n        try {\n            const response = await axios.put(url, statusUpdate);\n            console.log('Response from server: ', response.data);\n            closePopup();\n            navigation.reset({\n                index: 0,\n                routes: [{ name: \"Home\" }]\n            });\n\n        } catch (error) {\n            console.error('Error updating alert:', error);\n        }\n    };\n\n    const renderKeyValuePairs = (data) => {\n        const keysWithValues = Object.entries(data).filter(([key, value]) => value !== null && value !== undefined && key != \"_id\");\n        return keysWithValues.map(([key, value]) => (\n            <View key={key} style={styles.keyValueContainer}>\n                <Text /*style={styles.boldText}*/>{key}: </Text>\n                <Text>{value}</Text>\n            </View>\n        ));\n    };\n\n    return (\n        <View style={styles.container}>\n            {data.length !== 0 &&\n                <Text style={[styles.title, styles.boldText]}>{t(\"You can see more information by tapping on one of the table rows\")} {\"\\n\\n\\n\"}</Text>}\n            {data.length !== 0 ? (\n                <View>\n                    <Table borderStyle={{ borderWidth: 1, borderColor: '#C1C0B9' }}>\n                        <Row\n                            // data={['Date', 'Location', 'Distress description', 'Level', 'Status']}\n                            data={['Date', 'Status']}\n                            style={{ height: 40, backgroundColor: 'black' }}\n                            textStyle={{ textAlign: 'center', fontWeight: 'bold', color: 'white' }}\n                            // widthArr={[100, 100, 100, 100, 100]}\n                            widthArr={[100, 100]}\n                        />\n                        {data.map((rowData, index) => (\n                            <TableWrapper key={index} style={{ flexDirection: 'row' }}>\n                                <Cell\n                                    data={`${new Date(rowData.date).toISOString().split('T')[1].split('.')[0]}${\"\\n\"}${new Date(rowData.date).toISOString().split('T')[0]}`}\n                                    textStyle={[styles.cellText, { width: 100 }]}\n                                    width={100}\n                                    onPress={() => openPopup(rowData)}\n                                />\n                                <Cell\n                                    data={rowData.status}\n                                    textStyle={[styles.cellText, { width: 100 }]}\n                                    width={100}\n                                    onPress={() => openPopup(rowData)}\n                                />\n                            </TableWrapper>\n                        ))}\n                    </Table>\n\n                    <Modal\n                        animationType=\"slide\"\n                        transparent={true}\n                        visible={popupVisible}\n                        onRequestClose={closePopup}\n                    >\n                        <View style={styles.modalContainer}>\n                            <View style={styles.modalContent}>\n                                {selectedRowData ? (\n                                    <View>\n                                        <Text style={[styles.title, styles.boldText]}>{t(\"Alert information:\")} {\"\\n\\n\"}</Text>\n                                        <Text>\n                                            <Text style={styles.boldText}>{t(\"Date:\")}</Text>\n                                            <Text>{` ${new Date(selectedRowData.date).toISOString().split('T')[1].split('.')[0]}  ${new Date(selectedRowData.date).toISOString().split('T')[0]}`}</Text>\n                                        </Text>\n                                        {/* <Text> */}\n                                        <Text style={styles.boldText}>{t(\"Location:\")}</Text>\n                                        {renderKeyValuePairs(selectedRowData.location)}\n                                        {/* <Text> {selectedRowData.location}</Text> */}\n                                        {/* </Text> */}\n                                        <Text>\n                                            <Text style={styles.boldText}>{t(\"Distress description:\")}</Text>\n                                            <Text> {selectedRowData.distressDescription}</Text>\n                                        </Text>\n                                        <Text>\n                                            <Text style={styles.boldText}>{t(\"Level:\")}</Text>\n                                            <Text> {selectedRowData.level}</Text>\n                                        </Text>\n                                        <Text>\n                                            <Text style={styles.boldText}>{t(\"Status:\")}</Text>\n                                            <Text> {selectedRowData.status}</Text>\n                                        </Text>\n                                    </View>\n                                ) : null}\n                                <View style={styles.buttonContainer}>\n                                    {!showHistory && <TouchableOpacity onPress={() => cancelAlert(selectedRowData._id)}>\n                                        <Text style={styles.cancelButton}>{t(\"Cancel alert\")}</Text>\n                                    </TouchableOpacity>}\n                                    <TouchableOpacity onPress={closePopup}>\n                                        <Text style={styles.closeButton}>{t(\"Close\")}</Text>\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n                        </View>\n                    </Modal>\n                </View>\n            ) : (\n                <Text>{t(\"No alerts\")}</Text>\n            )}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        padding: 16,\n        paddingTop: 30,\n        textAlign: 'center',\n        alignItems: 'center'\n    },\n    title: {\n        textAlign: 'center'\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    cellText: {\n        textAlign: 'center',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        numberOfLines: 1,\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    cancelButton: {\n        marginTop: 20,\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    modalContent: {\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 10,\n        width: '80%',\n        alignItems: 'center',\n    },\n    closeButton: {\n        marginTop: 20,\n        color: 'blue',\n        fontWeight: 'bold',\n    },\n    boldText: {\n        fontWeight: 'bold',\n    },\n    keyValueContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 5,\n    },\n});\n\nexport default ShowAlerts;\n","import React, { useEffect, useState } from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet } from 'react-native';\n// import ShowHistory from '../components/history/ShowHistory';\n// import ShowActiveAlerts from '../components/alerts/ShowActiveAlerts';\nimport { useSelector } from 'react-redux';\nimport ShowAlerts from '../components/history/ShowAlerts';\nimport { SERVER_BASE_URL } from '@env';\nimport axios from 'axios';\nimport { useTranslation } from 'react-i18next';\n\nconst HistoryPage = ({ navigation }) => {\n  const { t, i18n } = useTranslation();\n  const [showHistory, setShowHistory] = useState(true);\n  const user = useSelector((state) => state.userReducer.user);\n  const [data, setData] = useState([]);\n\n  const onShowHistory = async () => {\n    try {\n      const patientId = user._id;\n      const response = await axios.post(`${SERVER_BASE_URL}/api/alerts/get-by-patient-id/`, {\n        patientId: patientId,\n      });\n      setData(response.data);\n      setShowHistory(true)\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n\n  useEffect(() => {\n    onShowActiveAlerts();\n  }, [])\n\n  const onShowActiveAlerts = async () => {\n    try {\n      const patientId = user._id;\n      const response = await axios.get(`${SERVER_BASE_URL}/api/alerts/get-active-alerts-by-patient-id/${patientId}`);\n      setData(response.data);\n      setShowHistory(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.alertStatusButtons}>\n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: showHistory ? 'lightblue' : 'white' }]}\n          onPress={() => onShowHistory()}\n        >\n          <Text style={styles.buttonText}>{t(\"Show History\")}</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: !showHistory ? 'lightblue' : 'white' }]}\n          onPress={() => onShowActiveAlerts()}\n        >\n          <Text style={styles.buttonText}>{t(\"Show Active Alerts\")}</Text>\n        </TouchableOpacity>\n      </View>\n      <ShowAlerts data={data} showHistory={showHistory} navigation={navigation}/>\n      {/* {showHistory ? (\n        <ShowHistory />\n      ) : (\n        <ShowActiveAlerts user={user} />\n      )} */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  alertStatusButtons: {\n    flexDirection: 'row',\n    alignItems: 'center',\n},\n  button: {\n    padding: 10,\n    borderRadius: 5,\n    margin: 5,\n  },\n  buttonText: {\n    fontWeight: 'bold',\n  },\n});\n\nexport default HistoryPage;\n","// import React from 'react';\n// import { Text, View } from 'react-native';\n\n// const LocationButton = () => {\n\n//     return (\n//         <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n//             <Text>Hello</Text>\n//         </View>\n//     ) \n// }\n// export default LocationButton;\n\n// export function LocationButton(status) {\n//     //need to go to DB every minitues and set the location arry\n//     //if status is on/off \n\n// }\n\n// export function LocationButton(status) {\n//     // Check status and perform actions accordingly\n//     if (status==true) {\n//         // Start checking location every minute\n//         console.log('Location checking started...');\n//         // Implement the logic for checking location at intervals here\n//     } else {\n//         // Stop checking location\n//         console.log('Location checking stopped.');\n//         // Implement logic to stop location checks, if needed\n//     }\n// }\n\n// This function handles the behavior of a location button based on the 'status' parameter.\n// This function handles the behavior of a location button based on the 'status' parameter.\n\n\nexport function LocationButton(status) {\n    let locationInterval; // Variable to store the interval reference\n\n     // Function to be executed at intervals for location checking\n     function checkLocation() {\n        console.log('Checking location...'); // Placeholder action, replace with actual location checking logic\n    }\n    // Check status and perform actions accordingly\n    if (status === true) {\n        // Start checking location every minute\n        console.log('Location checking started...');\n        locationInterval = setInterval(checkLocation, 60000); // Start checking location every minute\n    } else {\n        // Stop checking location\n        console.log('Location checking stopped.');\n        clearInterval(locationInterval); // Stop the location checking interval\n    }\n\n   \n}\n\n\n\n","// import { View, Text } from \"react-native\"\n// import React from 'react';\n\n\n// const SettingsPage = ()=>{\n//     return(\n//         <View>\n//             <Text>SettingsPage</Text>\n//         </View>\n//     )\n// };\n// export default SettingsPage;\n\nimport * as React from 'react';\nimport { Switch } from 'react-native-paper';\nimport { View, Text, StyleSheet } from \"react-native\"\nimport { LocationButton } from '../components/home/locationButton';\n\nconst SettingsPage = () => {\n    const [isSwitchOn, setIsSwitchOn] = React.useState(true);\n\n    const onToggleSwitch = () => {\n        setIsSwitchOn(previousState => !previousState);\n        console.log(\"isSwitchOn\", isSwitchOn);\n        // navigation.navigate('HomeScreen', {locationPressed: isSwitchOn});\n        LocationButton(isSwitchOn);\n    }\n\n    return (\n        <View style={styles.pageContainer}>\n            <Text>SettingsPage</Text>\n            <Switch value={isSwitchOn} onValueChange={onToggleSwitch} />\n        </View>\n    )\n};\nconst styles = StyleSheet.create({\n    pageContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n    }\n});\n\nexport default SettingsPage;","import React, { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StyleSheet, View, TouchableOpacity, Animated, Easing, Text } from 'react-native';\n\nconst SosButton = ({ onStepChange }) => {\n    const { t, i18n } = useTranslation();\n    const animatedValues = useRef([\n        new Animated.Value(0),\n        new Animated.Value(0),\n        new Animated.Value(0),\n    ]).current;\n\n    useEffect(() => {\n        startAnimations();\n    }, []);\n\n    const startAnimations = () => {\n        animatedValues.forEach((value, index) => {\n            Animated.loop(\n                Animated.sequence([\n                    Animated.timing(value, {\n                        toValue: 1,\n                        duration: 1000 + index * 200,\n                        easing: Easing.linear,\n                        useNativeDriver: true,\n                    }),\n                    Animated.timing(value, {\n                        toValue: 0,\n                        duration: 0,\n                        useNativeDriver: true,\n                    }),\n                ]),\n            ).start();\n        });\n    };\n\n    const animatedCircles = animatedValues.map((value, index) => {\n        const interpolateValue = value.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n        });\n\n        const animatedStyle = {\n            transform: [\n                { translateX: value.interpolate({ inputRange: [0, 1], outputRange: [0, 0] }) },\n                { translateY: value.interpolate({ inputRange: [0, 1], outputRange: [0, 0] }) },\n                { scale: value.interpolate({ inputRange: [0, 0.3, 0.5], outputRange: [1, 1.1, 1.3] }) },\n            ],\n            opacity: value.interpolate({ inputRange: [0, 0.7, 1], outputRange: [1, 0.3, 0] }),\n        };\n\n        return (\n            <Animated.View key={index} style={[styles.animationCircle, animatedStyle]} />\n        );\n    });\n\n    const onPress = () => {\n        onStepChange();\n    };\n\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity style={styles.button} onPress={onPress}>\n                <Text style={styles.buttonText}>{t(\"S.O.S\")}</Text>\n                {animatedCircles}\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        width: 150,\n        height: 150,\n        borderRadius: 75,\n        backgroundColor: 'red',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1,\n    },\n    buttonText: {\n        color: 'white',\n        fontSize: 24,\n        fontWeight: 'bold',\n    },\n    animationCircle: {\n        position: 'absolute',\n        width: 140,\n        height: 140,\n        borderRadius: 75,\n        borderWidth: 2.5,\n        borderColor: 'red',\n    },\n});\n\nexport default SosButton;\n","import { useNavigation } from '@react-navigation/native';\nimport React from 'react';\nimport { StyleSheet, TouchableOpacity, View, Text } from 'react-native';\nimport { useTranslation } from 'react-i18next';\n\n\nconst Status = ({ onStepChange, addParamsToAlert }) => {\n    const { t, i18n } = useTranslation();\n    const handlePress = (level) => {\n        const lev = { level: level }\n        addParamsToAlert(lev);\n        onStepChange();\n    };\n    const levels = [t(\"Easy\"), t(\"Medium\"), t(\"Hard\")];\n    const enLevels = [\"Easy\", \"Medium\", \"Hard\"];\n    const levelsColors = [\"yellow\", \"orange\", \"red\"]\n    return (\n        <View style={styles.container}>\n            <Text>{t(\"Choose your level:\")}</Text>\n            {levels.map((item, index) => (\n                <TouchableOpacity style={[styles.button, { backgroundColor: levelsColors[index] }]} key={index} onPress={() => handlePress(enLevels[index])}>\n                    <Text>{item}</Text>\n                </TouchableOpacity>\n            ))}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        width: 150,\n        height: 150,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginVertical: 10,\n        borderRadius: 15,\n    },\n    buttonText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#fff',\n    },\n});\n\nexport default Status;\n","import React from 'react';\nimport { StyleSheet, View, TouchableOpacity, Text } from 'react-native';\nimport { useTranslation } from 'react-i18next';\n\n\nconst ProblemType = ({ onStepChange, addParamsToAlert }) => {\n    const { t, i18n } = useTranslation();\n    const handlePress = (problem) => {\n        const prob = { problem: problem }\n        addParamsToAlert(prob)\n        onStepChange();\n    };\n    const problems = [t(\"Injury\"), t(\"health event\")];\n\n    return (\n        <View style={styles.container}>\n            \n            <Text>{t(\"Choose your problem: \")}</Text>\n            {problems.map((item, index) => (\n                <TouchableOpacity style={styles.button} key={index} onPress={() => handlePress(item)}>\n                    <Text style={styles.buttonText}>{item}</Text>\n                </TouchableOpacity>\n            ))}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        width: 150,\n        height: 150,\n        backgroundColor: 'orange',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginVertical: 10,\n        borderRadius: 10,\n    },\n    buttonText: {\n        color: 'white',\n        fontSize: 20,\n        fontWeight: 'bold'\n    },\n});\n\nexport default ProblemType;\n","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport axios from 'axios';\nimport { SERVER_BASE_URL } from '@env';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nconst SendAlert = ({ onStepChange, alert, setAlertId }) => {\n    const { t, i18n } = useTranslation();\n    const [alertSent, setAlertSent] = useState();\n    const user = useSelector((state) => state.userReducer.user);\n    useEffect(() => {\n        const addAlert = async () => {\n            const url = `${SERVER_BASE_URL}/api/alerts/add-alert/`;\n\n            const alertData = {\n                patient: user._id,\n                distressDescription: alert.problem,\n                status: 'not treated',\n                location: alert.location,\n                level: alert.level,\n            };\n            console.log('alert data', alertData)\n            try {\n                const response = await axios.post(url, alertData);\n                console.log('Response from server: ', response.data);\n                setAlertSent(true);\n                setAlertId(response.data._id);\n                // setTimeout(() => {\n                //     onStepChange();\n                // }, 5000);\n\n            } catch (error) {\n                console.error('Error sending data to server:', error);\n                setAlertSent(false);\n\n            }\n        };\n\n        addAlert();\n    }, []);\n\n    return (\n        <View style={styles.container}>\n            {alertSent != null && <Text>\n                {alertSent ? t('Alert sent successfully!') : t('Sending the alert failed.')}\n            </Text>}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n})\n\nexport default SendAlert;\n","import Geolocation from '@react-native-community/geolocation';\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport MapboxGeocoding from '@mapbox/mapbox-sdk/services/geocoding';\nimport { ACCESS_TOKEN } from '@env';\nimport { useSelector } from 'react-redux';\nimport { t } from 'i18next';\nimport { useTranslation } from 'react-i18next';\n\nconst mapboxClient = MapboxGeocoding({ accessToken: ACCESS_TOKEN });\n\nconst FindLocation = ({ onStepChange, addParamsToAlert }) => {\n    const [location, setLocation] = useState(null);\n    const [address, setAddress] = useState({});\n    const [defaultAddress, setDefaultAddress] = useState({});\n    const [addressInput, setAddressInput] = useState('');\n    const user = useSelector((state) => state.userReducer.user);\n\n    useEffect(() => {\n        findDefaultAddress();\n        findUserLocation();\n    }, []);\n    const findDefaultAddress = () => {\n        console.log(user.address);\n        setDefaultAddress(user.address);\n        console.log(defaultAddress);\n    };\n\n    const findUserLocation = () => {\n        Geolocation.getCurrentPosition(\n            position => {\n                const { latitude, longitude } = position.coords;\n                setLocation({ latitude: latitude, longitude: longitude });\n                getAddressFromCoordinates(latitude, longitude);\n            },\n            error => {\n                console.log('Error:', error.message);\n                // Handle error\n            },\n            { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }\n        );\n    };\n\n    const handleInputChange = (address) => {\n        setAddressInput(address);\n    };\n\n    const getAddressFromCoordinates = async (latitude, longitude) => {\n        try {\n            const response = await mapboxClient.reverseGeocode({\n                query: [longitude, latitude],\n                types: ['address', 'place', 'poi'],\n            }).send();\n\n            if (response && response.body && response.body.features && response.body.features.length > 0) {\n                const addressData = response.body.features[0];\n                // setAddress(addressData.place_name);\n\n                const separatedAddress = addressData.place_name.split(', ');\n                if (separatedAddress.length === 3) {\n                    const newAddress = {\n                        street: separatedAddress[0],\n                        city: separatedAddress[1],\n                        country: separatedAddress[2]\n                    };\n                    setAddress(newAddress);\n                }\n            } else {\n                console.log('No address information was found for this location.');\n            }\n        } catch (error) {\n            console.error('Error reading the information: ', error);\n        }\n    };\n\n    const handlePress = (location) => {\n        const loc = { location: location }\n        console.log(\"loc\",loc);\n        addParamsToAlert(loc);\n        onStepChange();\n    };\n\n    const handelInsertAdrees = () => {\n        console.log(addressInput);\n        const addressJson = {\n            address: addressInput\n        }\n        console.log(addressJson);\n        handlePress(addressJson);\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text>\n                {location ? t('Another address was found. Choose your address: ') : t('Your address: ')}\n            </Text>\n            {location && (\n                <View>\n                    <TouchableOpacity style={styles.button} onPress={() => handlePress(address)}>\n                        <Text style={styles.buttonText}>\n                            {address.street}{\"\\n\"}\n                            {address.city}{\"\\n\"}\n                            {address.country}\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            )}\n            <TouchableOpacity style={styles.button} onPress={() => handlePress(defaultAddress)}>\n                {defaultAddress ? <Text style={styles.buttonText}>\n                    {defaultAddress.street} {defaultAddress.buildingNumber}{\"\\n\"}\n                    {defaultAddress.city}{\"\\n\"}\n                    {defaultAddress.country}\n                </Text> :\n                    <Text>\n                        {t(\"There is no default address\")}\n                    </Text>}\n\n            </TouchableOpacity>\n            <View style={styles.inputContainer}>\n                <TextInput\n                    style={styles.input}\n                    placeholder={t(\"Enter address...\")}\n                    value={addressInput}\n                    onChangeText={handleInputChange}\n                />\n                <TouchableOpacity style={styles.submitButton} onPress={() => handelInsertAdrees()}>\n                    <Text style={styles.submitButtonText}>{t(\"OK\")}</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    input: {\n        height: 50,\n        borderColor: 'orange',\n        borderWidth: 1,\n        width: 100,\n        marginVertical: 10,\n        borderRadius: 5,\n        paddingHorizontal: 10,\n    },\n    submitButton: {\n        width: 40,\n        height: 50,\n        backgroundColor: 'orange',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 10,\n        marginLeft: 10,\n    },\n    submitButtonText: {\n        color: 'white',\n        fontSize: 16,\n    },\n    button: {\n        width: 150,\n        height: 150,\n        backgroundColor: 'orange',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginVertical: 10,\n        borderRadius: 10,\n    },\n    buttonText: {\n        color: 'white',\n        fontSize: 18,\n        fontWeight: 'bold'\n    },\n    addressText: {\n        fontSize: 16,\n        marginBottom: 5,\n    },\n});\n\nexport default FindLocation;\n","import React from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { useTranslation } from 'react-i18next';\n\nconst CancelButton = ({ navigation }) => {\n    const { t, i18n } = useTranslation();\n    const handleCancel = () => {\n        navigation.reset({\n            index: 0,\n            routes: [{ name: \"Home\" }]\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity style={styles.cancelButton} onPress={() => handleCancel()}>\n                <Text style={styles.cancelButtonText}>{t(\"Cancel\")}</Text>\n            </TouchableOpacity>\n        </View>\n    )\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#fff',\n    },\n    cancelButton: {\n        width: 80,\n        height: 35,\n        backgroundColor: 'blue',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 5,\n        marginLeft: 10,\n        marginTop: 5\n    },\n    cancelButtonText: {\n        color: 'white',\n        fontSize: 16,\n    },\n});\n\nexport default CancelButton;\n","import React from \"react\";\nimport { Modal, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { useTranslation } from 'react-i18next';\n\nconst AlertSendingConfirmationModel = ({ visible, onSendAlert, onClose }) => {\n    const { t, i18n } = useTranslation();\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={visible}\n            onRequestClose={onClose}\n        >\n            <View style={styles.centeredView}>\n                <View style={styles.modalView}>\n                    <Text style={styles.modalText}>{t(\"Are you sure you want to send an alert?\")}</Text>\n                    <View style={styles.buttonContainer}>\n                        <TouchableOpacity style={styles.button} onPress={onSendAlert}>\n                            <Text style={styles.buttonText}>{t(\"Send alert\")}</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={styles.button} onPress={onClose}>\n                            <Text style={styles.buttonText}>{t(\"Cancel\")}</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            </View>\n        </Modal>\n    )\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 22,\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: 'white',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: 'center',\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    button: {\n        borderRadius: 5,\n        padding: 10,\n        elevation: 2,\n        marginHorizontal: 10,\n    },\n    buttonText: {\n        color: 'blue',\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n});\n\nexport default AlertSendingConfirmationModel;","// import React from 'react';\n// import { TouchableOpacity, View, StyleSheet } from 'react-native';\n// import Icon from 'react-native-vector-icons/MaterialIcons'; // Assuming you've imported the MaterialIcons from react-native-vector-icons\n\n// const SquareIconButton = ({ onPress, iconName }) => {\n//   return (\n//     <TouchableOpacity onPress={onPress}>\n//       <View style={styles.button}>\n//         <Icon name={iconName} size={30} color=\"black\" />\n//       </View>\n//     </TouchableOpacity>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   button: {\n//     width: 50,\n//     height: 50,\n//     backgroundColor: 'lightblue',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     borderRadius: 10,\n//   },\n// });\n\n// export default SquareIconButton;\n\nimport React from 'react';\nimport { TouchableOpacity, View, StyleSheet } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nconst SquareIconButton = ({iconName, isPressed }) => {\n  return (\n    <TouchableOpacity>\n      <View style={[styles.button, { backgroundColor: isPressed ? 'green' : 'gray' }]}>\n        <Icon name={iconName} size={30} color=\"black\" />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 50,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n  },\n});\n\nexport default SquareIconButton;\n","import React from \"react\";\nimport { SERVER_BASE_URL } from '@env';\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\n\nconst CancelAlertButton = ({ navigation, alertId }) => {\n    const { t, i18n } = useTranslation();\n    const url = `${SERVER_BASE_URL}/api/alerts/update-alert/${alertId}`;\n\n    const handleCancelAlert = async () => {\n        const statusUpdate = { \"status\": \"canceled\" };\n        try {\n            const response = await axios.put(url, statusUpdate);\n            console.log('Response from server: ', response.data);\n            navigation.reset({\n                index: 0,\n                routes: [{ name: \"Home\" }]\n            });\n\n        } catch (error) {\n            console.error('Error updating alert:', error);\n        }\n    };\n\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity style={styles.submitButton} onPress={() => handleCancelAlert()}>\n                <Text style={styles.submitButtonText}>{t(\"Cancel alert\")}</Text>\n            </TouchableOpacity>\n        </View>\n    )\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#fff',\n    },\n    submitButton: {\n        width: 100,\n        height: 45,\n        backgroundColor: 'blue',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 5,\n        marginLeft: 10,\n        marginTop: 5\n    },\n    submitButtonText: {\n        color: 'white',\n        fontSize: 16,\n    },\n});\n\nexport default CancelAlertButton;","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport SosButton from '../components/sos_button/SosButton';\nimport Status from '../components/sos_button/Status';\nimport ProblemType from '../components/sos_button/ProblemType';\nimport SendAlert from '../components/sos_button/SendAlert';\nimport FindLocation from '../components/sos_button/FindLocation';\nimport CancelButton from '../components/sos_button/CancelButton';\nimport AlertSendingConfirmationModel from '../components/sos_button/AlertSendingConfirmationModel';\nimport SquareIconButton from '../components/home/SquareIconButton';\nimport { LocationButton } from '../components/home/locationButton';\nimport CancelAlertButton from '../components/sos_button/CancelAlertButton';\nimport AudioRecognition from '../components/AudioRecognition';\n\nconst HomeScreen = ({ navigation }) => {\n    const [step, setStep] = useState(1);\n    const [alert, setAlert] = useState();\n    const [alertId, setAlertId] = useState('');\n    const [modalVisible, setModalVisible] = useState(true);\n    const [audio, setAudio] = useState(false);\n    const [isRecording,setIsRecording] = useState(false);\n    const [locationPressed, setlocationPressed] = useState();\n    // const { locationPressed } = route.params;\n\n    const handleCancel = () => {\n        // setModalVisible(false);\n        setStep(1);\n\n    };\n\n    const onSendAlert = () => {\n        handleStepChange()\n    }\n\n    const handleStepChange = () => {\n        if (step == 6) {\n            setStep(1);\n        }\n        else {\n            setStep(step + 1);\n        }\n\n    };\n\n    const addParamsToAlert = (jsonParams) => {\n        setAlert({ ...alert, ...jsonParams })\n    };\n\n    const AudioButtonPress = () => {\n        if (audio == false) {\n            setAudio(true);\n        }\n        else {\n            setAudio(false);\n        }\n    }\n\n    useFocusEffect(\n        React.useCallback(() => {\n            setStep(1);\n        }, [])\n    );\n\n    const handlelocationPress = () => {\n        console.log('Button pressed!');\n        setlocationPressed(!locationPressed);\n        console.log('loc', locationPressed)\n        LocationButton(locationPressed)\n        // setStep(7)\n    };\n\n    return (\n        <>\n            \n            {\n                step === 1 &&\n                <View style={styles.container}>\n                    <View style={styles.buttonsContainer}>\n                        <SosButton onStepChange={handleStepChange} style={{ backgroundColor: 'transparent' }} />\n                        <View style={styles.iconsContainer}>\n                            <View style={styles.iconRow}>\n                                <SquareIconButton iconName=\"location-on\" isPressed={locationPressed} />\n                                <View style={styles.iconSpacing} />\n                                <SquareIconButton iconName=\"keyboard\" />\n                                <View style={styles.iconSpacing} />\n                                <SquareIconButton iconName=\"keyboard\" />\n                                <View style={styles.iconSpacing} />\n                                <SquareIconButton iconName=\"keyboard\" />\n                            </View>\n                        </View>\n                    </View>\n                </View>\n            }\n            {\n                step === 2 &&\n                <>\n                    <CancelButton navigation={navigation} />\n                    <Status onStepChange={handleStepChange} addParamsToAlert={addParamsToAlert} />\n                </>\n            }\n            {\n                step === 3 &&\n                <>\n                    <CancelButton navigation={navigation} />\n                    <ProblemType onStepChange={handleStepChange} addParamsToAlert={addParamsToAlert} />\n                </>\n            }\n            {\n                step === 4 &&\n                <>\n                    <CancelButton navigation={navigation} />\n                    <FindLocation onStepChange={handleStepChange} addParamsToAlert={addParamsToAlert} />\n                </>\n            }\n            {\n                step === 5 &&\n                <>\n\n                    {/* <CancelButton navigation={navigation} /> */}\n                    <AlertSendingConfirmationModel\n                        visible={modalVisible}\n                        onClose={handleCancel}\n                        onSendAlert={onSendAlert} />\n                </>\n            }\n            {\n                step === 6 &&\n                <>\n                    {/* <CancelButton navigation={navigation}/> */}\n                    <CancelAlertButton navigation={navigation} alertId={alertId} />\n                    <SendAlert alert={alert} onStepChange={handleStepChange} setAlertId={setAlertId} />\n                </>\n            }\n            {\n                step === 7 &&\n                <>\n                    <LocationButton/>\n                </>\n            }\n        </>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'white',\n    },\n    buttonsContainer: {\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingTop: 20,\n    },\n    iconsContainer: {\n        alignItems: 'center',\n        marginTop: 50\n    },\n    iconRow: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    iconSpacing: {\n        width: 20, // Adjust spacing between icons\n    },\n});\nexport default HomeScreen;\n","import { View, Text } from \"react-native\"\nimport React from 'react';\n\n\n\nconst AccessibilityPage = ()=>{\n    return(\n        <View>\n            <Text>AccessibilityPage</Text>\n        </View>\n    )\n};\nexport default AccessibilityPage;","import React, { useEffect, useState } from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport AntDesign from \"react-native-vector-icons/AntDesign\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useSelector } from \"react-redux\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useTranslation } from \"react-i18next\";\n\nconst SideBarMenu = ({ navigation }) => {\n  const [page, setPage] = useState('');\n  const { t, i18n } = useTranslation();\n  const pages = [t('Home'), t('History'), t('Settings'), t('Logout'), t('Accessibility')];\n  const enPages = ['Home', 'History', 'Settings', 'LogOut', 'Accessibility'];\n  const icons = ['home', 'history', 'settings-sharp', 'logout', 'universal-access'];\n  const user = useSelector((state) => state.userReducer.user);\n\n  //Code that gets the current page\n  useFocusEffect(() => {\n    const currentPage = navigation.getState().routes[navigation.getState().index].name;\n    setPage(currentPage)\n  }\n  );\n\n\n  const goToFirstScreen = (pageName) => {\n    navigation.reset({\n      index: 0,\n      routes: [{ name: pageName }]\n    });\n  };\n\n  return (\n    <View style={styles.drawerContent} >\n      <View style={styles.userContainer}>\n        <Icon\n          name=\"user-circle\"\n          size={30}\n          style={styles.userIcon}\n        />\n        {user && <Text style={styles.userName}>{t(\"Hello!\")} {user.fname}</Text>}\n      </View>\n      <Text>{\"\\n\"}</Text>\n      <View style={styles.separator} />\n      <Text>{\"\\n\"}</Text>\n      {/* <Button title=\"Yo hablo Español\" onPress={() => i18n.changeLanguage('he')} />\n      <Button title=\"I speak English\" onPress={() => i18n.changeLanguage('en')} /> */}\n      {/* <View style={styles.buttonContainer}> */}\n      {/* <TouchableOpacity style={styles.button} onPress={() => { i18n.language == \"he\" ? i18n.changeLanguage('en') : i18n.changeLanguage('he') }}>\n        <Text style={styles.buttonText}>{i18n.language == \"he\" ? \"English\" : \"עברית\"}</Text>\n      </TouchableOpacity>\n      <Text>{\"\\n\"}</Text> */}\n      {/* <Text> / </Text> */}\n      {/* <TouchableOpacity style={styles.button} onPress={() => i18n.changeLanguage('en')}>\n          <Text style={styles.buttonText}>English</Text>\n        </TouchableOpacity> */}\n      {/* </View> */}\n\n\n\n      {pages.map((item, index) => (\n        <TouchableOpacity\n          style={styles.drawerItem}\n          key={index}\n          onPress={() => { setPage(enPages[index]); goToFirstScreen(enPages[index]); }}\n        >\n          <View style={styles.iconTextContainer}>\n            {(icons[index] == \"settings-sharp\") ?\n              <Ionicons\n                name={icons[index]}\n                size={20}\n                color={page === enPages[index] ? 'blue' : 'black'}\n                style={styles.icon}\n              /> :\n              icons[index] == 'logout' ?\n                <AntDesign\n                  name={icons[index]}\n                  size={20}\n                  color={page === enPages[index] ? 'blue' : 'black'}\n                  style={styles.icon}\n                /> :\n                <Icon\n                  name={icons[index]}\n                  size={20}\n                  color={page === enPages[index] ? 'blue' : 'black'}\n                  style={styles.icon}\n                />\n            }\n            <Text style={page === enPages[index] ? { color: 'blue' } : { color: 'black' }}>\n              {item}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      ))}\n      <View style={[styles.iconTextContainer, styles.translationIcon]}>\n        <MaterialCommunityIcons\n          name=\"google-translate\"\n          size={20}\n          color={'black'}\n          style={styles.icon}\n        />\n        <TouchableOpacity style={styles.button} onPress={() => { i18n.language == \"he\" ? i18n.changeLanguage('en') : i18n.changeLanguage('he') }}>\n          <Text style={styles.buttonText}>{i18n.language == \"he\" ? \"English\" : \"עברית\"}</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n    paddingTop: 50,\n    paddingLeft: 20,\n  },\n  drawerItem: {\n    marginBottom: 20,\n  },\n  iconTextContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: 8,\n  },\n  userContainer: {\n    // flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  userIcon: {\n    marginRight: 8,\n  },\n  userName: {\n    fontSize: 16,\n  },\n  separator: {\n    height: 1,\n    backgroundColor: 'black',\n    marginBottom: 10,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n  },\n  button: {\n\n  },\n  buttonText: {\n  },\n});\n\nexport default SideBarMenu;\n","import { View, Modal, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst LogoutAlert = ({ visible, onClose, onLogout }) => {\n    const { t, i18n } = useTranslation();\n    return (\n        <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={visible}\n            onRequestClose={onClose}\n        >\n            <View style={styles.centeredView}>\n                <View style={styles.modalView}>\n                    <Text style={styles.modalText}>{t(\"Are you sure you want to exit?\")}</Text>\n                    <View style={styles.buttonContainer}>\n                        <TouchableOpacity style={styles.button} onPress={onLogout}>\n                            <Text style={styles.buttonText}>{t(\"Logout\")}</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={styles.button} onPress={onClose}>\n                            <Text style={styles.buttonText}>{t(\"Cancel\")}</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            </View>\n        </Modal>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 22,\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: 'white',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: 'center',\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    button: {\n        borderRadius: 5,\n        padding: 10,\n        elevation: 2,\n        marginHorizontal: 10,\n    },\n    buttonText: {\n        color: 'blue',\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n});\n\nexport default LogoutAlert;","import { StyleSheet, TouchableOpacity, View, Text } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport LogoutModel from \"../components/logout/LogoutModel\";\nimport { useFocusEffect } from \"@react-navigation/native\";\n\nconst Logout = () => {\n    const [modalVisible, setModalVisible] = useState(true);\n\n    const handleLogout = () => {\n        setModalVisible(true);\n    };\n\n    const handleCancel = () => {\n        setModalVisible(false);\n        navigation.navigate('Login');\n    };\n\n    const logoutUser = async () => {\n        setModalVisible(false);\n        try {\n            await AsyncStorage.removeItem('email');\n            await AsyncStorage.removeItem('password');\n            navigation.navigate('Login');\n        } catch (error) {\n            console.error('Error while logging out:', error);\n        }\n\n    };\n\n    return (\n        <View>\n            <LogoutModel\n                visible={modalVisible}\n                onClose={handleCancel}\n                onLogout={logoutUser}\n            />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 22,\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: 'white',\n        borderRadius: 20,\n        padding: 35,\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: 'center',\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        width: '100%',\n    },\n    button: {\n        borderRadius: 5,\n        padding: 10,\n        elevation: 2,\n        marginHorizontal: 10,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n});\n\nexport default Logout;","import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, TouchableOpacity } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport { loginValidationSchema } from '../config/loginValidationSchema';\nimport { useDispatch } from 'react-redux';\nimport { loginSuccess } from '../redux/actions/loginActions';\nimport { useSelector } from 'react-redux';\nimport { BY_EMAIL_AND_PASSWORD, SERVER_BASE_URL } from '@env';\nimport * as Yup from 'yup';\nimport { useTranslation } from 'react-i18next';\nconst Login = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n  const dispatch = useDispatch();\n  const { t, i18n } = useTranslation();\n\n  // on start the app or on reload check in local-storege If there is a logged in user\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      const checkLoggedInUser = async () => {\n        try {\n          const emailUser = await AsyncStorage.getItem('email');\n          const passwordUser = await AsyncStorage.getItem('password');\n          if (emailUser !== null && passwordUser !== null) {\n            navigation.navigate('Home');\n          } else {\n            console.log('No user is logged in');\n          }\n        } catch (e) {\n          console.error('Error fetching user data:', e);\n        }\n      };\n      checkLoggedInUser();\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n  //on click the button handelLogin:\n  const handleLogin = async () => {\n    try {\n      //validate the email and password valid \n      await loginValidationSchema(t).validate({ email, password }, { abortEarly: false });\n\n      // Runs the function that accesses the database and waits for an answer\n      const response = await checkEmailAndpassword(email, password)\n      if (response.success === true) {\n        // save the result - the user details to the redux store\n        dispatch(loginSuccess(response.user));\n        // set the async-storege for staying connected feature\n        await AsyncStorage.setItem('email', response.user.email);\n        await AsyncStorage.setItem('password', response.user.password);\n        // navigate to home page\n        navigation.navigate('Home');\n      } else {\n        // if the response is not good there is a error on login\n        setErrorMessage(t('user name or password invalid'));\n      }\n\n      // if there is error show them\n    } catch (error) {\n      if (error instanceof Yup.ValidationError) {\n        const yupErrors = {};\n        error.inner.forEach((e) => {\n          yupErrors[e.path] = e.message;\n        });\n        setErrors(yupErrors);\n      }\n      setErrorMessage(t('user name or password invalid'));\n    }\n  };\n\n  // go to DB\n  const checkEmailAndpassword = async (email, password) => {\n    // build the url from .env file\n    const url = SERVER_BASE_URL + BY_EMAIL_AND_PASSWORD;\n    //send post request to server\n    return await axios.post(url, { email, password })\n      .then(response => {\n        return response.data\n      })\n  }\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.translateButton} onPress={() => { i18n.language == \"he\" ? i18n.changeLanguage('en') : i18n.changeLanguage('he') }}>\n        <Text style={styles.translateButtonText}>{i18n.language == \"he\" ? \"English\" : \"עברית\"}</Text>\n      </TouchableOpacity>\n      <Text style={styles.title}>{t(\"Login\")}</Text>\n      <TouchableOpacity\n        style={styles.registerContainer}\n        onPress={() =>{\n          navigation.reset({\n            index: 0,\n            routes: [{ name: 'SignUpPage' }]\n          });}}\n      >\n        <Text style={styles.register}>{t(\"Register\")}</Text>\n      </TouchableOpacity>\n      <TextInput\n        style={[styles.input, errors.email && styles.invalidInput]}\n        placeholder={t(\"Email\")}\n        onChangeText={(text) => {\n          setEmail(text);\n          setErrors((prevErrors) => ({ ...prevErrors, email: '' })); // Merge state updates\n        }}\n        value={email}\n      />\n\n      <TextInput\n        style={[styles.input, errors.password && styles.invalidInput]}\n        placeholder={t(\"Password\")}\n        secureTextEntry\n        onChangeText={(text) => {\n          setPassword(text);\n          setErrors((prevErrors) => ({ ...prevErrors, password: '' })); // Merge state updates\n        }}\n        value={password}\n      />\n\n      <View style={styles.forgotPasswordContainer}>\n        <TouchableOpacity onPress={() => navigation.navigate('ForgetPassword')}>\n          <Text style={styles.forgotPassword}>{t(\"Forgot Password?\")}</Text>\n        </TouchableOpacity>\n      </View>\n      {errorMessage ? <Text style={styles.errorMessage}>{errorMessage}</Text> : null}\n\n      <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\n        <Text style={styles.buttonText}>{t(\"Login\")}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  inputContainer: {\n    marginBottom: 20,\n    width: '80%',\n  },\n  inputContainer: {\n    marginBottom: 20,\n    width: '80%',\n  },\n  input: {\n    width: '70%',\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10,\n  },\n  invalidInput: {\n    borderColor: 'red',\n  },\n  warningText: {\n    color: 'red',\n    fontSize: 12,\n    marginBottom: 5,\n  },\n  forgotPasswordContainer: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  forgotPassword: {\n    fontSize: 16,\n    color: 'blue',\n    textDecorationLine: 'underline',\n  },\n  errorMessage: {\n    color: 'red',\n    marginBottom: 10,\n  },\n  registerContainer: {\n    position: 'absolute',\n    top: 10,\n    left: 10,\n  },\n  register: {\n    fontSize: 16,\n    color: 'blue',\n  },\n  loginButton: {\n    backgroundColor: 'blue',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  translateButton: {\n    // backgroundColor: 'blue', \n    position: 'absolute',\n    top: 10,\n    right: 10,\n  },\n  translateButtonText: {\n    color: 'blue',\n  },\n});\nexport default Login;","import * as Yup from 'yup';\nexport const loginValidationSchema = (t) => {\n  return Yup.object().shape({\n    email: Yup.string().email('Invalid email format').required('Email is required'),\n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters')\n      .matches(\n        /^(?=.*[0-9])(?=.*[a-zA-Z])/,\n        'Password must include at least one letter and one number'\n      )\n      .required('Password is required'),\n  });\n};","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport const loginSuccess = (user) => ({\n  type: LOGIN_SUCCESS,\n  payload: user,\n});\n","const initialState = {\n    userData:{\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n    },\n    addressData: {\n      phoneNumber: '',\n      country: '',\n      city: '',\n      street: '',\n      buildingNumber: '',\n      entrance: '',\n      floor: '',\n      apartmentNumber: '',\n      additionalNotes: '',\n      dateOfBirth: '',\n    },\n    medicalConditions: [],\n  };\n  \n  const registerReducers = (state = initialState, action) => {\n    switch (action.type) {\n      case 'SET_USER_DATA':\n        return { ...state, userData: action.payload};\n      case 'SET_ADDRESS_DATA':\n        return { ...state, addressData: action.payload };\n      case 'ADD_MEDICAL_CONDITIONS':\n        return { ...state, medicalConditions:[...state.medicalConditions , action.payload ]};\n      case 'REMOVE_MEDICAL_CONDITION':\n      return {\n        ...state,\n        medicalConditions: state.medicalConditions.filter(\n          (condition) => condition !== action.payload\n        ),\n      };\n      case 'RESET_REGISTER_DATA':\n      return initialState;\n      default:\n        return state;\n    }\n  };\n  \n  export default registerReducers;","const userReducer = (state = {\n  user: null,\n}, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport default userReducer;\n\n\n\n\n\n","import { createStore, combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // Defaults to localStorage for web\nimport registerReducers from './reducers/registerReducers';\nimport userReducer from './reducers/loginReducers';\n\nconst rootReducer = combineReducers({\n  userReducer: userReducer,\n  register: registerReducers,\n});\n\n// Configuration for redux-persist\nconst persistConfig = {\n  key: 'root', // Key for the persistor\n  storage, // This is your storage backend (localStorage by default)\n  // Optionally, you can whitelist specific reducers to persist\n  // whitelist: ['userReducer'],\n  //need to check with miri...\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(persistedReducer);\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React, { useState, useRef } from 'react';\nimport { View, TextInput, StyleSheet, Dimensions } from 'react-native';\n\nconst { width } = Dimensions.get('window');\nconst inputWidth = width * 0.12;\n\nconst CodeInput = ({ onCodeChange }) => {\n    const [codes, setCodes] = useState(['', '', '', '', '', '']);\n    const refs = useRef([]);\n\n    const handleChange = (text, index, key) => {\n        const newCodes = [...codes];\n        newCodes[index] = text;\n\n        setCodes(newCodes);\n\n        // Move to the next input\n        if (text.length === 1 && index < codes.length - 1) {\n            refs.current[index + 1].focus();\n        }\n\n        // Move to the previous input if the current input is cleared\n        if (key === 'Backspace' && text.length === 0 && index > 0) {\n            refs.current[index - 1].focus();\n        }\n\n        // Send the verification code to the parent component\n        onCodeChange(newCodes.join(''));\n    };\n\n    return (\n        <View style={styles.container}>\n            {codes.map((code, index) => (\n                <TextInput\n                    key={index}\n                    style={[styles.input,\n                    code.length === 1 && styles.inputGreenBorder,\n                    index > 0 && styles.inputMarginLeft]}\n                    keyboardType=\"numeric\"\n                    maxLength={1}\n                    onChangeText={(text) => handleChange(text, index)}\n                    onKeyPress={({ nativeEvent: { key } }) => handleChange(codes[index], index, key)}\n                    ref={(input) => (refs.current[index] = input)}\n                />\n            ))}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    input: {\n        width: inputWidth,\n        height: inputWidth,\n        borderWidth: 1,\n        textAlign: 'center',\n        fontSize: inputWidth * 0.35\n    },\n    inputGreenBorder: {\n        borderColor: 'green',\n    },\n    inputMarginLeft: {\n        marginLeft: inputWidth * 0.1\n    }\n});\n\nexport default CodeInput;\n","import axios from 'axios';\nimport { SERVER_BASE_URL } from '@env';\n\n\nexport const sendVerificationCode = async (email) => {\n        return await axios.post(`${SERVER_BASE_URL}/api/reset-password/initiate-reset`, { email })\n            .then(response => {\n                return response.data;\n            }).catch(error => {\n                const { data, status } = error.response;\n                throw {data, status}});\n\n}\n\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, View, Text, TouchableWithoutFeedback, StyleSheet } from 'react-native';\nimport CodeInput from './CodeInput';\nimport { sendVerificationCode } from './PublicFunctions';\n\n\n\nconst EmailVerification = ({ email, onStepChange }) => {\n    const [verificationCode, setVerificationCode] = useState('');\n    const [message, setMessage] = React.useState('');\n    const [isError, setIsError] = React.useState(false);\n\n    const handleCodeChange = (code) => {\n        setVerificationCode(code);\n    };\n\n    const verifyCode = async (email) => {\n        try {\n            return await axios.post(`http://localhost:3000/api/reset-password/email-verification`, { email, verificationCode })\n                .then(_ => {\n                    onStepChange(3);//nevigate to the next step\n                })\n                .catch(error => {\n                    switch (error.response.data.errorCode) {\n                        case \"EXPIRED_CODE\":\n                            setMessage('The code has expired. Please resend the code');\n                            break;\n                        case \"TOO_MUCH_ATTEMPTS\":\n                            let unblockTime = (Math.ceil((error.response.data.unblockTime - Date.now()) / (1000 * 60))) % 60;\n                            unblockTime = unblockTime === 0 ? 5 : unblockTime;\n                            setMessage(`Sorry, but you have exceeded the number of attempts allowed...\\nPlease try again in ${unblockTime} minutes`);\n                            break;\n                        case \"INVALID_CODE_ERROR\":\n                            setMessage('Invalid code')\n                            break;\n                    }\n                    setIsError(true);\n                });\n        }\n        catch (error) {\n            console.error('Error verifing code:', error);\n        }\n\n    }\n\n    const handleVerificationCode = async () => {\n        try { await verifyCode(email); } catch { console.log(\"error\"); }\n    }\n    const handleResend = async () => {\n        try {\n            await sendVerificationCode(email);\n            setMessage(\"Verification code sent successfully\");\n            setIsError(false);\n        } catch (error) {\n            if (error.data.errorCode) {\n                switch (error.data.errorCode) {\n                    case \"TOO_MUCH_ATTEMPTS\":\n                        let unblockTime = (Math.ceil((error.data.unblockTime - Date.now()) / (1000 * 60))) % 60;\n                        unblockTime = unblockTime === 0 ? 5 : unblockTime;\n                        setMessage(`Sorry, but you have exceeded the number of attempts allowed...\\nPlease try again in ${unblockTime} minutes`);\n                }\n            }\n            else {\n                setMessage(`Unexpected error`);\n            }\n            setIsError(true);\n        }\n    }\n    return (\n        <View style={styles.container}>\n            <Text>Check your email inbox,\n                {'\\n'}\n                A verification code has been sent to you right now</Text>\n            <CodeInput onCodeChange={handleCodeChange}></CodeInput>\n            <Button title='Verify' onPress={handleVerificationCode}></Button>\n            <TouchableWithoutFeedback onPress={handleResend}>\n                <View>\n                    <Text style={{ color: 'blue', cursor: 'pointer' }}>Resend</Text>\n                </View>\n            </TouchableWithoutFeedback>\n            <Text style={isError ? styles.errorMessage : styles.message}>{message}</Text>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '50%',\n        height: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    errorMessage: {\n        color: \"red\"\n    },\n    message: {\n        color: 'green'\n    }\n});\n\nexport default EmailVerification;","import React from 'react';\nimport axios from 'axios';\nimport { SERVER_BASE_URL } from '@env';\nimport { View, Text, Button, TextInput, StyleSheet } from 'react-native';\nimport { sendVerificationCode } from './PublicFunctions';\n\nconst ResetPasswordInitialize = ({ onEmailChange, onStepChange }) => {\n    const [message, setMessage] = React.useState('');\n    const [emailInput, setEmailInput] = React.useState('');\n\n    const checkIfEmailExists = async (email) => {\n        try {\n            return await axios.post(`${SERVER_BASE_URL}/api/patients/get-by-email/`, { email })\n                .then(response => {\n                    return response.data;\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                });\n        }\n        catch (error) {\n            console.error('Error fetching data:', error);\n        }\n\n    }\n\n    const handleSendingCode = async () => {\n        try {\n            await sendVerificationCode(emailInput);\n            return true;\n        } catch (error) {\n            if (error.data.errorCode) {\n                switch (error.data.errorCode) {\n                    case \"TOO_MUCH_ATTEMPTS\":\n                        let unblockTime = (Math.ceil((error.data.unblockTime - Date.now()) / (1000 * 60))) % 60;\n                        unblockTime = unblockTime === 0 ? 5 : unblockTime;\n                        setMessage(`Sorry, but you have exceeded the number of attempts allowed...\\nPlease try again in ${unblockTime} minutes`);\n                }\n            }\n            else {\n                setMessage(`Unexpected error`);\n                console.log(error);\n            }\n            return false;\n        }\n    }\n\n    const handleVerificationCode = async () => {\n        const result = await checkIfEmailExists(emailInput);\n        if (!result) {\n            setMessage('Invalid email');\n        } else {\n            const isSuccessfully = await handleSendingCode();\n            if (!isSuccessfully) return;\n            onEmailChange(emailInput);// update the email input in the parent component\n            onStepChange(2);//nevigate to the next step\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text>Enter your email address:</Text>\n            <TextInput\n                placeholder=\"Your-email\"\n                onChangeText={setEmailInput}\n                value={emailInput}\n                style={styles.input}\n            ></TextInput>\n            <Text style={{ color: 'red' }}>{message}</Text>\n            <Button title='Send me a code' onPress={handleVerificationCode}></Button>\n\n        </View>\n    )\n}\n\nexport default ResetPasswordInitialize;\nconst styles = StyleSheet.create({\n    container: {\n        width: '50%',\n        height: '30%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    input: {\n        width: '70%',\n        height: 40,\n        borderWidth: 2,\n        paddingLeft: 5,\n    }\n});","import * as Yup from 'yup';\n\n// Password validation schema\nexport const passwordValidationSchema = Yup.object().shape({\n    password: Yup.string()\n      .required('Password is required')\n      .min(8, 'Your password must contain at least 8 characters')\n      .matches(/^(?=.*[a-zA-Zא-ת])(?=.*\\d)/, 'Password must contain at least one letter and one number'),\n  });\n  ","// PasswordInput.js\nimport React, { useState } from 'react';\nimport { View, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst PasswordInput = ({ placeholder, onPasswordChange }) => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        secureTextEntry={!isPasswordVisible}\n        placeholder={placeholder}\n        onChangeText={onPasswordChange}\n      />\n      <TouchableOpacity\n        style={styles.iconContainer}\n        onPress={() => setIsPasswordVisible(!isPasswordVisible)}\n      >\n        <Ionicons\n          name={isPasswordVisible ? 'eye-off' : 'eye'}\n          size={24}\n          color=\"black\"\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    borderBottomWidth: 1,\n    paddingVertical: 8,\n  },\n  iconContainer: {\n    padding: 8,\n  },\n});\n\nexport default PasswordInput;\n","import React from 'react';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { passwordValidationSchema } from '../../config/passwordValidation';\nimport { SERVER_BASE_URL } from '@env';\nimport { View, Text, Button, StyleSheet } from 'react-native';\nimport PasswordInput from './PasswordInput';\n\n\nconst CompleteResetPassword = ({ email, onStepChange }) => {\n    const [password, setPassword] = React.useState('');\n    const [verifyPassword, setVerifyPassword] = React.useState('');\n    const [errorMessage, setErrorMessage] = React.useState('');\n\n    const resetPassword = async (password) => {\n        try {\n            return await axios.post(`${SERVER_BASE_URL}/api/reset-password/complete-reset`, { email, password })\n                .then(_ => {\n                    return true;\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                    return false;\n                });\n        }\n        catch (error) {\n            console.error('Error complete reseting password:', error);\n        }\n\n    }\n    const isValidPassword = (password) => {\n        try {\n            passwordValidationSchema.validateSync({ password });\n            return true;\n        } catch (error) {\n            if (error instanceof Yup.ValidationError) {\n                const errorMessage = error.errors && error.errors.length > 0\n                    ? error.errors[0]\n                    : 'An unknown error occurred';\n                setErrorMessage(errorMessage);\n                return false;\n            }\n\n        }\n    }\n    const handleResetPassword = async () => {\n        if (password != verifyPassword) {setErrorMessage(\"No Overlap\"); return;}\n        else if (isValidPassword(password)) {\n            const verificationResult = await resetPassword(password);\n            if (!verificationResult) return;\n            onStepChange(4);//nevigate to next step\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <PasswordInput\n                placeholder=\"Enter New Password\"\n                onPasswordChange={setPassword}\n            />\n            <PasswordInput\n                placeholder=\"Re-enter Password\"\n                onPasswordChange={setVerifyPassword}\n            />\n            <Text style={{ color: 'red' }}>{errorMessage}</Text>\n            <Button title='verify password' onPress={handleResetPassword}></Button>\n\n        </View >\n    )\n}\n\nexport default CompleteResetPassword;\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '50%',\n        height: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    input: {\n        width: '70%',\n        height: 40,\n        borderWidth: 2,\n        paddingLeft: 5,\n    }\n});","import React from 'react';\nimport { Button, View, Text, StyleSheet } from 'react-native';\n\n\n\nconst ResetSuccessfully = ({navigation}) => {\n    const handleNavigation = () => {\n        navigation.reset({\n            index: 0,\n            routes: [{ name: \"Login\" }]\n        });\n    };\n    return (\n        <View>\n            <Text>Your password has been reset successfully!</Text>\n            <Text>Log In again with your new password</Text>\n            <Button title='Log In Again' onPress={() => handleNavigation()}></Button>\n        </View>\n    );\n};\n\n\n\nexport default ResetSuccessfully;","import React from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\n\nconst BackToLoginButton = ({ navigation }) => {\n    const handleNavigation = () => {\n        navigation.reset({\n            index: 0,\n            routes: [{ name: \"Login\" }]\n        });\n    };\n\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity style={styles.submitButton} onPress={() => handleNavigation()}>\n                <Text style={styles.submitButtonText}>Back</Text>\n            </TouchableOpacity>\n        </View>\n    )\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#fff',\n    },\n    submitButton: {\n        width: 80,\n        height: 35,\n        backgroundColor: 'blue',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 5,\n        marginLeft: 10,\n        marginTop: 5\n    },\n    submitButtonText: {\n        color: 'white',\n        fontSize: 16,\n    },\n});\n\nexport default BackToLoginButton;\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport EmailVerification from '../components/forget_password/EmailVerification';\nimport ResetPasswordInitialize from '../components/forget_password/ResetPassword';\nimport CompleteResetPassword from '../components/forget_password/CompleteResetPassword';\nimport ResetSuccessfully from '../components/forget_password/ResetSuccessfully';\nimport BackToLoginButton from '../components/forget_password/BackToLogin';\n\n\nexport default function ResetPassword({ navigation }) {\n    const [email, setEmail] = React.useState('');\n    const [step, setStep] = useState(1);\n    const handleEmailChange = (newEmail) => {\n        setEmail(newEmail);\n    };\n    const handleStepChange = (newStep) => {\n        setStep(newStep);\n    };\n\n    return (\n        <View style={styles.container}>\n            {\n                step === 1 &&\n                <>  <Text style={styles.titleText}>Password Reset</Text>\n                    <ResetPasswordInitialize onEmailChange={handleEmailChange} onStepChange={handleStepChange} />\n                    <BackToLoginButton navigation={navigation} />\n                </>\n            }\n            {\n                step === 2 &&\n                <>  <Text style={styles.titleText}>Password Reset</Text>\n                    <EmailVerification email={email} onStepChange={handleStepChange} />\n                    <BackToLoginButton navigation={navigation} />\n                </>\n            }\n            {\n                step === 3 &&\n                <>  <Text style={styles.titleText}>Password Reset</Text>\n                    <CompleteResetPassword email={email} onStepChange={handleStepChange} />\n                    <BackToLoginButton navigation={navigation} />\n                </>\n            }\n            {\n                step === 4 &&\n                <>\n                    <ResetSuccessfully navigation={navigation} />\n                </>\n            }\n        </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    titleText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    }\n});","import React from 'react';\nimport axios from 'axios';\nimport { View, Text, Button, TextInput } from 'react-native';\nimport { useTranslation } from 'react-i18next';\n\nconst ForgetPassword = ({ }) => {\n    const [email, onChangeEmail] = React.useState('');\n    const [messageToUser, onChangeMessageToUser] = React.useState('');\n    const { t, i18n } = useTranslation();\n\n    const checkIfEmailExists = async (email) => {\n        try {\n            return await axios.post(`http://localhost:3000/api/patients/`, { email })\n                .then(response => {\n                    console.log('Data:', response.data);\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                });\n        }\n        catch (error) {\n            console.error('Error fetching data:', error);\n        }\n\n    }\n\n    const handleVerificationCode = async () => {\n        console.log(\"i am in\");\n        const result = await checkIfEmailExists(email);\n        console.log(\"result:\", result);\n        if (!result) {\n            onChangeMessageToUser(t('not valid email'));\n        } else {\n            onChangeMessageToUser(t('succeeded!'));\n            //navigation.navigate('EmailVerification');\n        }\n    }\n\n    return (\n        <View>\n            <Text>{t(\"enter an email address:\")}</Text>\n            <TextInput\n                onChangeText={onChangeEmail}\n                value={email}\n            />\n            <Button title={t('send me verification code')} onPress={handleVerificationCode}></Button>\n            <Text>{messageToUser}</Text>\n        </View>\n    )\n}\n\nexport default ForgetPassword;","import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport SignUpPage from './pages/SignUpPage';\nimport HistoryPage from './pages/HistoryPage';\nimport SettingsPage from './pages/SettingsPage';\nimport HomeScreen from './pages/HomeScreen';\nimport AccessibilityPage from './pages/AccessibilityPage';\nimport SideBarMenu from './pages/SideBarMenu';\nimport LogOut from './pages/Logout';\nimport Login from './pages/Login';\nimport { store, persistor } from \"./redux/store\";\nimport { Provider } from 'react-redux';\nimport ResetPassword from './pages/ResetPassword';\nimport SpeechRecognitionPage from './pages/SpeechRecognitionPage';\nimport ForgetPassword from './components/forget_password/forget_password';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Platform } from \"react-native\";\n\nconst isAndroid = Platform.OS === \"android\";\nconst isHermes = !!global.HermesInternal;\n\nif (isAndroid || isHermes) {\n  require(\"@formatjs/intl-locale/polyfill\");\n\n  require(\"@formatjs/intl-pluralrules/polyfill\");\n  require(\"@formatjs/intl-pluralrules/locale-data/en\");\n  require(\"@formatjs/intl-pluralrules/locale-data/he\");\n\n  require(\"@formatjs/intl-displaynames/polyfill\");\n  require(\"@formatjs/intl-displaynames/locale-data/en\");\n  require(\"@formatjs/intl-displaynames/locale-data/he\");\n}\n\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// Could be anything that returns default preferred language\nimport { getLocales } from \"expo-localization\";\n\n// Import all the languages you want here\nimport en from \"./locales/en/translation.json\";\nimport he from \"./locales/he/translation.json\";\n\ni18n.use(initReactI18next).init({\n  // Add any imported languages here\n  resources: {\n    en: {\n      translation: en,\n    },\n    he: {\n      translation: he,\n    }\n  },\n  lng: getLocales()[0].languageCode,\n  fallbackLng: \"en\",  // This is the default language if none of the users preffered languages are available\n  interpolation: {\n    escapeValue: false, // https://www.i18next.com/translation-function/interpolation#unescape\n  },\n  returnNull: false,\n});\n\nconst Drawer = createDrawerNavigator();\n\nconst App = () => {\n  const [side, setSide] = useState(\"left\")\n  useEffect(() => {\n    console.log(\"side\", side);\n    if (i18n.language === \"he\") {\n      setSide('right');\n    } else {\n      setSide(\"left\");\n    }\n  }, [i18n.language]); // Only re-run the effect if i18n.language changes\n  return (\n    // <>\n    //   <SpeechRecognitionPage></SpeechRecognitionPage>\n    // </>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <NavigationContainer>\n          <Drawer.Navigator drawerContent={(props) => <SideBarMenu {...props} />}\n            /*screenOptions={{ drawerPosition: side }}*/>\n            <Drawer.Screen name=\"Login\" component={Login} options={{\n              headerShown: false\n            }} />\n            <Drawer.Screen name=\"SignUpPage\" component={SignUpPage} options={{\n              headerShown: false\n            }} />\n            <Drawer.Screen name=\"ResetPassword\" component={ResetPassword} options={{\n            headerShown: false\n          }} />\n            <Drawer.Screen name=\"Home\" component={HomeScreen} options={{ title: \"\" }} />\n            <Drawer.Screen name=\"History\" component={HistoryPage} options={{ title: \"\" }} />\n            <Drawer.Screen name=\"Settings\" component={SettingsPage} options={{ title: \"\" }} />\n            <Drawer.Screen name=\"LogOut\" component={LogOut} options={{ title: \"\" }} />\n            <Drawer.Screen name=\"Accessibility\" component={AccessibilityPage} options={{ title: \"\" }} />\n            <Drawer.Screen name=\"ForgetPassword\" component={ForgetPassword} options={{ headerShown: false }} />\n          </Drawer.Navigator>\n        </NavigationContainer>\n      </PersistGate>\n    </Provider >\n  \n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default App;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [426], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["isSafeString","value","test","signUpValidationSchema","t","Yup","shape","firstname","required","matches","max","lastname","email","String","toLowerCase","password","min","phoneNumber","country","city","street","buildingNumber","typeError","positive","integer","entrance","floor","apartmentNumber","additionalNotes","dateOfBirth","addMedicalConditions","conditions","type","payload","styles","StyleSheet","create","backButton","position","top","left","backButtonText","fontSize","color","navigation","useNavigation","_jsx","TouchableOpacity","onPress","navigate","style","children","Text","container","flex","justifyContent","alignItems","title","fontWeight","marginBottom","marginTop","inputContainer","input","width","borderWidth","paddingLeft","flexDirection","buttonText","textAlign","error","buttonContainer","buttonNext","backgroundColor","padding","borderRadius","maxWidth","icon","marginLeft","iconContainer","right","placeholderLabel","paddingHorizontal","_ref","onStepChange","user","useSelector","state","register","userData","_useState","useState","_useState2","_slicedToArray","errors","setErrors","_useTranslation","useTranslation","_useState3","i18n","_useState4","formData","setFormData","fieldDisplayNames","dispatch","useDispatch","isFieldValid","key","validateSyncAt","validationError","renderLabel","handleSignUp","_ref2","_asyncToGenerator","newStep","formErrors","Object","keys","forEach","message","length","checkIfEmailExistsFunction","_x","apply","arguments","_ref3","checkIfEmailExists","console","log","_objectSpread","_x2","_ref4","axios","post","then","response","data","catch","_x3","_jsxs","View","BackButton","map","TextInput","height","borderColor","placeholder","onChangeText","text","_defineProperty","handleInputChange","keyboardType","secureTextEntry","MaterialIcons","name","size","Pressable","flexGrow","paddingVertical","buttonPrev","marginRight","additionalText","addressData","placeholderText","KeyboardAvoidingView","behavior","Platform","OS","ScrollView","contentContainerStyle","setAddressData","windowWidth","Dimensions","get","scrollViewContainer","middleContainer","marginHorizontal","selectConditionsButton","shadowOpacity","shadowRadius","elevation","selectConditionsButtonText","marginVertical","addButton","conditionsListContainer","conditionsListTitle","conditionItem","margin","conditionText","removeButtonContainer","bottom","removeButton","registerButton","newCondition","setNewCondition","address","medicalConditions","fname","lname","phone","comments","GoToLoginPage","clientData","insertClientDataIntoDB","insertmedicalConditionsInDB","_id","ClientData","patient_id","patient","condition","includes","index","conditionButton","minWidth","selectedConditionButton","closeButton","closeButtonText","centeredContainer","listContainer","inputValue","setInputValue","filteredConditions","setFilteredConditions","_useState5","_useState6","selectedCondition","setSelectedCondition","filteredData","trim","medicalConditionsData","filter","conditionObj","disease","startsWith","FlatList","renderItem","item","keyExtractor","translateButton","translateButtonText","step","setStep","useEffect","handleStepChange","_Fragment","language","changeLanguage","SignUpScreen","SignUp2","MedicalConditionsComponent","MedicalConditionsList","paddingTop","cellText","overflow","textOverflow","numberOfLines","modalContainer","cancelButton","modalContent","boldText","keyValueContainer","showHistory","popupVisible","setPopupVisible","selectedRowData","setSelectedRowData","openPopup","rowData","closePopup","cancelAlert","alertId","url","put","reset","routes","Table","borderStyle","Row","textStyle","widthArr","TableWrapper","Cell","Date","date","toISOString","split","status","Modal","animationType","transparent","visible","onRequestClose","entries","undefined","_ref5","_ref6","renderKeyValuePairs","location","distressDescription","level","alertStatusButtons","button","setShowHistory","userReducer","setData","onShowHistory","patientId","onShowActiveAlerts","ShowAlerts","LocationButton","locationInterval","setInterval","clearInterval","pageContainer","_React$useState","React","_React$useState2","isSwitchOn","setIsSwitchOn","Switch","onValueChange","previousState","zIndex","animationCircle","animatedValues","useRef","Animated","Value","current","startAnimations","loop","sequence","timing","toValue","duration","easing","Easing","linear","useNativeDriver","start","animatedCircles","interpolate","inputRange","outputRange","animatedStyle","transform","translateX","translateY","scale","opacity","addParamsToAlert","levels","enLevels","levelsColors","problems","problem","alert","setAlertId","alertSent","setAlertSent","addAlert","alertData","mapboxClient","MapboxGeocoding","accessToken","submitButton","submitButtonText","addressText","setLocation","setAddress","defaultAddress","setDefaultAddress","_useState7","_useState8","addressInput","setAddressInput","findDefaultAddress","findUserLocation","Geolocation","getCurrentPosition","_position$coords","coords","latitude","longitude","getAddressFromCoordinates","enableHighAccuracy","timeout","maximumAge","reverseGeocode","query","types","send","body","features","separatedAddress","place_name","newAddress","handlePress","loc","addressJson","handelInsertAdrees","cancelButtonText","centeredView","modalView","shadowColor","shadowOffset","modalText","onSendAlert","onClose","iconName","isPressed","Icon","handleCancelAlert","buttonsContainer","iconsContainer","iconRow","iconSpacing","setAlert","modalVisible","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","locationPressed","jsonParams","useFocusEffect","SosButton","SquareIconButton","CancelButton","Status","ProblemType","FindLocation","AlertSendingConfirmationModel","CancelAlertButton","SendAlert","drawerContent","drawerItem","iconTextContainer","userContainer","userIcon","userName","separator","page","setPage","pages","enPages","icons","currentPage","getState","pageName","Ionicons","AntDesign","translationIcon","MaterialCommunityIcons","onLogout","setModalVisible","logoutUser","AsyncStorage","removeItem","LogoutModel","invalidInput","warningText","forgotPasswordContainer","forgotPassword","textDecorationLine","errorMessage","registerContainer","loginButton","setEmail","setPassword","setErrorMessage","unsubscribe","addListener","checkLoggedInUser","emailUser","getItem","passwordUser","e","handleLogin","validate","abortEarly","checkEmailAndpassword","success","setItem","yupErrors","inner","path","prevErrors","initialState","action","concat","_toConsumableArray","rootReducer","combineReducers","registerReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","inputWidth","inputGreenBorder","inputMarginLeft","onCodeChange","codes","setCodes","refs","handleChange","newCodes","focus","join","code","maxLength","onKeyPress","nativeEvent","ref","sendVerificationCode","_error$response","display","verificationCode","setVerificationCode","setMessage","_React$useState3","_React$useState4","isError","setIsError","verifyCode","_","errorCode","unblockTime","Math","ceil","now","handleVerificationCode","_unused","handleResend","CodeInput","Button","TouchableWithoutFeedback","cursor","onEmailChange","emailInput","setEmailInput","handleSendingCode","passwordValidationSchema","borderBottomWidth","onPasswordChange","isPasswordVisible","setIsPasswordVisible","verifyPassword","setVerifyPassword","_React$useState5","_React$useState6","resetPassword","handleResetPassword","validateSync","isValidPassword","PasswordInput","ResetPassword","titleText","ResetPasswordInitialize","newEmail","BackToLoginButton","EmailVerification","CompleteResetPassword","ResetSuccessfully","_objectDestructuringEmpty","onChangeEmail","messageToUser","onChangeMessageToUser","result","isAndroid","isHermes","global","HermesInternal","require","initReactI18next","init","resources","en","translation","he","lng","getLocales","languageCode","fallbackLng","interpolation","escapeValue","returnNull","Drawer","createDrawerNavigator","side","setSide","Provider","PersistGate","loading","NavigationContainer","Navigator","props","SideBarMenu","Screen","component","Login","options","headerShown","SignUpPage","HomeScreen","HistoryPage","SettingsPage","LogOut","AccessibilityPage","ForgetPassword","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","mode","this","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}