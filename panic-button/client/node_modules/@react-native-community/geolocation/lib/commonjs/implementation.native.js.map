{"version":3,"names":["RNCGeolocation","GeolocationEventEmitter","GeolocationNativeInterface","subscriptions","updatesEnabled","setRNConfiguration","config","setConfiguration","enableBackgroundLocationUpdates","authorizationLevel","undefined","locationProvider","requestAuthorization","success","error","logError","getCurrentPosition","options","invariant","watchPosition","startObserving","watchID","length","push","addListener","clearWatch","sub","remove","sub1","noWatchers","ii","stopObserving","warning"],"sources":["implementation.native.ts"],"sourcesContent":["/**\n * Copyright (c) React Native Community\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type { EmitterSubscription } from 'react-native';\n\nimport GeolocationNativeInterface from './nativeInterface';\n\nimport invariant from 'invariant';\nimport { logError, warning } from './utils';\n\nimport type {\n  GeolocationOptions,\n  GeolocationConfiguration,\n  GeolocationResponse,\n  GeolocationError,\n} from './NativeRNCGeolocation';\n\nconst { RNCGeolocation, GeolocationEventEmitter } = GeolocationNativeInterface;\n\nlet subscriptions: (\n  | [EmitterSubscription, EmitterSubscription | null]\n  | undefined\n)[] = [];\nlet updatesEnabled = false;\n\n/**\n * The Geolocation API extends the web spec:\n * https://developer.mozilla.org/en-US/docs/Web/API/Geolocation\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html\n */\n\n/*\n * Sets configuration options that will be used in all location requests.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#setrnconfiguration\n *\n */\nexport function setRNConfiguration(config: GeolocationConfiguration) {\n  RNCGeolocation.setConfiguration({\n    ...config,\n    enableBackgroundLocationUpdates:\n      config?.enableBackgroundLocationUpdates ?? true,\n    authorizationLevel:\n      config?.authorizationLevel === 'auto'\n        ? undefined\n        : config.authorizationLevel,\n    locationProvider:\n      config?.locationProvider === 'auto' ? undefined : config.locationProvider,\n  });\n}\n\n/*\n * Requests Location permissions based on the key configured on pList.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#requestauthorization\n */\nexport function requestAuthorization(\n  success: () => void = () => {},\n  error: (error: GeolocationError) => void = logError\n) {\n  RNCGeolocation.requestAuthorization(success, error);\n}\n\n/*\n * Invokes the success callback once with the latest location info.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#getcurrentposition\n */\nexport async function getCurrentPosition(\n  success: (position: GeolocationResponse) => void,\n  error: (error: GeolocationError) => void = logError,\n  options: GeolocationOptions = {}\n) {\n  invariant(\n    typeof success === 'function',\n    'Must provide a valid geo_success callback.'\n  );\n  // Permission checks/requests are done on the native side\n  RNCGeolocation.getCurrentPosition(options, success, error);\n}\n\n/*\n * Invokes the success callback whenever the location changes.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#watchposition\n */\nexport function watchPosition(\n  success: (position: GeolocationResponse) => void,\n  error: (error: GeolocationError) => void = logError,\n  options: GeolocationOptions = {}\n): number {\n  if (!updatesEnabled) {\n    RNCGeolocation.startObserving(options);\n    updatesEnabled = true;\n  }\n  const watchID = subscriptions.length;\n  subscriptions.push([\n    GeolocationEventEmitter.addListener('geolocationDidChange', success),\n    error\n      ? GeolocationEventEmitter.addListener('geolocationError', error)\n      : null,\n  ]);\n  return watchID;\n}\n\n/*\n * Unsubscribes the watcher with the given watchID.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#clearwatch\n */\nexport function clearWatch(watchID: number) {\n  const sub = subscriptions[watchID];\n  if (!sub) {\n    // Silently exit when the watchID is invalid or already cleared\n    // This is consistent with timers\n    return;\n  }\n\n  sub[0].remove();\n  // array element refinements not yet enabled in Flow\n  const sub1 = sub[1];\n  sub1 && sub1.remove();\n  subscriptions[watchID] = undefined;\n  let noWatchers = true;\n  for (let ii = 0; ii < subscriptions.length; ii++) {\n    if (subscriptions[ii]) {\n      noWatchers = false; // still valid subscriptions\n    }\n  }\n  if (noWatchers) {\n    stopObserving();\n  }\n}\n\n/*\n * Stops observing for device location changes and removes all registered listeners.\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html#stopobserving\n */\nexport function stopObserving() {\n  if (updatesEnabled) {\n    RNCGeolocation.stopObserving();\n    updatesEnabled = false;\n    for (let ii = 0; ii < subscriptions.length; ii++) {\n      const sub = subscriptions[ii];\n      if (sub) {\n        warning(false, 'Called stopObserving with existing subscriptions.');\n        sub[0].remove();\n        // array element refinements not yet enabled in Flow\n        const sub1 = sub[1];\n        sub1 && sub1.remove();\n      }\n    }\n    subscriptions = [];\n  }\n}\n"],"mappings":"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"}