{"version":3,"names":["TurboModuleRegistry","getEnforcing"],"sources":["NativeRNCGeolocation.ts"],"sourcesContent":["import type { TurboModule } from 'react-native';\nimport { TurboModuleRegistry } from 'react-native';\n\nexport type GeolocationConfiguration = {\n  skipPermissionRequests: boolean;\n  authorizationLevel?: 'always' | 'whenInUse' | 'auto';\n  locationProvider?: 'playServices' | 'android' | 'auto';\n  enableBackgroundLocationUpdates?: boolean;\n};\n\nexport type GeolocationOptions = {\n  timeout?: number;\n  maximumAge?: number;\n  enableHighAccuracy?: boolean;\n  distanceFilter?: number;\n  useSignificantChanges?: boolean;\n  interval?: number;\n  fastestInterval?: number;\n};\n\nexport type GeolocationResponse = {\n  coords: {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n  };\n  timestamp: number;\n};\n\nexport type GeolocationError = {\n  code: number;\n  message: string;\n  PERMISSION_DENIED: number;\n  POSITION_UNAVAILABLE: number;\n  TIMEOUT: number;\n};\n\nexport interface Spec extends TurboModule {\n  setConfiguration(config: {\n    skipPermissionRequests: boolean;\n    authorizationLevel?: string;\n    enableBackgroundLocationUpdates?: string;\n  }): void;\n  requestAuthorization(\n    success: () => void,\n    error: (error: GeolocationError) => void\n  ): void;\n  getCurrentPosition(\n    options: GeolocationOptions,\n    position: (position: GeolocationResponse) => void,\n    error: (error: GeolocationError) => void\n  ): void;\n  startObserving(options: GeolocationOptions): void;\n  stopObserving(): void;\n\n  // RCTEventEmitter\n  addListener: (eventName: string) => void;\n  removeListeners: (count: number) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('RNCGeolocation');\n"],"mappings":";;;;;;;AACA;;eA+DeA,gCAAA,CAAoBC,YAApB,CAAuC,gBAAvC,C"}