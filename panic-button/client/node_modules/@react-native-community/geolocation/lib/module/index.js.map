{"version":3,"names":["GeolocationModule","Geolocation","getCurrentPosition","success","error","options","watchPosition","clearWatch","watchID","stopObserving","console","warn","requestAuthorization","setRNConfiguration","config"],"sources":["index.ts"],"sourcesContent":["/**\n * Copyright (c) React Native Community\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport * as GeolocationModule from './implementation';\n\nimport type {\n  GeolocationOptions,\n  GeolocationConfiguration,\n  GeolocationResponse,\n  GeolocationError,\n} from './NativeRNCGeolocation';\n\nconst Geolocation = {\n  /**\n   * Invokes the success callback once with the latest location info.  Supported\n   * options: timeout (ms), maximumAge (ms), enableHighAccuracy (bool)\n   * On Android, this can return almost immediately if the location is cached or\n   * request an update, which might take a while.\n   */\n  getCurrentPosition: function (\n    success: (position: GeolocationResponse) => void,\n    error?: (error: GeolocationError) => void,\n    options?: GeolocationOptions\n  ) {\n    GeolocationModule.getCurrentPosition(success, error, options);\n  },\n\n  /**\n   * Invokes the success callback whenever the location changes.  Supported\n   * options: timeout (ms), maximumAge (ms), enableHighAccuracy (bool), distanceFilter(m)\n   */\n  watchPosition: function (\n    success: (position: GeolocationResponse) => void,\n    error?: (error: GeolocationError) => void,\n    options?: GeolocationOptions\n  ): number {\n    return GeolocationModule.watchPosition(success, error, options);\n  },\n\n  /**\n   * Clears the watch started by `watchPosition`.\n   */\n  clearWatch: function (watchID: number) {\n    GeolocationModule.clearWatch(watchID);\n  },\n\n  /**\n   * @deprecated `ReactNativeGeolocation.stopObserving` is deprecated. Use `ReactNativeGeolocation.clearWatch` instead.\n   */\n  stopObserving: function () {\n    console.warn(\n      '`ReactNativeGeolocation.stopObserving` is deprecated and should not be used. Use `ReactNativeGeolocation.clearWatch` instead.'\n    );\n    GeolocationModule.stopObserving();\n  },\n\n  requestAuthorization: function (\n    success?: () => void,\n    error?: (error: GeolocationError) => void\n  ) {\n    GeolocationModule.requestAuthorization(success, error);\n  },\n\n  setRNConfiguration: function (config: GeolocationConfiguration) {\n    GeolocationModule.setRNConfiguration(config);\n  },\n};\n\nexport type {\n  GeolocationOptions,\n  GeolocationConfiguration,\n  GeolocationResponse,\n  GeolocationError,\n};\n\nexport default Geolocation;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,iBAAZ,MAAmC,kBAAnC;AASA,MAAMC,WAAW,GAAG;EAClB;AACF;AACA;AACA;AACA;AACA;EACEC,kBAAkB,EAAE,UAClBC,OADkB,EAElBC,KAFkB,EAGlBC,OAHkB,EAIlB;IACAL,iBAAiB,CAACE,kBAAlB,CAAqCC,OAArC,EAA8CC,KAA9C,EAAqDC,OAArD;EACD,CAbiB;;EAelB;AACF;AACA;AACA;EACEC,aAAa,EAAE,UACbH,OADa,EAEbC,KAFa,EAGbC,OAHa,EAIL;IACR,OAAOL,iBAAiB,CAACM,aAAlB,CAAgCH,OAAhC,EAAyCC,KAAzC,EAAgDC,OAAhD,CAAP;EACD,CAzBiB;;EA2BlB;AACF;AACA;EACEE,UAAU,EAAE,UAAUC,OAAV,EAA2B;IACrCR,iBAAiB,CAACO,UAAlB,CAA6BC,OAA7B;EACD,CAhCiB;;EAkClB;AACF;AACA;EACEC,aAAa,EAAE,YAAY;IACzBC,OAAO,CAACC,IAAR,CACE,+HADF;IAGAX,iBAAiB,CAACS,aAAlB;EACD,CA1CiB;EA4ClBG,oBAAoB,EAAE,UACpBT,OADoB,EAEpBC,KAFoB,EAGpB;IACAJ,iBAAiB,CAACY,oBAAlB,CAAuCT,OAAvC,EAAgDC,KAAhD;EACD,CAjDiB;EAmDlBS,kBAAkB,EAAE,UAAUC,MAAV,EAA4C;IAC9Dd,iBAAiB,CAACa,kBAAlB,CAAqCC,MAArC;EACD;AArDiB,CAApB;AA+DA,eAAeb,WAAf"}