{"version":3,"names":["logError","args","length","Error","err","console","error","message","stack","apply","warning","__DEV__","condition","format","undefined","argIndex","replace","x"],"sources":["utils.ts"],"sourcesContent":["/**\n * Copyright (c) React Native Community\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\n/**\n * Small utility that can be used as an error handler. You cannot just pass\n * `console.error` as a failure callback - it's not properly bound.  If passes an\n * `Error` object, it will print the message and stack.\n */\nexport const logError = function (...args: unknown[]) {\n  if (args.length === 1 && args[0] instanceof Error) {\n    const err = args[0];\n    console.error('Error: \"' + err.message + '\".  Stack:\\n' + err.stack);\n  } else {\n    console.error.apply(console, args);\n  }\n};\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\nexport const warning = __DEV__\n  ? function (condition: boolean, format: string, ...args: any[]) {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument'\n        );\n      }\n      if (!condition) {\n        var argIndex = 0;\n        var message =\n          'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      }\n    }\n  : () => {};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMA,QAAQ,GAAG,YAA8B;EAAA,kCAAjBC,IAAiB;IAAjBA,IAAiB;EAAA;;EACpD,IAAIA,IAAI,CAACC,MAAL,KAAgB,CAAhB,IAAqBD,IAAI,CAAC,CAAD,CAAJ,YAAmBE,KAA5C,EAAmD;IACjD,MAAMC,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAhB;IACAI,OAAO,CAACC,KAAR,CAAc,aAAaF,GAAG,CAACG,OAAjB,GAA2B,cAA3B,GAA4CH,GAAG,CAACI,KAA9D;EACD,CAHD,MAGO;IACLH,OAAO,CAACC,KAAR,CAAcG,KAAd,CAAoBJ,OAApB,EAA6BJ,IAA7B;EACD;AACF,CAPM;AASP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMS,OAAO,GAAGC,OAAO,GAC1B,UAAUC,SAAV,EAA8BC,MAA9B,EAA8D;EAAA,mCAAbZ,IAAa;IAAbA,IAAa;EAAA;;EAC5D,IAAIY,MAAM,KAAKC,SAAf,EAA0B;IACxB,MAAM,IAAIX,KAAJ,CACJ,8DACE,kBAFE,CAAN;EAID;;EACD,IAAI,CAACS,SAAL,EAAgB;IACd,IAAIG,QAAQ,GAAG,CAAf;IACA,IAAIR,OAAO,GACT,cAAcM,MAAM,CAACG,OAAP,CAAe,KAAf,EAAsB,MAAMf,IAAI,CAACc,QAAQ,EAAT,CAAhC,CADhB;;IAEA,IAAI,OAAOV,OAAP,KAAmB,WAAvB,EAAoC;MAClCA,OAAO,CAACC,KAAR,CAAcC,OAAd;IACD;;IACD,IAAI;MACF;MACA;MACA;MACA,MAAM,IAAIJ,KAAJ,CAAUI,OAAV,CAAN;IACD,CALD,CAKE,OAAOU,CAAP,EAAU,CAAE;EACf;AACF,CAtByB,GAuB1B,MAAM,CAAE,CAvBL"}