{"ast":null,"code":"var styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  conditionButton: {\n    backgroundColor: '#e0e0e0',\n    borderRadius: 10,\n    padding: 10,\n    marginVertical: 5,\n    alignItems: 'center'\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 20\n  },\n  closeModalButton: {\n    backgroundColor: '#454',\n    borderRadius: 10,\n    padding: 10,\n    marginVertical: 5,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  closeButtonContainer: {\n    position: 'absolute',\n    bottom: 20,\n    width: '100%',\n    alignItems: 'center'\n  },\n  closeButton: {\n    backgroundColor: 'red',\n    padding: 15,\n    borderRadius: 10\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default MedicalConditionsList;","map":{"version":3,"names":["styles","StyleSheet","create","container","flex","padding","conditionButton","backgroundColor","borderRadius","marginVertical","alignItems","modalContainer","closeModalButton","buttonText","color","fontWeight","textAlign","closeButtonContainer","position","bottom","width","closeButton","closeButtonText","fontSize","MedicalConditionsList"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/MedicalConditionsList.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { View, Text, TouchableOpacity, StyleSheet, Modal, ScrollView } from 'react-native';\r\n\r\n// const MedicalConditionsList = ({ onStepChange }) => {\r\n//   // const { onSelectCondition } = route.params;\r\n//   const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n//   const medicalConditions = [\r\n//     'Gallstones', 'Myocarditis', 'Infertility in Men', 'Infertility in Women', 'Chronic Instability of the Ankle', \r\n//     'Alzheimer\\'s Disease', 'Endometriosis', 'Insulin', 'Asthma of the Skin in Children', 'Hammer Finger', /* ... add other conditions */\r\n//   ];\r\n\r\n//   const handleSelectCondition = (condition) => {\r\n//     onSelectCondition(condition);\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text>List of Medical Conditions:</Text>\r\n//       {medicalConditions.map((condition, index) => (\r\n//         <TouchableOpacity\r\n//           key={index}\r\n//           onPress={() => handleSelectCondition(condition)}\r\n//           style={styles.conditionButton}\r\n//         >\r\n//           <Text>{condition}</Text>\r\n//         </TouchableOpacity>\r\n//       ))}  \r\n//        <View style={styles.closeButtonContainer}>\r\n//       <TouchableOpacity style={styles.closeButton} onPress={() => onStepChange(3)}>\r\n//         <Text style={styles.closeButtonText}>Close</Text>\r\n//       </TouchableOpacity>\r\n//     </View>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  conditionButton: {\r\n    backgroundColor: '#e0e0e0',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n  },\r\n  closeModalButton: {\r\n    backgroundColor: '#454',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  closeButtonContainer: {\r\n    position: 'absolute',\r\n    bottom: 20, // Adjust the bottom distance as needed\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  closeButton: {\r\n    backgroundColor: 'red', // Customize the background color\r\n    padding: 15,\r\n    borderRadius: 10,\r\n  },\r\n  closeButtonText: {\r\n    color: 'white', // Customize the text color\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default MedicalConditionsList;\r\n\r\n"],"mappings":"AAqCA,IAAMA,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDC,eAAe,EAAE;IACfC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBH,OAAO,EAAE,EAAE;IACXI,cAAc,EAAE,CAAC;IACjBC,UAAU,EAAE;EACd,CAAC;EACDC,cAAc,EAAE;IACdP,IAAI,EAAE,CAAC;IACPG,eAAe,EAAE,OAAO;IACxBF,OAAO,EAAE;EACX,CAAC;EACDO,gBAAgB,EAAE;IAChBL,eAAe,EAAE,MAAM;IACvBC,YAAY,EAAE,EAAE;IAChBH,OAAO,EAAE,EAAE;IACXI,cAAc,EAAE,CAAC;IACjBC,UAAU,EAAE;EACd,CAAC;EACDG,UAAU,EAAE;IACVC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;EACb,CAAC;EACDC,oBAAoB,EAAE;IACpBC,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,MAAM;IACbV,UAAU,EAAE;EACd,CAAC;EACDW,WAAW,EAAE;IACXd,eAAe,EAAE,KAAK;IACtBF,OAAO,EAAE,EAAE;IACXG,YAAY,EAAE;EAChB,CAAC;EACDc,eAAe,EAAE;IACfR,KAAK,EAAE,OAAO;IACdS,QAAQ,EAAE,EAAE;IACZR,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAeS,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}