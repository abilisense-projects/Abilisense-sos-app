{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CompleteResetPassword = function CompleteResetPassword(_ref) {\n  var email = _ref.email,\n    onStepChange = _ref.onStepChange;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    password = _React$useState2[0],\n    onChangepassword = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    verifyPassword = _React$useState4[0],\n    onChangeVerifyPassword = _React$useState4[1];\n  var resetPassword = function () {\n    var _ref2 = _asyncToGenerator(function* (password) {\n      try {\n        return yield axios.post(`http://localhost:3000/api/reset-password/complete-reset`, {\n          email: email,\n          password: password\n        }).then(function (response) {\n          return response.data;\n        }).catch(function (error) {\n          console.error('Error:', error);\n        });\n      } catch (error) {\n        console.error('Error complete reseting password:', error);\n      }\n    });\n    return function resetPassword(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleResetPassword = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (password != verifyPassword) return;else {\n        var verificationResult = yield resetPassword(password);\n        onStepChange(4);\n      }\n    });\n    return function handleResetPassword() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"enter your new password:\"\n    }), _jsx(TextInput, {\n      onChangeText: onChangepassword,\n      value: password\n    }), _jsx(TextInput, {\n      onChangeText: onChangeVerifyPassword,\n      value: verifyPassword\n    }), _jsx(Button, {\n      title: \"verify password\",\n      onPress: handleResetPassword\n    })]\n  });\n};\nexport default CompleteResetPassword;","map":{"version":3,"names":["React","axios","View","Text","Button","TextInput","jsx","_jsx","jsxs","_jsxs","CompleteResetPassword","_ref","email","onStepChange","_React$useState","useState","_React$useState2","_slicedToArray","password","onChangepassword","_React$useState3","_React$useState4","verifyPassword","onChangeVerifyPassword","resetPassword","_ref2","_asyncToGenerator","post","then","response","data","catch","error","console","_x","apply","arguments","handleResetPassword","_ref3","verificationResult","children","onChangeText","value","title","onPress"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/complete_reset_password.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { View, Text, Button, TextInput } from 'react-native';\r\n\r\n\r\nconst CompleteResetPassword = ({ email, onStepChange }) => {\r\n    const [password, onChangepassword] = React.useState('');\r\n    const [verifyPassword, onChangeVerifyPassword] = React.useState('');\r\n\r\n    const resetPassword = async (password) => {\r\n        try {\r\n            return await axios.post(`http://localhost:3000/api/reset-password/complete-reset`, { email, password })\r\n                .then(response => {\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n        catch (error) {\r\n            console.error('Error complete reseting password:', error);\r\n        }\r\n\r\n    }\r\n\r\n    const handleResetPassword = async () => {\r\n        if(password != verifyPassword) return;\r\n        else {\r\n            const verificationResult = await resetPassword(password);\r\n            onStepChange(4);//nevigate to next step\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Text>enter your new password:</Text>\r\n            <TextInput\r\n                onChangeText={onChangepassword}\r\n                value={password}\r\n            />\r\n            <TextInput\r\n                onChangeText={onChangeVerifyPassword}\r\n                value={verifyPassword}\r\n            />\r\n            <Button title='verify password' onPress={handleResetPassword}></Button>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default CompleteResetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI1B,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAAgC;EAAA,IAA1BC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,YAAY,GAAAF,IAAA,CAAZE,YAAY;EAChD,IAAAC,eAAA,GAAqCd,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAhDI,QAAQ,GAAAF,gBAAA;IAAEG,gBAAgB,GAAAH,gBAAA;EACjC,IAAAI,gBAAA,GAAiDpB,KAAK,CAACe,QAAQ,CAAC,EAAE,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAA5DE,cAAc,GAAAD,gBAAA;IAAEE,sBAAsB,GAAAF,gBAAA;EAE7C,IAAMG,aAAa;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAOR,QAAQ,EAAK;MACtC,IAAI;QACA,aAAajB,KAAK,CAAC0B,IAAI,CAAE,yDAAwD,EAAE;UAAEf,KAAK,EAALA,KAAK;UAAEM,QAAQ,EAARA;QAAS,CAAC,CAAC,CAClGU,IAAI,CAAC,UAAAC,QAAQ,EAAI;UACd,OAAOA,QAAQ,CAACC,IAAI;QACxB,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAC,KAAK,EAAI;UACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAClC,CAAC,CAAC;MACV,CAAC,CACD,OAAOA,KAAK,EAAE;QACVC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC7D;IAEJ,CAAC;IAAA,gBAdKR,aAAaA,CAAAU,EAAA;MAAA,OAAAT,KAAA,CAAAU,KAAA,OAAAC,SAAA;IAAA;EAAA,GAclB;EAED,IAAMC,mBAAmB;IAAA,IAAAC,KAAA,GAAAZ,iBAAA,CAAG,aAAY;MACpC,IAAGR,QAAQ,IAAII,cAAc,EAAE,OAAO,KACjC;QACD,IAAMiB,kBAAkB,SAASf,aAAa,CAACN,QAAQ,CAAC;QACxDL,YAAY,CAAC,CAAC,CAAC;MACnB;IACJ,CAAC;IAAA,gBANKwB,mBAAmBA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMxB;EAED,OACI3B,KAAA,CAACP,IAAI;IAAAsC,QAAA,GACDjC,IAAA,CAACJ,IAAI;MAAAqC,QAAA,EAAC;IAAwB,CAAM,CAAC,EACrCjC,IAAA,CAACF,SAAS;MACNoC,YAAY,EAAEtB,gBAAiB;MAC/BuB,KAAK,EAAExB;IAAS,CACnB,CAAC,EACFX,IAAA,CAACF,SAAS;MACNoC,YAAY,EAAElB,sBAAuB;MACrCmB,KAAK,EAAEpB;IAAe,CACzB,CAAC,EACFf,IAAA,CAACH,MAAM;MAACuC,KAAK,EAAC,iBAAiB;MAACC,OAAO,EAAEP;IAAoB,CAAS,CAAC;EAAA,CACrE,CAAC;AAEf,CAAC;AAED,eAAe3B,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}