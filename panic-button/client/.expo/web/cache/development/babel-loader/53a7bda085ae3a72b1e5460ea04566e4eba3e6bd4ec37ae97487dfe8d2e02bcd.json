{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nexport default function useThenable(create) {\n  var _React$useState = React.useState(create),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    promise = _React$useState2[0];\n  var initialState = [false, undefined];\n  promise.then(function (result) {\n    initialState = [true, result];\n  });\n  var _React$useState3 = React.useState(initialState),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    state = _React$useState4[0],\n    setState = _React$useState4[1];\n  var _state = _slicedToArray(state, 1),\n    resolved = _state[0];\n  React.useEffect(function () {\n    var cancelled = false;\n    var resolve = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var result;\n        try {\n          result = yield promise;\n        } finally {\n          if (!cancelled) {\n            setState([true, result]);\n          }\n        }\n      });\n      return function resolve() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    if (!resolved) {\n      resolve();\n    }\n    return function () {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n  return state;\n}","map":{"version":3,"names":["React","useThenable","create","_React$useState","useState","_React$useState2","_slicedToArray","promise","initialState","undefined","then","result","_React$useState3","_React$useState4","state","setState","_state","resolved","useEffect","cancelled","resolve","_ref","_asyncToGenerator","apply","arguments"],"sources":["C:\\Users\\inbal\\Documents\\abilisense-project\\project1\\panic-button\\client\\node_modules\\@react-navigation\\native\\lib\\module\\useThenable.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport default function useThenable<T>(create: () => PromiseLike<T>) {\n  const [promise] = React.useState(create);\n\n  let initialState: [boolean, T | undefined] = [false, undefined];\n\n  // Check if our thenable is synchronous\n  promise.then((result) => {\n    initialState = [true, result];\n  });\n\n  const [state, setState] = React.useState(initialState);\n  const [resolved] = state;\n\n  React.useEffect(() => {\n    let cancelled = false;\n\n    const resolve = async () => {\n      let result;\n\n      try {\n        result = await promise;\n      } finally {\n        if (!cancelled) {\n          setState([true, result]);\n        }\n      }\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n\n  return state;\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,eAAe,SAASC,WAATA,CAAwBC,MAAxB,EAAsD;EACnE,IAAAC,eAAA,GAAkBH,KAAK,CAACI,QAAN,CAAeF,MAAf,CAAlB;IAAAG,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAOI,OAAD,GAAAF,gBAAA;EAEN,IAAIG,YAAsC,GAAG,CAAC,KAAD,EAAQC,SAAR,CAA7C;EAGAF,OAAO,CAACG,IAAR,CAAc,UAAAC,MAAD,EAAY;IACvBH,YAAY,GAAG,CAAC,IAAD,EAAOG,MAAP,CAAf;EACD,CAFD;EAIA,IAAAC,gBAAA,GAA0BZ,KAAK,CAACI,QAAN,CAAeI,YAAf,CAA1B;IAAAK,gBAAA,GAAAP,cAAA,CAAAM,gBAAA;IAAOE,KAAD,GAAAD,gBAAA;IAAQE,QAAR,GAAAF,gBAAA;EACN,IAAAG,MAAA,GAAAV,cAAA,CAAmBQ,KAAnB;IAAOG,QAAD,GAAAD,MAAA;EAENhB,KAAK,CAACkB,SAAN,CAAgB,YAAM;IACpB,IAAIC,SAAS,GAAG,KAAhB;IAEA,IAAMC,OAAO;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC1B,IAAIX,MAAJ;QAEA,IAAI;UACFA,MAAM,SAASJ,OAAf;QACD,CAFD,SAEU;UACR,IAAI,CAACY,SAAL,EAAgB;YACdJ,QAAQ,CAAC,CAAC,IAAD,EAAOJ,MAAP,CAAD,CAAR;UACD;QACF;MACF,CAVD;MAAA,gBAAMS,OAAOA,CAAA;QAAA,OAAAC,IAAA,CAAAE,KAAA,OAAAC,SAAA;MAAA;IAAA,GAAb;IAYA,IAAI,CAACP,QAAL,EAAe;MACbG,OAAO;IACR;IAED,OAAO,YAAM;MACXD,SAAS,GAAG,IAAZ;IACD,CAFD;EAGD,CAtBD,EAsBG,CAACZ,OAAD,EAAUU,QAAV,CAtBH;EAwBA,OAAOH,KAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}