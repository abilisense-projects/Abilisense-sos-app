{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordValidation = function PasswordValidation() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    pwd = _React$useState2[0],\n    onChangePwd = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    verifyPwd = _React$useState4[0],\n    onChangeVerifyPwd = _React$useState4[1];\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Password must include:\"\n    }), _jsx(Text, {\n      children: \"*At least one lowercase letter:\"\n    }), _jsx(Text, {\n      children: \"*At least one capital letter:\"\n    }), _jsx(Text, {\n      children: \"*At least one special character:\"\n    }), _jsx(Text, {\n      children: \"*At least one number:\"\n    }), _jsx(Text, {\n      children: \"*At least 8 characters:\"\n    })]\n  });\n};\nexport default PasswordValidation;","map":{"version":3,"names":["React","View","Text","Button","TextInput","jsx","_jsx","jsxs","_jsxs","PasswordValidation","_React$useState","useState","_React$useState2","_slicedToArray","pwd","onChangePwd","_React$useState3","_React$useState4","verifyPwd","onChangeVerifyPwd","children"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/password_validation.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Button, TextInput } from 'react-native';\r\n\r\nconst PasswordValidation = () => {\r\n    const [pwd, onChangePwd] = React.useState('');\r\n    const [verifyPwd, onChangeVerifyPwd] = React.useState('');\r\n\r\n    return (\r\n        <View>\r\n            <Text>Password must include:</Text>\r\n            <Text>*At least one lowercase letter:</Text>\r\n            <Text>*At least one capital letter:</Text>\r\n            <Text>*At least one special character:</Text>\r\n            <Text>*At least one number:</Text>\r\n            <Text>*At least 8 characters:</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default PasswordValidation;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAC7B,IAAAC,eAAA,GAA2BV,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAtCI,GAAG,GAAAF,gBAAA;IAAEG,WAAW,GAAAH,gBAAA;EACvB,IAAAI,gBAAA,GAAuChB,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAAlDE,SAAS,GAAAD,gBAAA;IAAEE,iBAAiB,GAAAF,gBAAA;EAEnC,OACIT,KAAA,CAACP,IAAI;IAAAmB,QAAA,GACDd,IAAA,CAACJ,IAAI;MAAAkB,QAAA,EAAC;IAAsB,CAAM,CAAC,EACnCd,IAAA,CAACJ,IAAI;MAAAkB,QAAA,EAAC;IAA+B,CAAM,CAAC,EAC5Cd,IAAA,CAACJ,IAAI;MAAAkB,QAAA,EAAC;IAA6B,CAAM,CAAC,EAC1Cd,IAAA,CAACJ,IAAI;MAAAkB,QAAA,EAAC;IAAgC,CAAM,CAAC,EAC7Cd,IAAA,CAACJ,IAAI;MAAAkB,QAAA,EAAC;IAAqB,CAAM,CAAC,EAClCd,IAAA,CAACJ,IAAI;MAAAkB,QAAA,EAAC;IAAuB,CAAM,CAAC;EAAA,CAClC,CAAC;AAEf,CAAC;AAED,eAAeX,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}