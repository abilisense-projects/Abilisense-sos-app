{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CompleteResetPassword = function CompleteResetPassword(_ref) {\n  var onStepChange = _ref.onStepChange;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    pwd = _React$useState2[0],\n    onChangePwd = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    verifyPwd = _React$useState4[0],\n    onChangeVerifyPwd = _React$useState4[1];\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"enter an email address:\"\n    }), _jsx(TextInput, {\n      onChangeText: onChangePwd,\n      value: pwd\n    }), _jsx(TextInput, {\n      onChangeText: onChangeVerifyPwd,\n      value: verifyPwd\n    }), _jsx(Button, {\n      title: \"verify password\",\n      onPress: function onPress() {\n        return console.log(pwd === verifyPwd ? \"yes\" : \"No\");\n      }\n    })]\n  });\n};\nexport default CompleteResetPassword;","map":{"version":3,"names":["React","View","Text","Button","TextInput","jsx","_jsx","jsxs","_jsxs","CompleteResetPassword","_ref","onStepChange","_React$useState","useState","_React$useState2","_slicedToArray","pwd","onChangePwd","_React$useState3","_React$useState4","verifyPwd","onChangeVerifyPwd","children","onChangeText","value","title","onPress","console","log"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/complete_reset_password.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Button, TextInput } from 'react-native';\r\n\r\n\r\nconst CompleteResetPassword = ({onStepChange}) => {\r\n    const [pwd, onChangePwd] = React.useState('');\r\n    const [verifyPwd, onChangeVerifyPwd] = React.useState('');\r\n\r\n    return (\r\n        <View>\r\n            <Text>enter an email address:</Text>\r\n            <TextInput\r\n                onChangeText={onChangePwd}\r\n                value={pwd}\r\n            />\r\n            <TextInput\r\n                onChangeText={onChangeVerifyPwd}\r\n                value={verifyPwd}\r\n            />\r\n            <Button title='verify password' onPress={() => console.log(pwd === verifyPwd ? \"yes\" : \"No\")}></Button>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default CompleteResetPassword;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI1B,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAAuB;EAAA,IAAlBC,YAAY,GAAAD,IAAA,CAAZC,YAAY;EACxC,IAAAC,eAAA,GAA2BZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAtCI,GAAG,GAAAF,gBAAA;IAAEG,WAAW,GAAAH,gBAAA;EACvB,IAAAI,gBAAA,GAAuClB,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAAlDE,SAAS,GAAAD,gBAAA;IAAEE,iBAAiB,GAAAF,gBAAA;EAEnC,OACIX,KAAA,CAACP,IAAI;IAAAqB,QAAA,GACDhB,IAAA,CAACJ,IAAI;MAAAoB,QAAA,EAAC;IAAuB,CAAM,CAAC,EACpChB,IAAA,CAACF,SAAS;MACNmB,YAAY,EAAEN,WAAY;MAC1BO,KAAK,EAAER;IAAI,CACd,CAAC,EACFV,IAAA,CAACF,SAAS;MACNmB,YAAY,EAAEF,iBAAkB;MAChCG,KAAK,EAAEJ;IAAU,CACpB,CAAC,EACFd,IAAA,CAACH,MAAM;MAACsB,KAAK,EAAC,iBAAiB;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAACZ,GAAG,KAAKI,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC;MAAA;IAAC,CAAS,CAAC;EAAA,CACrG,CAAC;AAEf,CAAC;AAED,eAAeX,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}