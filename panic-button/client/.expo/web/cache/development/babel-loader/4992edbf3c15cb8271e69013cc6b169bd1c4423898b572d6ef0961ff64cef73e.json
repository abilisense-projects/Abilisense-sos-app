{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React from 'react';\nimport axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgetPassword = function ForgetPassword(_ref) {\n  _objectDestructuringEmpty(_ref);\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    onChangeEmail = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    massageToUser = _React$useState4[0],\n    onChangeMassageToUser = _React$useState4[1];\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"enter an email address:\"\n    }), _jsx(TextInput, {\n      onChangeText: onChangeEmail,\n      value: email\n    }), _jsx(Text, {\n      children: massageToUser\n    })]\n  });\n};\nexport default ForgetPassword;","map":{"version":3,"names":["React","axios","View","Text","Button","TextInput","jsx","_jsx","jsxs","_jsxs","ForgetPassword","_ref","_objectDestructuringEmpty","_React$useState","useState","_React$useState2","_slicedToArray","email","onChangeEmail","_React$useState3","_React$useState4","massageToUser","onChangeMassageToUser","children","onChangeText","value"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/forget_password.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { View, Text, Button, TextInput } from 'react-native';\r\n\r\nconst ForgetPassword = ({}) => {\r\n    const [email, onChangeEmail] = React.useState('');\r\n    const [massageToUser, onChangeMassageToUser] = React.useState('');\r\n\r\n    // const checkIfEmailExists = async (email) => {\r\n    //     try {\r\n    //         return await axios.get(`http://localhost:3000/${email}`)\r\n    //             .then(response => {\r\n    //                 console.log('Data:', response.data);\r\n    //             })\r\n    //             .catch(error => {\r\n    //                 console.error('Error:', error);\r\n    //             });\r\n    //     }\r\n    //     catch (error) {\r\n    //         console.error('Error fetching data:', error);\r\n    //     }\r\n\r\n    // }\r\n\r\n    // const handleVerificationCode = async () => {\r\n    //     if (!await checkIfEmailExists(email)) {\r\n    //       onChangeMessageToUser('not valid email');\r\n    //     } else {\r\n    //       onChangeMessageToUser('succeeded!');\r\n    //       navigation.navigate('EmailVerification');\r\n    //     }\r\n    //   }\r\n\r\n    return (\r\n        <View>\r\n            <Text>enter an email address:</Text>\r\n            <TextInput\r\n                onChangeText={onChangeEmail}\r\n                value={email}\r\n            />\r\n            {/* <Button title='send me verification code' onPress={handleVerificationCode}></Button> */}\r\n            <Text>{massageToUser}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ForgetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAW;EAAAC,yBAAA,CAAAD,IAAA;EAC3B,IAAAE,eAAA,GAA+Bb,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA1CI,KAAK,GAAAF,gBAAA;IAAEG,aAAa,GAAAH,gBAAA;EAC3B,IAAAI,gBAAA,GAA+CnB,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAA1DE,aAAa,GAAAD,gBAAA;IAAEE,qBAAqB,GAAAF,gBAAA;EA2B3C,OACIX,KAAA,CAACP,IAAI;IAAAqB,QAAA,GACDhB,IAAA,CAACJ,IAAI;MAAAoB,QAAA,EAAC;IAAuB,CAAM,CAAC,EACpChB,IAAA,CAACF,SAAS;MACNmB,YAAY,EAAEN,aAAc;MAC5BO,KAAK,EAAER;IAAM,CAChB,CAAC,EAEFV,IAAA,CAACJ,IAAI;MAAAoB,QAAA,EAAEF;IAAa,CAAO,CAAC;EAAA,CAC1B,CAAC;AAEf,CAAC;AAED,eAAeX,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}