{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { signUpValidationSchema } from \"../../config/validations\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUp2 = function SignUp2(_ref) {\n  var onStepChange = _ref.onStepChange;\n  var _useState = useState({\n      phoneNumber: '',\n      country: '',\n      city: '',\n      street: '',\n      streetNum: '',\n      entrance: '',\n      houseNumber: '',\n      dob: new Date()\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errors = _useState4[0],\n    setErrors = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showDatePicker = _useState6[0],\n    setShowDatePicker = _useState6[1];\n  var handleInputChange = function handleInputChange(key, value) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, key, value)));\n    setErrors(_objectSpread(_objectSpread({}, errors), {}, _defineProperty({}, key, null)));\n  };\n  var isFieldValid = function isFieldValid(key) {\n    if (key === 'dob') {\n      return formData[key] !== null;\n    }\n    if (formData[key] && !errors[key]) {\n      try {\n        signUpValidationSchema.validateSyncAt(key, formData);\n        return true;\n      } catch (validationError) {\n        return false;\n      }\n    }\n    return false;\n  };\n  var renderLabel = function renderLabel(key) {\n    return _jsx(Text, {\n      style: styles.placeholderLabel,\n      children: formData[key] ? key.charAt(0).toUpperCase() + key.slice(1) : ''\n    });\n  };\n  var handleSignUp = function handleSignUp(newStep) {\n    var formErrors = {};\n    Object.keys(formData).forEach(function (key) {\n      try {\n        signUpValidationSchema.validateSyncAt(key, formData);\n      } catch (validationError) {\n        formErrors[key] = validationError.message;\n      }\n    });\n    if (Object.keys(formErrors).length === 0) {\n      setErrors({});\n      onStepChange(newStep);\n    } else {\n      setErrors(formErrors);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Sign Up - Step 2\"\n    }), Object.keys(formData).map(function (key) {\n      return _jsxs(View, {\n        style: styles.inputContainer,\n        children: [renderLabel(key), key === 'dob' && _jsxs(View, {\n          children: [_jsx(Pressable, {\n            onPress: function onPress() {\n              return setShowDatePicker(true);\n            },\n            children: _jsx(Text, {\n              children: formData[key].toLocaleDateString()\n            })\n          }), showDatePicker && _jsx(DateTimePicker, {\n            value: formData[key],\n            mode: \"date\",\n            display: \"default\",\n            onChange: function onChange(event, date) {\n              setShowDatePicker(Platform.OS === 'ios');\n              handleInputChange(key, date);\n            }\n          })]\n        }), isFieldValid(key) && _jsx(View, {\n          style: styles.iconContainer,\n          children: _jsx(MaterialIcons, {\n            name: \"check\",\n            size: 24,\n            color: \"green\",\n            style: styles.icon\n          })\n        }), errors[key] && _jsx(Text, {\n          style: styles.error,\n          children: errors[key]\n        })]\n      }, key);\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Pressable, {\n        style: styles.buttonPrev,\n        onPress: function onPress() {\n          return onStepChange(1);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Prev\"\n        })\n      }), _jsx(Pressable, {\n        style: styles.buttonNext,\n        onPress: function onPress() {\n          return handleSignUp(3);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Next\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  inputContainer: {\n    position: 'relative',\n    marginBottom: 20\n  },\n  input: {\n    width: '80%',\n    borderWidth: 1,\n    paddingLeft: 10,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  error: {\n    color: 'red',\n    marginTop: 5\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '80%',\n    marginTop: 20\n  },\n  buttonPrev: {\n    backgroundColor: '#ccc',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    marginRight: 10\n  },\n  buttonNext: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1\n  },\n  icon: {\n    marginLeft: 10\n  },\n  iconContainer: {\n    position: 'absolute',\n    top: 12,\n    right: 12\n  },\n  placeholderLabel: {\n    position: 'absolute',\n    left: 10,\n    top: -8,\n    backgroundColor: 'rgb(243, 243, 243), 195, 197',\n    paddingHorizontal: 5,\n    color: 'black'\n  }\n});\nexport default SignUp2;","map":{"version":3,"names":["React","useState","View","Text","Pressable","StyleSheet","Platform","signUpValidationSchema","MaterialIcons","DateTimePicker","jsx","_jsx","jsxs","_jsxs","SignUp2","_ref","onStepChange","_useState","phoneNumber","country","city","street","streetNum","entrance","houseNumber","dob","Date","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","errors","setErrors","_useState5","_useState6","showDatePicker","setShowDatePicker","handleInputChange","key","value","_objectSpread","_defineProperty","isFieldValid","validateSyncAt","validationError","renderLabel","style","styles","placeholderLabel","children","charAt","toUpperCase","slice","handleSignUp","newStep","formErrors","Object","keys","forEach","message","length","container","title","map","inputContainer","onPress","toLocaleDateString","mode","display","onChange","event","date","OS","iconContainer","name","size","color","icon","error","buttonContainer","buttonPrev","buttonText","buttonNext","create","flex","justifyContent","alignItems","fontSize","fontWeight","marginBottom","position","input","width","borderWidth","paddingLeft","flexDirection","textAlign","marginTop","backgroundColor","padding","borderRadius","marginRight","marginLeft","top","right","left","paddingHorizontal"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/SignUp2.js"],"sourcesContent":["//ישן טוב\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\n// import axios from 'axios';\r\n\r\n// const SignUp2 = ({onStepChange}) => {\r\n\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n//   const [country, setCountry] = useState('');\r\n//   const [city, setCity] = useState('');\r\n//   const [street, setStreet] = useState('');\r\n//   const [streetNum, setStreetNum] = useState('');\r\n//   const [entrance, setEntrance] = useState('');\r\n//   const [houseNumber, setHouseNumber] = useState('');\r\n//   const [dob, setDob] = useState('');\r\n\r\n//     // State for error messages\r\n//     const [error, setError] = useState('');\r\n\r\n\r\n//     const validateForm = () => {\r\n      \r\n//       setError('');\r\n      \r\n//       if (!phoneNumber) {\r\n//         setError('All fields are required');\r\n//         return false;\r\n//       }\r\n\r\n//       // if (!phoneNumber || !country || !city || !street || !streetNum || !entrance || !houseNumber || !dob) {\r\n//       //   setError('All fields are required');\r\n//       //   return false;\r\n//       // }\r\n    \r\n//       // Add more sophisticated validation logic if needed\r\n    \r\n//       return true;\r\n//     };\r\n\r\n\r\n//   const handleSignUp = (newStep) => {\r\n//     if (validateForm()) {\r\n//       onStepChange(newStep); // Call the callback to move to another step\r\n//     }\r\n// }\r\n  \r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Phone Number\"\r\n//         onChangeText={(text) => setPhoneNumber(text)}\r\n//         value={phoneNumber}\r\n//         keyboardType=\"phone-pad\"\r\n//       />\r\n\r\n//       <Text style={styles.subtitle}>Exact Residential Address:</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Country\"\r\n//         onChangeText={(text) => setCountry(text)}\r\n//         value={country}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"City\"\r\n//         onChangeText={(text) => setCity(text)}\r\n//         value={city}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Street\"\r\n//         onChangeText={(text) => setStreet(text)}\r\n//         value={street}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Street Number\"\r\n//         onChangeText={(text) => setStreetNum(text)}\r\n//         value={streetNum}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Entrance\"\r\n//         onChangeText={(text) => setEntrance(text)}\r\n//         value={entrance}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"House Number\"\r\n//         onChangeText={(text) => setHouseNumber(text)}\r\n//         value={houseNumber}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Date of Birth (YYYY-MM-DD)\"\r\n//         onChangeText={(text) => setDob(text)}\r\n//         value={dob}\r\n//         keyboardType=\"numeric\"\r\n//       />\r\n\r\n//       {/* Display error message if there is one */}\r\n//       {error ? <Text style={styles.error}>{error}</Text> : null}\r\n\r\n//       <View style={styles.buttonContainer}>\r\n//           <TouchableOpacity style={styles.buttonPrev} onPress={() =>onStepChange(1)}>\r\n//           <Text style={styles.buttonText}>Prev</Text>\r\n//           </TouchableOpacity>\r\n//            <TouchableOpacity style={styles.buttonNext} onPress={() =>handleSignUp(3)}>\r\n//           <Text style={styles.buttonText}>Next</Text>\r\n//           </TouchableOpacity> \r\n//       </View>\r\n\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   subtitle: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//     marginTop: 10,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     paddingLeft: 10,\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginBottom: 10,\r\n// },\r\n//   button: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     marginTop: 10,\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc', // Light gray\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n// });\r\n\r\n// export default SignUp2;\r\n\r\n\r\n//חדש טוב!!\r\n// import React, { useState } from 'react';\r\n// import { View, Text, TextInput, Pressable, TouchableOpacity, StyleSheet } from 'react-native';\r\n// import { signUpValidationSchema } from '../../config/validations';\r\n// import { MaterialIcons } from '@expo/vector-icons';\r\n\r\n// const SignUp2 = ({ onStepChange }) => {\r\n//   const [formData, setFormData] = useState({\r\n//     phoneNumber: '',\r\n//     country: '',\r\n//     city: '',\r\n//     street: '',\r\n//     streetNum: '',\r\n//     entrance: '',\r\n//     houseNumber: '',\r\n//     dob : '',\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleInputChange = (key, text) => {\r\n//     setFormData({ ...formData, [key]: text });\r\n//     setErrors({ ...errors, [key]: null }); // Reset error when the user starts typing\r\n//   };\r\n\r\n//   const isFieldValid = (key) => {\r\n//     if (formData[key] && !errors[key]) {\r\n//       // Check validation conditions\r\n//       try {\r\n//         signUpValidationSchema.validateSyncAt(key, formData);\r\n//         return true;\r\n//       } catch (validationError) {\r\n//         return false;\r\n//       }\r\n//     }\r\n//     return false;\r\n//   };\r\n\r\n//   const renderLabel = (key) => {\r\n//     return (\r\n//       <Text style={styles.placeholderLabel}>\r\n//         {formData[key] ? key.charAt(0).toUpperCase() + key.slice(1) : ''}\r\n//       </Text>\r\n//     );\r\n//   };\r\n\r\n//   const handleSignUp = (newStep) => {\r\n//     const formErrors = {};\r\n//     Object.keys(formData).forEach((key) => {\r\n//       try {\r\n//         signUpValidationSchema.validateSyncAt(key, formData);\r\n//       } catch (validationError) {\r\n//         formErrors[key] = validationError.message;\r\n//       }\r\n//     });\r\n\r\n//     if (Object.keys(formErrors).length === 0) {\r\n//       // No errors, proceed to the next step\r\n//       setErrors({});\r\n//       onStepChange(newStep);\r\n//     } else {\r\n//       // Validation failed, set the errors\r\n//       setErrors(formErrors);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n//       {Object.keys(formData).map((key) => (\r\n//         <View key={key} style={styles.inputContainer}>\r\n//           {renderLabel(key)}\r\n//           <TextInput\r\n//             style={{\r\n//               ...styles.input,\r\n//               height: 40, // Set a fixed height for the input\r\n//               borderColor: isFieldValid(key) ? 'green' : errors[key] ? 'red' : 'gray',\r\n//             }}\r\n//             placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\r\n//             onChangeText={(text) => handleInputChange(key, text)}\r\n//             value={formData[key]}\r\n//             keyboardType={key === 'dob' ? 'numeric' : 'default'}\r\n//           />\r\n//           {isFieldValid(key) && (\r\n//             <View style={styles.iconContainer}>\r\n//               <MaterialIcons name=\"check\" size={24} color=\"green\" style={styles.icon} />\r\n//             </View>\r\n//           )}\r\n//           {errors[key] && <Text style={styles.error}>{errors[key]}</Text>}\r\n//         </View>\r\n//       ))}\r\n\r\n//       <View style={styles.buttonContainer}>\r\n//         <Pressable style={styles.buttonPrev} onPress={() => onStepChange(1)}>\r\n//           <Text style={styles.buttonText}>Prev</Text>\r\n//         </Pressable>\r\n\r\n//         <Pressable style={styles.buttonNext} onPress={() => handleSignUp(3)}>\r\n//           <Text style={styles.buttonText}>Next</Text>\r\n//         </Pressable>\r\n//       </View>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   inputContainer: {\r\n//     position: 'relative',\r\n//     marginBottom: 20,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     borderWidth: 1,\r\n//     paddingLeft: 10,\r\n//     flexDirection: 'row',\r\n//     alignItems: 'center', // Center the icon vertically\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginTop: 5,\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n//   icon: {\r\n//     marginLeft: 10, // Adjust the margin as needed\r\n//   },\r\n//   iconContainer: {\r\n//     position: 'absolute',\r\n//     top: 12,\r\n//     right: 12,\r\n//   },\r\n//   placeholderLabel: {\r\n//     position: 'absolute',\r\n//     left: 10,\r\n//     top: -8,\r\n//     backgroundColor: 'rgb(243, 243, 243), 195, 197',\r\n//     paddingHorizontal: 5,\r\n//     color: 'black',\r\n//   },\r\n// });\r\n\r\n// export default SignUp2;\r\n\r\nimport React, { useState } from 'react';\r\nimport { View, Text, Pressable, StyleSheet, Platform } from 'react-native';\r\nimport { signUpValidationSchema } from '../../config/validations';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\nconst SignUp2 = ({ onStepChange }) => {\r\n  const [formData, setFormData] = useState({\r\n    phoneNumber: '',\r\n    country: '',\r\n    city: '',\r\n    street: '',\r\n    streetNum: '',\r\n    entrance: '',\r\n    houseNumber: '',\r\n    dob: new Date(), // Set default date to current date\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [showDatePicker, setShowDatePicker] = useState(false);\r\n\r\n  const handleInputChange = (key, value) => {\r\n    setFormData({ ...formData, [key]: value });\r\n    setErrors({ ...errors, [key]: null });\r\n  };\r\n\r\n  // Update isFieldValid to handle date validation\r\n  const isFieldValid = (key) => {\r\n    if (key === 'dob') {\r\n      // Check if date is selected\r\n      return formData[key] !== null;\r\n    }\r\n\r\n    if (formData[key] && !errors[key]) {\r\n      try {\r\n        signUpValidationSchema.validateSyncAt(key, formData);\r\n        return true;\r\n      } catch (validationError) {\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const renderLabel = (key) => {\r\n    return (\r\n      <Text style={styles.placeholderLabel}>\r\n        {formData[key] ? key.charAt(0).toUpperCase() + key.slice(1) : ''}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  const handleSignUp = (newStep) => {\r\n    const formErrors = {};\r\n    Object.keys(formData).forEach((key) => {\r\n      try {\r\n        signUpValidationSchema.validateSyncAt(key, formData);\r\n      } catch (validationError) {\r\n        formErrors[key] = validationError.message;\r\n      }\r\n    });\r\n\r\n    if (Object.keys(formErrors).length === 0) {\r\n      setErrors({});\r\n      onStepChange(newStep);\r\n    } else {\r\n      setErrors(formErrors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n      {Object.keys(formData).map((key) => (\r\n        <View key={key} style={styles.inputContainer}>\r\n          {renderLabel(key)}\r\n          {key === 'dob' && (\r\n            <View>\r\n              <Pressable onPress={() => setShowDatePicker(true)}>\r\n                <Text>{formData[key].toLocaleDateString()}</Text>\r\n              </Pressable>\r\n              {showDatePicker && (\r\n                <DateTimePicker\r\n                  value={formData[key]}\r\n                  mode=\"date\"\r\n                  display=\"default\"\r\n                  onChange={(event, date) => {\r\n                    setShowDatePicker(Platform.OS === 'ios'); // Hide for iOS, managed by TouchableOpacity\r\n                    handleInputChange(key, date);\r\n                  }}\r\n                />\r\n              )}\r\n            </View>\r\n          )}\r\n          {isFieldValid(key) && (\r\n            <View style={styles.iconContainer}>\r\n              <MaterialIcons name=\"check\" size={24} color=\"green\" style={styles.icon} />\r\n            </View>\r\n          )}\r\n          {errors[key] && <Text style={styles.error}>{errors[key]}</Text>}\r\n        </View>\r\n      ))}\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <Pressable style={styles.buttonPrev} onPress={() => onStepChange(1)}>\r\n          <Text style={styles.buttonText}>Prev</Text>\r\n        </Pressable>\r\n\r\n        <Pressable style={styles.buttonNext} onPress={() => handleSignUp(3)}>\r\n          <Text style={styles.buttonText}>Next</Text>\r\n        </Pressable>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  inputContainer: {\r\n    position: 'relative',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    borderWidth: 1,\r\n    paddingLeft: 10,\r\n    flexDirection: 'row',\r\n    alignItems: 'center', // Center the icon vertically\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginTop: 5,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '80%',\r\n    marginTop: 20,\r\n  },\r\n  buttonPrev: {\r\n    backgroundColor: '#ccc',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  buttonNext: {\r\n    backgroundColor: 'blue',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    flex: 1,\r\n  },\r\n  icon: {\r\n    marginLeft: 10, // Adjust the margin as needed\r\n  },\r\n  iconContainer: {\r\n    position: 'absolute',\r\n    top: 12,\r\n    right: 12,\r\n  },\r\n  placeholderLabel: {\r\n    position: 'absolute',\r\n    left: 10,\r\n    top: -8,\r\n    backgroundColor: 'rgb(243, 243, 243), 195, 197',\r\n    paddingHorizontal: 5,\r\n    color: 'black',\r\n  },\r\n});\r\n\r\nexport default SignUp2;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}