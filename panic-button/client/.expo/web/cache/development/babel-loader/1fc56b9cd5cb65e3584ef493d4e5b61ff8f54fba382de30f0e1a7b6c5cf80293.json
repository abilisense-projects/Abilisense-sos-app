{"ast":null,"code":"import * as Yup from 'yup';\nexport var signUpValidationSchema = Yup.object().shape({\n  firstname: Yup.string().required('First name is required').matches(/^[A-Za-z]+$/, 'First name should only contain alphabets').max(50, 'First name is too long'),\n  lastname: Yup.string().required('Last name is required').matches(/^[A-Za-z]+$/, 'Last name should only contain alphabets').max(50, 'Last name is too long'),\n  email: Yup.string().required('Email is required').email('Invalid email address'),\n  password: Yup.string().required('Password is required').min(8, password).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/, 'Password must contain at least one uppercase letter, one lowercase letter, and one number')\n});","map":{"version":3,"names":["Yup","signUpValidationSchema","object","shape","firstname","string","required","matches","max","lastname","email","password","min"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/config/validations.js"],"sourcesContent":["import * as Yup from 'yup';\r\n\r\nexport const signUpValidationSchema = Yup.object().shape({\r\n    firstname: Yup.string()\r\n        .required('First name is required')\r\n        .matches(/^[A-Za-z]+$/, 'First name should only contain alphabets')\r\n        .max(50, 'First name is too long'),\r\n    \r\n    lastname: Yup.string()\r\n        .required('Last name is required')\r\n        .matches(/^[A-Za-z]+$/, 'Last name should only contain alphabets')\r\n        .max(50, 'Last name is too long'),\r\n\r\n    email: Yup.string().required('Email is required').email('Invalid email address'),\r\n\r\n    password: Yup.string()\r\n        .required('Password is required')\r\n        .min(8,password)\r\n        .matches(\r\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\r\n            'Password must contain at least one uppercase letter, one lowercase letter, and one number'\r\n        ),\r\n});\r\n\r\n\r\n// const validations = {\r\n//     firstName: {\r\n//       required: \"Name is required.\",\r\n//       maxLength: {\r\n//         value: 50,\r\n//         message: \"Name must not exceed 50 characters.\",\r\n//       },\r\n//     },\r\n//     lastName: {\r\n//         required: \"Name is required.\",\r\n//         maxLength: {\r\n//           value: 50,\r\n//           message: \"Name must not exceed 50 characters.\",\r\n//         },\r\n//       },\r\n//     email: {\r\n//         required: \"Email is required.\",\r\n//         pattern: {\r\n//           value: /\\S+@\\S+\\.\\S+/,\r\n//           message: \"Email is invalid.\",\r\n//         },\r\n//       },\r\n\r\n//       password: {\r\n//         required: \"Password is required.\",\r\n//         minLength: {\r\n//           value: 8,\r\n//           message: \"Password must be at least 8 characters.\",\r\n//         },\r\n//         pattern: {\r\n//           value: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/,\r\n//           message:\r\n//             \"Password must include at least one letter, one number, and one symbolic character.\",\r\n//         },\r\n//       },\r\n\r\n//     phoneNumber: {\r\n//       required: \"Phone number is required.\",\r\n//       pattern: {\r\n//         value: /^\\d+$/,\r\n//         message: \"Phone number must contain only numbers.\",\r\n//       },\r\n//       minLength: {\r\n//         value: 10,\r\n//         message: \"Phone number must be at least 10 digits.\",\r\n//       },\r\n//       maxLength: {\r\n//         value: 15,\r\n//         message: \"Phone number must not exceed 15 digits.\",\r\n//       },\r\n//     },\r\n\r\n//     repeatPassword: {\r\n//       required: \"Password is required.\",\r\n      \r\n//     },\r\n//    };\r\n  \r\n//   export default validations;"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,IAAMC,sBAAsB,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACrDC,SAAS,EAAEJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAClBC,QAAQ,CAAC,wBAAwB,CAAC,CAClCC,OAAO,CAAC,aAAa,EAAE,0CAA0C,CAAC,CAClEC,GAAG,CAAC,EAAE,EAAE,wBAAwB,CAAC;EAEtCC,QAAQ,EAAET,GAAG,CAACK,MAAM,CAAC,CAAC,CACjBC,QAAQ,CAAC,uBAAuB,CAAC,CACjCC,OAAO,CAAC,aAAa,EAAE,yCAAyC,CAAC,CACjEC,GAAG,CAAC,EAAE,EAAE,uBAAuB,CAAC;EAErCE,KAAK,EAAEV,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,mBAAmB,CAAC,CAACI,KAAK,CAAC,uBAAuB,CAAC;EAEhFC,QAAQ,EAAEX,GAAG,CAACK,MAAM,CAAC,CAAC,CACjBC,QAAQ,CAAC,sBAAsB,CAAC,CAChCM,GAAG,CAAC,CAAC,EAACD,QAAQ,CAAC,CACfJ,OAAO,CACJ,iCAAiC,EACjC,2FACJ;AACR,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}