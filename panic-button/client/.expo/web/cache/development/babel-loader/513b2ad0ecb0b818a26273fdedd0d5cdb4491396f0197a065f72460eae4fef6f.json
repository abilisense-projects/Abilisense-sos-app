{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { signUpValidationSchema } from \"../../config/validations\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUp2 = function SignUp2(_ref) {\n  var onStepChange = _ref.onStepChange;\n  var _useState = useState({\n      phoneNumber: '',\n      country: '',\n      city: '',\n      street: '',\n      streetNum: '',\n      entrance: '',\n      houseNumber: '',\n      dob: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errors = _useState4[0],\n    setErrors = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isDatePickerVisible = _useState6[0],\n    setDatePickerVisibility = _useState6[1];\n  var handleInputChange = function handleInputChange(key, text) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, key, text)));\n    setErrors(_objectSpread(_objectSpread({}, errors), {}, _defineProperty({}, key, null)));\n  };\n  var isFieldValid = function isFieldValid(key) {\n    if (formData[key] && !errors[key]) {\n      try {\n        signUpValidationSchema.validateSyncAt(key, formData);\n        return true;\n      } catch (validationError) {\n        return false;\n      }\n    }\n    return false;\n  };\n  var renderLabel = function renderLabel(key) {\n    return _jsx(Text, {\n      style: styles.placeholderLabel,\n      children: formData[key] ? key.charAt(0).toUpperCase() + key.slice(1) : ''\n    });\n  };\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n  var handleDateConfirm = function handleDateConfirm(date) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      dob: date.toISOString().split(\"T\")[0]\n    }));\n    hideDatePicker();\n  };\n  var handleSignUp = function handleSignUp(newStep) {\n    var formErrors = {};\n    Object.keys(formData).forEach(function (key) {\n      try {\n        signUpValidationSchema.validateSyncAt(key, formData);\n      } catch (validationError) {\n        formErrors[key] = validationError.message;\n      }\n    });\n    if (Object.keys(formErrors).length === 0) {\n      setErrors({});\n      onStepChange(newStep);\n    } else {\n      setErrors(formErrors);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Sign Up - Step 2\"\n    }), Object.keys(formData).map(function (key) {\n      return _jsxs(View, {\n        style: styles.inputContainer,\n        children: [renderLabel(key), _jsx(TextInput, {\n          style: _objectSpread(_objectSpread({}, styles.input), {}, {\n            height: 40,\n            borderColor: isFieldValid(key) ? 'green' : errors[key] ? 'red' : 'gray'\n          }),\n          placeholder: key.charAt(0).toUpperCase() + key.slice(1),\n          onChangeText: function onChangeText(text) {\n            return handleInputChange(key, text);\n          },\n          value: formData[key],\n          keyboardType: key === 'dob' ? 'numeric' : 'default'\n        }), isFieldValid(key) && _jsx(View, {\n          style: styles.iconContainer,\n          children: _jsx(MaterialIcons, {\n            name: \"check\",\n            size: 24,\n            color: \"green\",\n            style: styles.icon\n          })\n        }), errors[key] && _jsx(Text, {\n          style: styles.error,\n          children: errors[key]\n        })]\n      }, key);\n    }), _jsxs(TouchableOpacity, {\n      style: styles.inputContainer,\n      onPress: showDatePicker,\n      children: [renderLabel('dob'), _jsx(TextInput, {\n        style: _objectSpread(_objectSpread({}, styles.input), {}, {\n          height: 40,\n          borderColor: isFieldValid('dob') ? 'green' : errors['dob'] ? 'red' : 'gray'\n        }),\n        placeholder: \"Date of Birth\",\n        value: formData['dob'],\n        editable: false\n      }), _jsx(DateTimePickerModal, {\n        isVisible: isDatePickerVisible,\n        mode: \"date\",\n        onConfirm: handleDateConfirm,\n        onCancel: hideDatePicker\n      }), isFieldValid('dob') && _jsx(View, {\n        style: styles.iconContainer,\n        children: _jsx(MaterialIcons, {\n          name: \"check\",\n          size: 24,\n          color: \"green\",\n          style: styles.icon\n        })\n      }), errors['dob'] && _jsx(Text, {\n        style: styles.error,\n        children: errors['dob']\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.buttonPrev,\n        onPress: function onPress() {\n          return onStepChange(1);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Prev\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonNext,\n        onPress: function onPress() {\n          return handleSignUp(3);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Next\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({});\nexport default SignUp2;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","DateTimePickerModal","signUpValidationSchema","MaterialIcons","jsx","_jsx","jsxs","_jsxs","SignUp2","_ref","onStepChange","_useState","phoneNumber","country","city","street","streetNum","entrance","houseNumber","dob","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","errors","setErrors","_useState5","_useState6","isDatePickerVisible","setDatePickerVisibility","handleInputChange","key","text","_objectSpread","_defineProperty","isFieldValid","validateSyncAt","validationError","renderLabel","style","styles","placeholderLabel","children","charAt","toUpperCase","slice","showDatePicker","hideDatePicker","handleDateConfirm","date","toISOString","split","handleSignUp","newStep","formErrors","Object","keys","forEach","message","length","container","title","map","inputContainer","input","height","borderColor","placeholder","onChangeText","value","keyboardType","iconContainer","name","size","color","icon","error","onPress","editable","isVisible","mode","onConfirm","onCancel","buttonContainer","buttonPrev","buttonText","buttonNext","create"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/SignUp2.js"],"sourcesContent":["//ישן טוב\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\n// import axios from 'axios';\r\n\r\n// const SignUp2 = ({onStepChange}) => {\r\n\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n//   const [country, setCountry] = useState('');\r\n//   const [city, setCity] = useState('');\r\n//   const [street, setStreet] = useState('');\r\n//   const [streetNum, setStreetNum] = useState('');\r\n//   const [entrance, setEntrance] = useState('');\r\n//   const [houseNumber, setHouseNumber] = useState('');\r\n//   const [dob, setDob] = useState('');\r\n\r\n//     // State for error messages\r\n//     const [error, setError] = useState('');\r\n\r\n\r\n//     const validateForm = () => {\r\n      \r\n//       setError('');\r\n      \r\n//       if (!phoneNumber) {\r\n//         setError('All fields are required');\r\n//         return false;\r\n//       }\r\n\r\n//       // if (!phoneNumber || !country || !city || !street || !streetNum || !entrance || !houseNumber || !dob) {\r\n//       //   setError('All fields are required');\r\n//       //   return false;\r\n//       // }\r\n    \r\n//       // Add more sophisticated validation logic if needed\r\n    \r\n//       return true;\r\n//     };\r\n\r\n\r\n//   const handleSignUp = (newStep) => {\r\n//     if (validateForm()) {\r\n//       onStepChange(newStep); // Call the callback to move to another step\r\n//     }\r\n// }\r\n  \r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Phone Number\"\r\n//         onChangeText={(text) => setPhoneNumber(text)}\r\n//         value={phoneNumber}\r\n//         keyboardType=\"phone-pad\"\r\n//       />\r\n\r\n//       <Text style={styles.subtitle}>Exact Residential Address:</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Country\"\r\n//         onChangeText={(text) => setCountry(text)}\r\n//         value={country}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"City\"\r\n//         onChangeText={(text) => setCity(text)}\r\n//         value={city}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Street\"\r\n//         onChangeText={(text) => setStreet(text)}\r\n//         value={street}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Street Number\"\r\n//         onChangeText={(text) => setStreetNum(text)}\r\n//         value={streetNum}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Entrance\"\r\n//         onChangeText={(text) => setEntrance(text)}\r\n//         value={entrance}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"House Number\"\r\n//         onChangeText={(text) => setHouseNumber(text)}\r\n//         value={houseNumber}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Date of Birth (YYYY-MM-DD)\"\r\n//         onChangeText={(text) => setDob(text)}\r\n//         value={dob}\r\n//         keyboardType=\"numeric\"\r\n//       />\r\n\r\n//       {/* Display error message if there is one */}\r\n//       {error ? <Text style={styles.error}>{error}</Text> : null}\r\n\r\n//       <View style={styles.buttonContainer}>\r\n//           <TouchableOpacity style={styles.buttonPrev} onPress={() =>onStepChange(1)}>\r\n//           <Text style={styles.buttonText}>Prev</Text>\r\n//           </TouchableOpacity>\r\n//            <TouchableOpacity style={styles.buttonNext} onPress={() =>handleSignUp(3)}>\r\n//           <Text style={styles.buttonText}>Next</Text>\r\n//           </TouchableOpacity> \r\n//       </View>\r\n\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   subtitle: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//     marginTop: 10,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     paddingLeft: 10,\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginBottom: 10,\r\n// },\r\n//   button: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     marginTop: 10,\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc', // Light gray\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n// });\r\n\r\n// export default SignUp2;\r\n\r\n\r\n//חדש טוב!!\r\n// import React, { useState } from 'react';\r\n// import { View, Text, TextInput, Pressable, TouchableOpacity, StyleSheet } from 'react-native';\r\n// import { signUpValidationSchema } from '../../config/validations';\r\n// import { MaterialIcons } from '@expo/vector-icons';\r\n\r\n// const SignUp2 = ({ onStepChange }) => {\r\n//   const [formData, setFormData] = useState({\r\n//     phoneNumber: '',\r\n//     country: '',\r\n//     city: '',\r\n//     street: '',\r\n//     streetNum: '',\r\n//     entrance: '',\r\n//     houseNumber: '',\r\n//     dob: '',\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleInputChange = (key, text) => {\r\n//     setFormData({ ...formData, [key]: text });\r\n//     setErrors({ ...errors, [key]: null }); // Reset error when the user starts typing\r\n//   };\r\n\r\n//   const isFieldValid = (key) => {\r\n//     if (formData[key] && !errors[key]) {\r\n//       // Check validation conditions\r\n//       try {\r\n//         signUpValidationSchema.validateSyncAt(key, formData);\r\n//         return true;\r\n//       } catch (validationError) {\r\n//         return false;\r\n//       }\r\n//     }\r\n//     return false;\r\n//   };\r\n\r\n//   const renderLabel = (key) => {\r\n//     return (\r\n//       <Text style={styles.placeholderLabel}>\r\n//         {formData[key] ? key.charAt(0).toUpperCase() + key.slice(1) : ''}\r\n//       </Text>\r\n//     );\r\n//   };\r\n\r\n//   const handleSignUp = (newStep) => {\r\n//     const formErrors = {};\r\n//     Object.keys(formData).forEach((key) => {\r\n//       try {\r\n//         signUpValidationSchema.validateSyncAt(key, formData);\r\n//       } catch (validationError) {\r\n//         formErrors[key] = validationError.message;\r\n//       }\r\n//     });\r\n\r\n//     if (Object.keys(formErrors).length === 0) {\r\n//       // No errors, proceed to the next step\r\n//       setErrors({});\r\n//       onStepChange(newStep);\r\n//     } else {\r\n//       // Validation failed, set the errors\r\n//       setErrors(formErrors);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n//       {Object.keys(formData).map((key) => (\r\n//         <View key={key} style={styles.inputContainer}>\r\n//           {renderLabel(key)}\r\n//           <TextInput\r\n//             style={{\r\n//               ...styles.input,\r\n//               height: 40, // Set a fixed height for the input\r\n//               borderColor: isFieldValid(key) ? 'green' : errors[key] ? 'red' : 'gray',\r\n//             }}\r\n//             placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\r\n//             onChangeText={(text) => handleInputChange(key, text)}\r\n//             value={formData[key]}\r\n//             keyboardType={key === 'dob' ? 'numeric' : 'default'}\r\n//           />\r\n//           {isFieldValid(key) && (\r\n//             <View style={styles.iconContainer}>\r\n//               <MaterialIcons name=\"check\" size={24} color=\"green\" style={styles.icon} />\r\n//             </View>\r\n//           )}\r\n//           {errors[key] && <Text style={styles.error}>{errors[key]}</Text>}\r\n//         </View>\r\n//       ))}\r\n\r\n//       <View style={styles.buttonContainer}>\r\n//         <Pressable style={styles.buttonPrev} onPress={() => onStepChange(1)}>\r\n//           <Text style={styles.buttonText}>Prev</Text>\r\n//         </Pressable>\r\n\r\n//         <Pressable style={styles.buttonNext} onPress={() => handleSignUp(3)}>\r\n//           <Text style={styles.buttonText}>Next</Text>\r\n//         </Pressable>\r\n//       </View>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   inputContainer: {\r\n//     position: 'relative',\r\n//     marginBottom: 20,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     borderWidth: 1,\r\n//     paddingLeft: 10,\r\n//     flexDirection: 'row',\r\n//     alignItems: 'center', // Center the icon vertically\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginTop: 5,\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n//   icon: {\r\n//     marginLeft: 10, // Adjust the margin as needed\r\n//   },\r\n//   iconContainer: {\r\n//     position: 'absolute',\r\n//     top: 12,\r\n//     right: 12,\r\n//   },\r\n//   placeholderLabel: {\r\n//     position: 'absolute',\r\n//     left: 10,\r\n//     top: -8,\r\n//     backgroundColor: 'rgb(243, 243, 243), 195, 197',\r\n//     paddingHorizontal: 5,\r\n//     color: 'black',\r\n//   },\r\n// });\r\n\r\n// export default SignUp2;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport { signUpValidationSchema } from '../../config/validations';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nconst SignUp2 = ({ onStepChange }) => {\r\n  const [formData, setFormData] = useState({\r\n    phoneNumber: '',\r\n    country: '',\r\n    city: '',\r\n    street: '',\r\n    streetNum: '',\r\n    entrance: '',\r\n    houseNumber: '',\r\n    dob: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n\r\n  const handleInputChange = (key, text) => {\r\n    setFormData({ ...formData, [key]: text });\r\n    setErrors({ ...errors, [key]: null }); // Reset error when the user starts typing\r\n  };\r\n\r\n  const isFieldValid = (key) => {\r\n    if (formData[key] && !errors[key]) {\r\n      // Check validation conditions\r\n      try {\r\n        signUpValidationSchema.validateSyncAt(key, formData);\r\n        return true;\r\n      } catch (validationError) {\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const renderLabel = (key) => {\r\n    return (\r\n      <Text style={styles.placeholderLabel}>\r\n        {formData[key] ? key.charAt(0).toUpperCase() + key.slice(1) : ''}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  const showDatePicker = () => {\r\n    setDatePickerVisibility(true);\r\n  };\r\n\r\n  const hideDatePicker = () => {\r\n    setDatePickerVisibility(false);\r\n  };\r\n\r\n  const handleDateConfirm = (date) => {\r\n    setFormData({ ...formData, dob: date.toISOString().split(\"T\")[0] });\r\n    hideDatePicker();\r\n  };\r\n\r\n  const handleSignUp = (newStep) => {\r\n    const formErrors = {};\r\n    Object.keys(formData).forEach((key) => {\r\n      try {\r\n        signUpValidationSchema.validateSyncAt(key, formData);\r\n      } catch (validationError) {\r\n        formErrors[key] = validationError.message;\r\n      }\r\n    });\r\n\r\n    if (Object.keys(formErrors).length === 0) {\r\n      // No errors, proceed to the next step\r\n      setErrors({});\r\n      onStepChange(newStep);\r\n    } else {\r\n      // Validation failed, set the errors\r\n      setErrors(formErrors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n      {Object.keys(formData).map((key) => (\r\n        <View key={key} style={styles.inputContainer}>\r\n          {renderLabel(key)}\r\n          <TextInput\r\n            style={{\r\n              ...styles.input,\r\n              height: 40,\r\n              borderColor: isFieldValid(key) ? 'green' : errors[key] ? 'red' : 'gray',\r\n            }}\r\n            placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\r\n            onChangeText={(text) => handleInputChange(key, text)}\r\n            value={formData[key]}\r\n            keyboardType={key === 'dob' ? 'numeric' : 'default'}\r\n          />\r\n          {isFieldValid(key) && (\r\n            <View style={styles.iconContainer}>\r\n              <MaterialIcons name=\"check\" size={24} color=\"green\" style={styles.icon} />\r\n            </View>\r\n          )}\r\n          {errors[key] && <Text style={styles.error}>{errors[key]}</Text>}\r\n        </View>\r\n      ))}\r\n\r\n      <TouchableOpacity style={styles.inputContainer} onPress={showDatePicker}>\r\n        {renderLabel('dob')}\r\n        <TextInput\r\n          style={{\r\n            ...styles.input,\r\n            height: 40,\r\n            borderColor: isFieldValid('dob') ? 'green' : errors['dob'] ? 'red' : 'gray',\r\n          }}\r\n          placeholder=\"Date of Birth\"\r\n          value={formData['dob']}\r\n          editable={false}\r\n        />\r\n        <DateTimePickerModal\r\n          isVisible={isDatePickerVisible}\r\n          mode=\"date\"\r\n          onConfirm={handleDateConfirm}\r\n          onCancel={hideDatePicker}\r\n        />\r\n        {isFieldValid('dob') && (\r\n          <View style={styles.iconContainer}>\r\n            <MaterialIcons name=\"check\" size={24} color=\"green\" style={styles.icon} />\r\n          </View>\r\n        )}\r\n        {errors['dob'] && <Text style={styles.error}>{errors['dob']}</Text>}\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity style={styles.buttonPrev} onPress={() => onStepChange(1)}>\r\n          <Text style={styles.buttonText}>Prev</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.buttonNext} onPress={() => handleSignUp(3)}>\r\n          <Text style={styles.buttonText}>Next</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  // ... (your existing styles)\r\n});\r\n\r\nexport default SignUp2;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}