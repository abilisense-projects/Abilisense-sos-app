{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SosButton = function SosButton(_ref) {\n  var navigation = _ref.navigation;\n  var animatedValue = useRef(new Animated.Value(0)).current;\n  var startAnimation = function startAnimation() {\n    Animated.loop(Animated.sequence([Animated.timing(animatedValue, {\n      toValue: 1,\n      duration: 1000,\n      easing: Easing.linear,\n      useNativeDriver: true\n    }), Animated.timing(animatedValue, {\n      toValue: 0,\n      duration: 0,\n      useNativeDriver: true\n    })])).start();\n  };\n  useEffect(function () {\n    var animationInterval = setInterval(function () {\n      startAnimation();\n    }, 1000);\n    return function () {\n      return clearInterval(animationInterval);\n    };\n  }, []);\n  var interpolateValue = animatedValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '360deg']\n  });\n  var animatedStyle = {\n    transform: [{\n      rotate: interpolateValue\n    }]\n  };\n  var onPress = function onPress() {\n    console.log('SosButton');\n    navigation.navigate('Status');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(TouchableOpacity, {\n      style: styles.button,\n      children: [_jsx(Text, {\n        style: styles.buttonText,\n        children: \"S.O.S\"\n      }), _jsx(Animated.View, {\n        style: [styles.animationCircle, animatedStyle]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    backgroundColor: 'red'\n  }\n});\nexport default SosButton;","map":{"version":3,"names":["React","useEffect","useRef","StyleSheet","Button","View","TouchableOpacity","Animated","Easing","jsx","_jsx","jsxs","_jsxs","SosButton","_ref","navigation","animatedValue","Value","current","startAnimation","loop","sequence","timing","toValue","duration","easing","linear","useNativeDriver","start","animationInterval","setInterval","clearInterval","interpolateValue","interpolate","inputRange","outputRange","animatedStyle","transform","rotate","onPress","console","log","navigate","style","styles","container","children","button","Text","buttonText","animationCircle","create","flex","backgroundColor","alignItems","justifyContent","width","height","borderRadius"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/SosButton.js"],"sourcesContent":["// import { useNavigation } from '@react-navigation/native';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { StyleSheet, Button, View, TouchableOpacity, Animated, Easing } from 'react-native';\r\n\r\nconst SosButton = ({ navigation }) => {\r\n    const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n    const startAnimation = () => {\r\n        Animated.loop(\r\n            Animated.sequence([\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 1,\r\n                    duration: 1000,\r\n                    easing: Easing.linear,\r\n                    useNativeDriver: true,\r\n                }),\r\n                Animated.timing(animatedValue, {\r\n                    toValue: 0,\r\n                    duration: 0,\r\n                    useNativeDriver: true,\r\n                }),\r\n            ]),\r\n        ).start();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const animationInterval = setInterval(() => {\r\n            startAnimation();\r\n        }, 1000); // אנימציה מתחילה מחדש כל שנייה (1000 מילישניות)\r\n\r\n        return () => clearInterval(animationInterval);\r\n    }, []);\r\n\r\n    const interpolateValue = animatedValue.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: ['0deg', '360deg'],\r\n    });\r\n\r\n    const animatedStyle = {\r\n        transform: [{ rotate: interpolateValue }],\r\n    };\r\n    // const navigation = useNavigation();\r\n    const onPress = () => {\r\n        // startAnimation();\r\n        console.log('SosButton');\r\n        navigation.navigate('Status');\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <TouchableOpacity style={styles.button}>\r\n                <Text style={styles.buttonText}>S.O.S</Text>\r\n                <Animated.View style={[styles.animationCircle, animatedStyle]} />\r\n            </TouchableOpacity>\r\n            {/* <Button\r\n                onPress={onPress}\r\n                title=\"S.O.S\"\r\n                color=\"#841584\"\r\n                accessibilityLabel=\"Learn more about this purple button\"\r\n            /> */}\r\n        </View>\r\n    );\r\n};\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    button: {\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 50,\r\n        backgroundColor: 'red',\r\n    },\r\n});\r\n\r\nexport default SosButton;\r\n"],"mappings":"AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC3B,IAAMC,aAAa,GAAGd,MAAM,CAAC,IAAIK,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAE3D,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IACzBZ,QAAQ,CAACa,IAAI,CACTb,QAAQ,CAACc,QAAQ,CAAC,CACdd,QAAQ,CAACe,MAAM,CAACN,aAAa,EAAE;MAC3BO,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAEjB,MAAM,CAACkB,MAAM;MACrBC,eAAe,EAAE;IACrB,CAAC,CAAC,EACFpB,QAAQ,CAACe,MAAM,CAACN,aAAa,EAAE;MAC3BO,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,CAAC;MACXG,eAAe,EAAE;IACrB,CAAC,CAAC,CACL,CACL,CAAC,CAACC,KAAK,CAAC,CAAC;EACb,CAAC;EAED3B,SAAS,CAAC,YAAM;IACZ,IAAM4B,iBAAiB,GAAGC,WAAW,CAAC,YAAM;MACxCX,cAAc,CAAC,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO;MAAA,OAAMY,aAAa,CAACF,iBAAiB,CAAC;IAAA;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,gBAAgB,GAAGhB,aAAa,CAACiB,WAAW,CAAC;IAC/CC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClBC,WAAW,EAAE,CAAC,MAAM,EAAE,QAAQ;EAClC,CAAC,CAAC;EAEF,IAAMC,aAAa,GAAG;IAClBC,SAAS,EAAE,CAAC;MAAEC,MAAM,EAAEN;IAAiB,CAAC;EAC5C,CAAC;EAED,IAAMO,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IAElBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB1B,UAAU,CAAC2B,QAAQ,CAAC,QAAQ,CAAC;EACjC,CAAC;EACD,OACIhC,IAAA,CAACL,IAAI;IAACsC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC1BlC,KAAA,CAACN,gBAAgB;MAACqC,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,GACnCpC,IAAA,CAACsC,IAAI;QAACL,KAAK,EAAEC,MAAM,CAACK,UAAW;QAAAH,QAAA,EAAC;MAAK,CAAM,CAAC,EAC5CpC,IAAA,CAACH,QAAQ,CAACF,IAAI;QAACsC,KAAK,EAAE,CAACC,MAAM,CAACM,eAAe,EAAEd,aAAa;MAAE,CAAE,CAAC;IAAA,CACnD;EAAC,CAOjB,CAAC;AAEf,CAAC;AACD,IAAMQ,MAAM,GAAGzC,UAAU,CAACgD,MAAM,CAAC;EAC7BN,SAAS,EAAE;IACPO,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDR,MAAM,EAAE;IACJS,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,EAAE;IAChBL,eAAe,EAAE;EACrB;AACJ,CAAC,CAAC;AAEF,eAAexC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}