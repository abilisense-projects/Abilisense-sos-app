{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CodeInput from \"./codeInput\";\nimport { sendVerificationCode } from \"./verifyEmailFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EmailVerification = function EmailVerification(_ref) {\n  var email = _ref.email,\n    onStepChange = _ref.onStepChange;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    verificationCode = _useState2[0],\n    setVerificationCode = _useState2[1];\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    message = _React$useState2[0],\n    setMessage = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isError = _React$useState4[0],\n    setIsError = _React$useState4[1];\n  var handleCodeChange = function handleCodeChange(code) {\n    setVerificationCode(code);\n  };\n  var verifyCode = function () {\n    var _ref2 = _asyncToGenerator(function* (email) {\n      try {\n        return yield axios.post(`http://localhost:3000/api/reset-password/email-verification`, {\n          email: email,\n          verificationCode: verificationCode\n        }).then(function (_) {\n          onStepChange(3);\n        }).catch(function (error) {\n          switch (error.response.data.errorCode) {\n            case \"EXPIRED_CODE\":\n              setMessage('The code has expired. Please resend the code');\n              break;\n            case \"TOO_MUCH_ATTEMPTS\":\n              var unblockTime = error.response.data.unblockTime;\n              setMessage(`Sorry, but you have exceeded the number of attempts allowed...\\nPlease try again in ${unblockTime}`);\n              break;\n            case \"INVALID_CODE_ERROR\":\n              setMessage('Invalid code');\n              break;\n          }\n          isError(true);\n        });\n      } catch (error) {\n        console.error('Error verifing code:', error);\n      }\n    });\n    return function verifyCode(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleVerificationCode = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield verifyCode(email);\n      } catch (_unused) {\n        console.log(\"error\");\n      }\n    });\n    return function handleVerificationCode() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleResend = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      sendVerificationCode(email);\n      setMessage(\"Verification code sent successfully\");\n      isError(false);\n    });\n    return function handleResend() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Check your email inbox\"\n    }), _jsx(Text, {\n      children: \"a verification code has been sent to you right now\"\n    }), _jsx(CodeInput, {\n      onCodeChange: handleCodeChange\n    }), _jsx(Button, {\n      title: \"Verify\",\n      onPress: handleVerificationCode\n    }), _jsx(TouchableWithoutFeedback, {\n      onPress: handleResend,\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          style: {\n            color: 'blue',\n            cursor: 'pointer'\n          },\n          children: \"Resend\"\n        })\n      })\n    }), _jsx(Text, {\n      style: isError ? styles.errorMessage : styles.message,\n      children: message\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  errorMessage: {\n    color: \"red\"\n  },\n  message: {\n    color: 'green'\n  }\n});\nexport default EmailVerification;","map":{"version":3,"names":["React","useState","axios","Button","View","Text","TouchableWithoutFeedback","StyleSheet","CodeInput","sendVerificationCode","jsx","_jsx","jsxs","_jsxs","EmailVerification","_ref","email","onStepChange","_useState","_useState2","_slicedToArray","verificationCode","setVerificationCode","_React$useState","_React$useState2","message","setMessage","_React$useState3","_React$useState4","isError","setIsError","handleCodeChange","code","verifyCode","_ref2","_asyncToGenerator","post","then","_","catch","error","response","data","errorCode","unblockTime","console","_x","apply","arguments","handleVerificationCode","_ref3","_unused","log","handleResend","_ref4","style","styles","container","children","onCodeChange","title","onPress","color","cursor","errorMessage","create"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/email_verification.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, View, Text, TouchableWithoutFeedback, StyleSheet } from 'react-native';\r\nimport CodeInput from './codeInput';\r\nimport { sendVerificationCode } from './verifyEmailFunctions';\r\n\r\n\r\n\r\nconst EmailVerification = ({ email, onStepChange }) => {\r\n    const [verificationCode, setVerificationCode] = useState('');\r\n    //const [errorMessage, seterrorMessage] = React.useState('');\r\n    const [message, setMessage] = React.useState('');\r\n    const [isError, setIsError] = React.useState(false);\r\n    //const [errorType, setErrorType] = React.useState('');\r\n\r\n    const handleCodeChange = (code) => {\r\n        setVerificationCode(code);\r\n    };\r\n\r\n    const verifyCode = async (email) => {\r\n        try {\r\n            return await axios.post(`http://localhost:3000/api/reset-password/email-verification`, { email, verificationCode })\r\n                .then(_ => {\r\n                    onStepChange(3);//nevigate to the next step\r\n                })\r\n                .catch(error => {\r\n                    switch (error.response.data.errorCode) {\r\n                        case \"EXPIRED_CODE\":\r\n                            setMessage('The code has expired. Please resend the code');\r\n                            break;\r\n                        case \"TOO_MUCH_ATTEMPTS\":\r\n                            let unblockTime = error.response.data.unblockTime;\r\n                            setMessage(`Sorry, but you have exceeded the number of attempts allowed...\\nPlease try again in ${unblockTime}`);\r\n                            break;\r\n                        case \"INVALID_CODE_ERROR\":\r\n                            setMessage('Invalid code')\r\n                            break;\r\n                    }\r\n                    isError(true);\r\n                });\r\n        }\r\n        catch (error) {\r\n            console.error('Error verifing code:', error);\r\n        }\r\n\r\n    }\r\n\r\n    const handleVerificationCode = async () => {\r\n        // const verificationResult = await verifyCode(email);\r\n        // if (!verificationResult) {\r\n        //     if (errorType === \"EXPIRED_CODE\") {\r\n        //         seterrorMessage(\"The code has expired. Please resend the code\")\r\n        //     }\r\n        //     if (errorType === \"INVALID_CODE_ERROR\") {\r\n        //         seterrorMessage(\"Invalid code\")\r\n        //     }\r\n        //     if (errorType === \"TOO_MUCH_ATTEMPTS\") {\r\n        //         seterrorMessage(\"Sorry, but you have exceeded the number of attempts allowed...\\nPlease try again in an hour\")\r\n        //     }\r\n\r\n        // } else {\r\n        //     seterrorMessage('');\r\n        //     onStepChange(3);//nevigate to the next step\r\n        // }\r\n        try { await verifyCode(email); } catch { console.log(\"error\"); }\r\n    }\r\n    const handleResend = async () => {\r\n        sendVerificationCode(email);\r\n        setMessage(\"Verification code sent successfully\");\r\n        isError(false);\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>Check your email inbox</Text>\r\n            <Text>a verification code has been sent to you right now</Text>\r\n            <CodeInput onCodeChange={handleCodeChange}></CodeInput>\r\n            <Button title='Verify' onPress={handleVerificationCode}></Button>\r\n            <TouchableWithoutFeedback onPress={handleResend}>\r\n                <View>\r\n                    <Text style={{ color: 'blue', cursor: 'pointer' }}>Resend</Text>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n            <Text style={isError ? styles.errorMessage : styles.message}>{message}</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    errorMessage: {\r\n        color: \"red\"\r\n    },\r\n    message: {\r\n        color: 'green'\r\n    }\r\n});\r\n\r\nexport default EmailVerification;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}