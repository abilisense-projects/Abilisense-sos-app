{"ast":null,"code":"'use strict';\n\nvar _worklet_11266082312464_init_data = {\n  code: \"function valueSetter(sv,value){let forceUpdate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;const previousAnimation=sv._animation;if(previousAnimation){previousAnimation.cancelled=true;sv._animation=null;}if(typeof value==='function'||value!==null&&typeof value==='object'&&value.onFrame!==undefined){const animation=typeof value==='function'?value():value;if(sv._value===animation.current&&!animation.isHigherOrder&&!forceUpdate){animation.callback&&animation.callback(true);return;}const initializeAnimation=function(timestamp){animation.onStart(animation,sv.value,timestamp,previousAnimation);};const currentTimestamp=global.__frameTimestamp||_getAnimationTimestamp();initializeAnimation(currentTimestamp);const step=function(newTimestamp){const timestamp=newTimestamp<(animation.timestamp||0)?animation.timestamp:newTimestamp;if(animation.cancelled){animation.callback&&animation.callback(false);return;}const finished=animation.onFrame(animation,timestamp);animation.finished=true;animation.timestamp=timestamp;sv._value=animation.current;if(finished){animation.callback&&animation.callback(true);}else{requestAnimationFrame(step);}};sv._animation=animation;step(currentTimestamp);}else{if(sv._value===value&&!forceUpdate){return;}sv._value=value;}}\",\n  location: \"C:\\\\Users\\\\inbal\\\\Documents\\\\abilisense-project\\\\project1\\\\panic-button\\\\client\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\valueSetter.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"valueSetter\\\",\\\"sv\\\",\\\"value\\\",\\\"forceUpdate\\\",\\\"arguments\\\",\\\"length\\\",\\\"undefined\\\",\\\"previousAnimation\\\",\\\"_animation\\\",\\\"cancelled\\\",\\\"onFrame\\\",\\\"animation\\\",\\\"_value\\\",\\\"current\\\",\\\"isHigherOrder\\\",\\\"callback\\\",\\\"initializeAnimation\\\",\\\"timestamp\\\",\\\"onStart\\\",\\\"currentTimestamp\\\",\\\"global\\\",\\\"__frameTimestamp\\\",\\\"_getAnimationTimestamp\\\",\\\"step\\\",\\\"newTimestamp\\\",\\\"finished\\\",\\\"requestAnimationFrame\\\"],\\\"sources\\\":[\\\"C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/node_modules/react-native-reanimated/lib/module/reanimated2/valueSetter.js\\\"],\\\"mappings\\\":\\\"AAEO,SAAAA,WAASA,CAAYC,EAAA,CAAEC,KAAE,CAAK,CAGnC,GAAI,CAAAC,WAAW,CAAGC,SAAS,CAACC,MAAM,CAAG,CAAC,EAAID,SAAS,CAAC,CAAC,CAAC,GAAKE,SAAS,CAAGF,SAAS,CAAC,CAAC,CAAC,CAAG,KAAK,CAC3F,KAAM,CAAAG,iBAAiB,CAAGN,EAAE,CAACO,UAAU,CACvC,GAAID,iBAAiB,CAAE,CACrBA,iBAAiB,CAACE,SAAS,CAAG,IAAI,CAClCR,EAAE,CAACO,UAAU,CAAG,IAAI,CACtB,CACA,GAAI,MAAO,CAAAN,KAAK,GAAK,UAAU,EAAIA,KAAK,GAAK,IAAI,EAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,EAAIA,KAAK,CAACQ,OAAO,GAAKJ,SAAS,CAAE,CAC7G,KAAM,CAAAK,SAAS,CAAG,MAAO,CAAAT,KAAK,GAAK,UAAU,CAAGA,KAAK,CAAC,CAAC,CAAGA,KAAK,CAK/D,GAAID,EAAE,CAACW,MAAM,GAAKD,SAAS,CAACE,OAAO,EAAI,CAACF,SAAS,CAACG,aAAa,EAAI,CAACX,WAAW,CAAE,CAC/EQ,SAAS,CAACI,QAAQ,EAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAI,CAAC,CAC9C,OACF,CAEA,KAAM,CAAAC,mBAAmB,CAAG,QAAAA,CAAAC,SAAS,CAAI,CACvCN,SAAS,CAACO,OAAO,CAACP,SAAS,CAAEV,EAAE,CAACC,KAAK,CAAEe,SAAS,CAAEV,iBAAiB,CAAC,CACtE,CAAC,CACD,KAAM,CAAAY,gBAAgB,CAAGC,MAAM,CAACC,gBAAgB,EAAIC,sBAAsB,CAAC,CAAC,CAC5EN,mBAAmB,CAACG,gBAAgB,CAAC,CACrC,KAAM,CAAAI,IAAI,CAAG,QAAAA,CAAAC,YAAY,CAAI,CAK3B,KAAM,CAAAP,SAAS,CAAGO,YAAY,EAAIb,SAAS,CAACM,SAAS,EAAI,CAAC,CAAC,CAAGN,SAAS,CAACM,SAAS,CAAGO,YAAY,CAChG,GAAIb,SAAS,CAACF,SAAS,CAAE,CACvBE,SAAS,CAACI,QAAQ,EAAIJ,SAAS,CAACI,QAAQ,CAAC,KAAoB,CAAC,CAC9D,OACF,CACA,KAAM,CAAAU,QAAQ,CAAGd,SAAS,CAACD,OAAO,CAACC,SAAS,CAAEM,SAAS,CAAC,CACxDN,SAAS,CAACc,QAAQ,CAAG,IAAI,CACzBd,SAAS,CAACM,SAAS,CAAGA,SAAS,CAC/BhB,EAAE,CAACW,MAAM,CAAGD,SAAS,CAACE,OAAO,CAC7B,GAAIY,QAAQ,CAAE,CACZd,SAAS,CAACI,QAAQ,EAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAmB,CAAC,CAC/D,CAAC,IAAM,CACLW,qBAAqB,CAACH,IAAI,CAAC,CAC7B,CACF,CAAC,CACDtB,EAAE,CAACO,UAAU,CAAGG,SAAS,CACzBY,IAAI,CAACJ,gBAAgB,CAAC,CACxB,CAAC,IAAM,CAGL,GAAIlB,EAAE,CAACW,MAAM,GAAKV,KAAK,EAAI,CAACC,WAAW,CAAE,CACvC,OACF,CACAF,EAAE,CAACW,MAAM,CAAGV,KAAK,CACnB,CACF\\\"}\",\n  version: \"3.6.1\"\n};\nexport var valueSetter = function () {\n  var _e = [new global.Error(), 1, -27];\n  var valueSetter = function valueSetter(sv, value) {\n    var forceUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var previousAnimation = sv._animation;\n    if (previousAnimation) {\n      previousAnimation.cancelled = true;\n      sv._animation = null;\n    }\n    if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame !== undefined) {\n      var animation = typeof value === 'function' ? value() : value;\n      if (sv._value === animation.current && !animation.isHigherOrder && !forceUpdate) {\n        animation.callback && animation.callback(true);\n        return;\n      }\n      var initializeAnimation = function initializeAnimation(timestamp) {\n        animation.onStart(animation, sv.value, timestamp, previousAnimation);\n      };\n      var currentTimestamp = global.__frameTimestamp || _getAnimationTimestamp();\n      initializeAnimation(currentTimestamp);\n      var step = function step(newTimestamp) {\n        var timestamp = newTimestamp < (animation.timestamp || 0) ? animation.timestamp : newTimestamp;\n        if (animation.cancelled) {\n          animation.callback && animation.callback(false);\n          return;\n        }\n        var finished = animation.onFrame(animation, timestamp);\n        animation.finished = true;\n        animation.timestamp = timestamp;\n        sv._value = animation.current;\n        if (finished) {\n          animation.callback && animation.callback(true);\n        } else {\n          requestAnimationFrame(step);\n        }\n      };\n      sv._animation = animation;\n      step(currentTimestamp);\n    } else {\n      if (sv._value === value && !forceUpdate) {\n        return;\n      }\n      sv._value = value;\n    }\n  };\n  valueSetter.__closure = {};\n  valueSetter.__workletHash = 11266082312464;\n  valueSetter.__initData = _worklet_11266082312464_init_data;\n  valueSetter.__stackDetails = _e;\n  return valueSetter;\n}();","map":{"version":3,"names":["_worklet_11266082312464_init_data","code","location","sourceMap","version","valueSetter","_e","global","Error","sv","value","forceUpdate","arguments","length","undefined","previousAnimation","_animation","cancelled","onFrame","animation","_value","current","isHigherOrder","callback","initializeAnimation","timestamp","onStart","currentTimestamp","__frameTimestamp","_getAnimationTimestamp","step","newTimestamp","finished","requestAnimationFrame","__closure","__workletHash","__initData","__stackDetails"],"sources":["C:\\Users\\inbal\\Documents\\abilisense-project\\project1\\panic-button\\client\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\valueSetter.ts"],"sourcesContent":["'use strict';\nimport type { AnimationObject, AnimatableValue } from './commonTypes';\nimport type { Descriptor } from './hook/commonTypes';\n\nexport function valueSetter(sv: any, value: any, forceUpdate = false): void {\n  'worklet';\n  const previousAnimation = sv._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    sv._animation = null;\n  }\n  if (\n    typeof value === 'function' ||\n    (value !== null &&\n      typeof value === 'object' &&\n      (value as AnimationObject).onFrame !== undefined)\n  ) {\n    const animation: AnimationObject =\n      typeof value === 'function'\n        ? (value as () => AnimationObject)()\n        : (value as AnimationObject);\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n    // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n    if (\n      sv._value === animation.current &&\n      !animation.isHigherOrder &&\n      !forceUpdate\n    ) {\n      animation.callback && animation.callback(true);\n      return;\n    }\n    // animated set\n    const initializeAnimation = (timestamp: number) => {\n      animation.onStart(animation, sv.value, timestamp, previousAnimation);\n    };\n    const currentTimestamp =\n      global.__frameTimestamp || _getAnimationTimestamp();\n    initializeAnimation(currentTimestamp);\n\n    const step = (newTimestamp: number) => {\n      // Function `requestAnimationFrame` adds callback to an array, all the callbacks are flushed with function `__flushAnimationFrame`\n      // Usually we flush them inside function `nativeRequestAnimationFrame` and then the given timestamp is the timestamp of end of the current frame.\n      // However function `__flushAnimationFrame` may also be called inside `registerEventHandler` - then we get actual timestamp which is earlier than the end of the frame.\n\n      const timestamp =\n        newTimestamp < (animation.timestamp || 0)\n          ? animation.timestamp\n          : newTimestamp;\n\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false /* finished */);\n        return;\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.finished = true;\n      animation.timestamp = timestamp;\n      sv._value = animation.current;\n      if (finished) {\n        animation.callback && animation.callback(true /* finished */);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    sv._animation = animation;\n\n    step(currentTimestamp);\n  } else {\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    if (sv._value === value && !forceUpdate) {\n      return;\n    }\n    sv._value = value as Descriptor | AnimatableValue;\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,iCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAIZ,WAAgBC,WAAW,GAApB;EAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAH,WAAA,YAAAA,YAAqBI,EAAO,EAAEC,KAAU,EAA6B;IAChE,IADqCC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IAElE,IAAMG,iBAAiB,GAAGN,EAAE,CAACO,UAAU;IACvC,IAAID,iBAAiB,EAAE;MACrBA,iBAAiB,CAACE,SAAS,GAAG,IAAI;MAClCR,EAAE,CAACO,UAAU,GAAG,IAAI;IACtB;IACA,IACE,OAAON,KAAK,KAAK,UAAU,IAC1BA,KAAK,KAAK,IAAI,IACb,OAAOA,KAAK,KAAK,QAAQ,IACxBA,KAAK,CAAqBQ,OAAO,KAAKJ,SAAU,EACnD;MACA,IAAMK,SAA0B,GAC9B,OAAOT,KAAK,KAAK,UAAU,GACtBA,KAAK,EAA4B,GACjCA,KAAyB;MAKhC,IACED,EAAE,CAACW,MAAM,KAAKD,SAAS,CAACE,OAAO,IAC/B,CAACF,SAAS,CAACG,aAAa,IACxB,CAACX,WAAW,EACZ;QACAQ,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAI,CAAC;QAC9C;MACF;MAEA,IAAMC,mBAAmB,GAAI,SAAvBA,mBAAmBA,CAAIC,SAAiB,EAAK;QACjDN,SAAS,CAACO,OAAO,CAACP,SAAS,EAAEV,EAAE,CAACC,KAAK,EAAEe,SAAS,EAAEV,iBAAiB,CAAC;MACtE,CAAC;MACD,IAAMY,gBAAgB,GACpBpB,MAAM,CAACqB,gBAAgB,IAAIC,sBAAsB,EAAE;MACrDL,mBAAmB,CAACG,gBAAgB,CAAC;MAErC,IAAMG,IAAI,GAAI,SAARA,IAAIA,CAAIC,YAAoB,EAAK;QAKrC,IAAMN,SAAS,GACbM,YAAY,IAAIZ,SAAS,CAACM,SAAS,IAAI,CAAC,CAAC,GACrCN,SAAS,CAACM,SAAS,GACnBM,YAAY;QAElB,IAAIZ,SAAS,CAACF,SAAS,EAAE;UACvBE,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC,KAAM,CAAe;UAC9D;QACF;QACA,IAAMS,QAAQ,GAAGb,SAAS,CAACD,OAAO,CAACC,SAAS,EAAEM,SAAS,CAAC;QACxDN,SAAS,CAACa,QAAQ,GAAG,IAAI;QACzBb,SAAS,CAACM,SAAS,GAAGA,SAAS;QAC/BhB,EAAE,CAACW,MAAM,GAAGD,SAAS,CAACE,OAAO;QAC7B,IAAIW,QAAQ,EAAE;UACZb,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAK,CAAe;QAC/D,CAAC,MAAM;UACLU,qBAAqB,CAACH,IAAI,CAAC;QAC7B;MACF,CAAC;MAEDrB,EAAE,CAACO,UAAU,GAAGG,SAAS;MAEzBW,IAAI,CAACH,gBAAgB,CAAC;IACxB,CAAC,MAAM;MAGL,IAAIlB,EAAE,CAACW,MAAM,KAAKV,KAAK,IAAI,CAACC,WAAW,EAAE;QACvC;MACF;MACAF,EAAE,CAACW,MAAM,GAAGV,KAAqC;IACnD;EACF;EAAAL,WAAA,CAAA6B,SAAA;EAAA7B,WAAA,CAAA8B,aAAA;EAAA9B,WAAA,CAAA+B,UAAA,GAAApC,iCAAA;EAAAK,WAAA,CAAAgC,cAAA,GAAA/B,EAAA;EAAA,OAAAD,WAAA;AAAA,CAzEO"},"metadata":{},"sourceType":"module","externalDependencies":[]}