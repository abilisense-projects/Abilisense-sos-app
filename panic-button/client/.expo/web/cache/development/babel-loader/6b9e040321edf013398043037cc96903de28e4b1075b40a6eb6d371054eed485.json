{"ast":null,"code":"var _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar animatedCircles = animatedValues.map(function (value, index) {\n  var interpolateValue = value.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '360deg']\n  });\n  var animatedStyle = {\n    transform: [{\n      translateX: value.interpolate({\n        inputRange: [0, 1],\n        outputRange: [80 * Math.cos(index * Math.PI / 3), 120 * Math.cos(index * Math.PI / 3)]\n      })\n    }, {\n      translateY: value.interpolate({\n        inputRange: [0, 1],\n        outputRange: [-80 * Math.sin(index * Math.PI / 3), -120 * Math.sin(index * Math.PI / 3)]\n      })\n    }, {\n      scale: value.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 1]\n      })\n    }],\n    opacity: value\n  };\n  return _reactJsxRuntime.jsx(Animated.View, {\n    style: [styles.animationCircle, animatedStyle]\n  }, index);\n});","map":{"version":3,"names":["animatedCircles","animatedValues","map","value","index","interpolateValue","interpolate","inputRange","outputRange","animatedStyle","transform","translateX","Math","cos","PI","translateY","sin","scale","opacity","_reactJsxRuntime","jsx","Animated","View","style","styles","animationCircle"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/SosButton.js"],"sourcesContent":["const animatedCircles = animatedValues.map((value, index) => {\r\n    const interpolateValue = value.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: ['0deg', '360deg'],\r\n    });\r\n\r\n    const animatedStyle = {\r\n        transform: [\r\n            {\r\n                translateX: value.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [80 * Math.cos((index * Math.PI) / 3), 120 * Math.cos((index * Math.PI) / 3)],\r\n                }),\r\n            },\r\n            {\r\n                translateY: value.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [-80 * Math.sin((index * Math.PI) / 3), -120 * Math.sin((index * Math.PI) / 3)],\r\n                }),\r\n            },\r\n            {\r\n                scale: value.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [0, 1],\r\n                }),\r\n            },\r\n        ],\r\n        opacity: value,\r\n    };\r\n\r\n    return (\r\n        <Animated.View key={index} style={[styles.animationCircle, animatedStyle]} />\r\n    );\r\n});\r\n"],"mappings":";AAAA,IAAMA,eAAe,GAAGC,cAAc,CAACC,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;EACzD,IAAMC,gBAAgB,GAAGF,KAAK,CAACG,WAAW,CAAC;IACvCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClBC,WAAW,EAAE,CAAC,MAAM,EAAE,QAAQ;EAClC,CAAC,CAAC;EAEF,IAAMC,aAAa,GAAG;IAClBC,SAAS,EAAE,CACP;MACIC,UAAU,EAAER,KAAK,CAACG,WAAW,CAAC;QAC1BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAClBC,WAAW,EAAE,CAAC,EAAE,GAAGI,IAAI,CAACC,GAAG,CAAET,KAAK,GAAGQ,IAAI,CAACE,EAAE,GAAI,CAAC,CAAC,EAAE,GAAG,GAAGF,IAAI,CAACC,GAAG,CAAET,KAAK,GAAGQ,IAAI,CAACE,EAAE,GAAI,CAAC,CAAC;MAC7F,CAAC;IACL,CAAC,EACD;MACIC,UAAU,EAAEZ,KAAK,CAACG,WAAW,CAAC;QAC1BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAClBC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAGI,IAAI,CAACI,GAAG,CAAEZ,KAAK,GAAGQ,IAAI,CAACE,EAAE,GAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAGF,IAAI,CAACI,GAAG,CAAEZ,KAAK,GAAGQ,IAAI,CAACE,EAAE,GAAI,CAAC,CAAC;MAC/F,CAAC;IACL,CAAC,EACD;MACIG,KAAK,EAAEd,KAAK,CAACG,WAAW,CAAC;QACrBC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAClBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;MACtB,CAAC;IACL,CAAC,CACJ;IACDU,OAAO,EAAEf;EACb,CAAC;EAED,OACIgB,gBAAA,CAAAC,GAAA,CAACC,QAAQ,CAACC,IAAI;IAAaC,KAAK,EAAE,CAACC,MAAM,CAACC,eAAe,EAAEhB,aAAa;EAAE,GAAtDL,KAAwD,CAAC;AAErF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}