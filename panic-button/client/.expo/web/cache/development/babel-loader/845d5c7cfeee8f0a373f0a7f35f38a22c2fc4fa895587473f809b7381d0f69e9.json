{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nexport var sendVerificationCode = function () {\n  var _ref = _asyncToGenerator(function* (email) {\n    try {\n      return yield axios.post(`http://localhost:3000/api/reset-password/initiate-reset`, {\n        email: email\n      }).then(function (response) {\n        return response.data;\n      }).catch(function (error) {\n        switch (error.response.data.errorCode) {\n          case \"TOO_MUCH_ATTEMPTS\":\n            var unblockTime = Math.ceil((error.response.data.unblockTime - Date.now()) / (1000 * 60)) % 60;\n            unblockTime = unblockTime === 0 ? 60 : unblockTime;\n            return `Sorry, but you have exceeded the number of attempts allowed...\\nPlease try again in ${unblockTime} minutes`;\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  });\n  return function sendVerificationCode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","sendVerificationCode","_ref","_asyncToGenerator","email","post","then","response","data","catch","error","errorCode","unblockTime","Math","ceil","Date","now","console","_x","apply","arguments"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/verifyEmailFunctions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const sendVerificationCode = async (email) => {\r\n    try {\r\n        return await axios.post(`http://localhost:3000/api/reset-password/initiate-reset`, { email })\r\n            .then(response => {\r\n                \r\n                return response.data;\r\n            })\r\n            .catch(error => {\r\n                switch (error.response.data.errorCode) {\r\n                case \"TOO_MUCH_ATTEMPTS\":\r\n                            let unblockTime = (Math.ceil((error.response.data.unblockTime - Date.now()) / (1000 * 60))) % 60;\r\n                            unblockTime = unblockTime === 0? 60 : unblockTime;\r\n                            return `Sorry, but you have exceeded the number of attempts allowed...\\nPlease try again in ${unblockTime} minutes`;\r\n                }\r\n            });\r\n    }\r\n    catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,IAAMC,oBAAoB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAK;IACjD,IAAI;MACA,aAAaJ,KAAK,CAACK,IAAI,CAAE,yDAAwD,EAAE;QAAED,KAAK,EAALA;MAAM,CAAC,CAAC,CACxFE,IAAI,CAAC,UAAAC,QAAQ,EAAI;QAEd,OAAOA,QAAQ,CAACC,IAAI;MACxB,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAC,KAAK,EAAI;QACZ,QAAQA,KAAK,CAACH,QAAQ,CAACC,IAAI,CAACG,SAAS;UACrC,KAAK,mBAAmB;YACZ,IAAIC,WAAW,GAAIC,IAAI,CAACC,IAAI,CAAC,CAACJ,KAAK,CAACH,QAAQ,CAACC,IAAI,CAACI,WAAW,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,CAAC,CAAC,GAAI,EAAE;YAChGJ,WAAW,GAAGA,WAAW,KAAK,CAAC,GAAE,EAAE,GAAGA,WAAW;YACjD,OAAQ,uFAAsFA,WAAY,UAAS;QAC/H;MACJ,CAAC,CAAC;IACV,CAAC,CACD,OAAOF,KAAK,EAAE;MACVO,OAAO,CAACP,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EAEJ,CAAC;EAAA,gBApBYT,oBAAoBA,CAAAiB,EAAA;IAAA,OAAAhB,IAAA,CAAAiB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAoBhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}