{"ast":null,"code":"import React, { useState } from 'react';\nimport axios from 'axios';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CodeInput from \"./codeInput\";\nimport { sendVerificationCode } from \"./verifyEmailFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResetSuccessfully = function ResetSuccessfully() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"Log In Again\",\n      onPress: function onPress() {\n        lo;\n      }\n    }), _jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return sendVerificationCode(email);\n      },\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          style: {\n            color: 'blue'\n          },\n          children: \"Resend\"\n        })\n      })\n    }), _jsx(Text, {\n      children: messageToUser\n    })]\n  });\n};\nvar styles = StyleSheet.create({});\nexport default ResetSuccessfully;","map":{"version":3,"names":["React","useState","axios","Button","View","Text","TouchableWithoutFeedback","StyleSheet","CodeInput","sendVerificationCode","jsx","_jsx","jsxs","_jsxs","ResetSuccessfully","style","styles","container","children","title","onPress","lo","email","color","messageToUser","create"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/reset_successfully.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, View, Text, TouchableWithoutFeedback, StyleSheet } from 'react-native';\r\nimport CodeInput from './codeInput';\r\nimport { sendVerificationCode } from './verifyEmailFunctions';\r\n\r\n\r\n\r\nconst ResetSuccessfully = () => {\r\n    \r\n    return (\r\n        <View style={styles.container}>\r\n            <Button title='Log In Again' onPress={()=>{lo}}></Button>\r\n            <TouchableWithoutFeedback onPress={() => sendVerificationCode(email)}>\r\n                <View>\r\n                    <Text style={{ color: 'blue' }}>Resend</Text>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n            <Text>{messageToUser}</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n});\r\n\r\nexport default ResetSuccessfully;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,wBAAA;AAAA,OAAAC,UAAA;AAE1B,OAAOC,SAAS;AAChB,SAASC,oBAAoB;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI9D,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EAE5B,OACID,KAAA,CAACT,IAAI;IAACW,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BP,IAAA,CAACR,MAAM;MAACgB,KAAK,EAAC,cAAc;MAACC,OAAO,EAAE,SAAAA,QAAA,EAAI;QAACC,EAAE;MAAA;IAAE,CAAS,CAAC,EACzDV,IAAA,CAACL,wBAAwB;MAACc,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMX,oBAAoB,CAACa,KAAK,CAAC;MAAA,CAAC;MAAAJ,QAAA,EACjEP,IAAA,CAACP,IAAI;QAAAc,QAAA,EACDP,IAAA,CAACN,IAAI;UAACU,KAAK,EAAE;YAAEQ,KAAK,EAAE;UAAO,CAAE;UAAAL,QAAA,EAAC;QAAM,CAAM;MAAC,CAC3C;IAAC,CACe,CAAC,EAC3BP,IAAA,CAACN,IAAI;MAAAa,QAAA,EAAEM;IAAa,CAAO,CAAC;EAAA,CAC1B,CAAC;AAEf,CAAC;AAED,IAAMR,MAAM,GAAGT,UAAU,CAACkB,MAAM,CAAC,CAEjC,CAAC,CAAC;AAEF,eAAeX,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}