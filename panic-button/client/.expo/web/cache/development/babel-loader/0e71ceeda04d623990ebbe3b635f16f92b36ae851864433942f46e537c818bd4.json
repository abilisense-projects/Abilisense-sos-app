{"ast":null,"code":"import { useNavigation } from '@react-navigation/native';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Status = function Status() {\n  var navigation = useNavigation();\n  var handlePress = function handlePress(difficulty) {\n    navigation.navigate('ProblemType', {\n      difficulty: difficulty\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Choose your status:\"\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, {\n        backgroundColor: 'yellow'\n      }],\n      onPress: function onPress() {\n        return handlePress('easy');\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Easy\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, {\n        backgroundColor: 'orange'\n      }],\n      onPress: function onPress() {\n        return handlePress('medium');\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Medium\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, {\n        backgroundColor: '#ff0000'\n      }],\n      onPress: function onPress() {\n        return handlePress('hard');\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Hard\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    width: 150,\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 10,\n    borderRadius: 15\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff'\n  }\n});\nexport default Status;","map":{"version":3,"names":["useNavigation","React","StyleSheet","TouchableOpacity","View","Text","jsx","_jsx","jsxs","_jsxs","Status","navigation","handlePress","difficulty","navigate","style","styles","container","children","button","backgroundColor","onPress","buttonText","create","flex","alignItems","justifyContent","width","height","marginVertical","borderRadius","fontSize","fontWeight","color"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/Status.js"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport React from 'react';\r\nimport { StyleSheet, TouchableOpacity, View, Text } from 'react-native';\r\n\r\nconst Status = () => {\r\n    const navigation = useNavigation();\r\n\r\n    const handlePress = (difficulty) => {\r\n        navigation.navigate('ProblemType', { difficulty });\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>Choose your status:</Text>\r\n            <TouchableOpacity\r\n                style={[styles.button, { backgroundColor: 'yellow' }]}\r\n                onPress={() => handlePress('easy')}\r\n            >\r\n                <Text style={styles.buttonText}>Easy</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                style={[styles.button, { backgroundColor: 'orange' }]}\r\n                onPress={() => handlePress('medium')}\r\n            >\r\n                <Text style={styles.buttonText}>Medium</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                style={[styles.button, { backgroundColor: '#ff0000' }]}\r\n                onPress={() => handlePress('hard')}\r\n            >\r\n                <Text style={styles.buttonText}>Hard</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    button: {\r\n        width: 150,\r\n        height: 150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginVertical: 10,\r\n        borderRadius: 15,\r\n    },\r\n    buttonText: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: '#fff',\r\n    },\r\n});\r\n\r\nexport default Status;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACjB,IAAMC,UAAU,GAAGX,aAAa,CAAC,CAAC;EAElC,IAAMY,WAAW,GAAG,SAAdA,WAAWA,CAAIC,UAAU,EAAK;IAChCF,UAAU,CAACG,QAAQ,CAAC,aAAa,EAAE;MAAED,UAAU,EAAVA;IAAW,CAAC,CAAC;EACtD,CAAC;EAED,OACIJ,KAAA,CAACL,IAAI;IAACW,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BX,IAAA,CAACF,IAAI;MAAAa,QAAA,EAAC;IAAmB,CAAM,CAAC,EAChCX,IAAA,CAACJ,gBAAgB;MACbY,KAAK,EAAE,CAACC,MAAM,CAACG,MAAM,EAAE;QAAEC,eAAe,EAAE;MAAS,CAAC,CAAE;MACtDC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMT,WAAW,CAAC,MAAM,CAAC;MAAA,CAAC;MAAAM,QAAA,EAEnCX,IAAA,CAACF,IAAI;QAACU,KAAK,EAAEC,MAAM,CAACM,UAAW;QAAAJ,QAAA,EAAC;MAAI,CAAM;IAAC,CAC7B,CAAC,EACnBX,IAAA,CAACJ,gBAAgB;MACbY,KAAK,EAAE,CAACC,MAAM,CAACG,MAAM,EAAE;QAAEC,eAAe,EAAE;MAAS,CAAC,CAAE;MACtDC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMT,WAAW,CAAC,QAAQ,CAAC;MAAA,CAAC;MAAAM,QAAA,EAErCX,IAAA,CAACF,IAAI;QAACU,KAAK,EAAEC,MAAM,CAACM,UAAW;QAAAJ,QAAA,EAAC;MAAM,CAAM;IAAC,CAC/B,CAAC,EACnBX,IAAA,CAACJ,gBAAgB;MACbY,KAAK,EAAE,CAACC,MAAM,CAACG,MAAM,EAAE;QAAEC,eAAe,EAAE;MAAU,CAAC,CAAE;MACvDC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMT,WAAW,CAAC,MAAM,CAAC;MAAA,CAAC;MAAAM,QAAA,EAEnCX,IAAA,CAACF,IAAI;QAACU,KAAK,EAAEC,MAAM,CAACM,UAAW;QAAAJ,QAAA,EAAC;MAAI,CAAM;IAAC,CAC7B,CAAC;EAAA,CACjB,CAAC;AAEf,CAAC;AAED,IAAMF,MAAM,GAAGd,UAAU,CAACqB,MAAM,CAAC;EAC7BN,SAAS,EAAE;IACPO,IAAI,EAAE,CAAC;IACPJ,eAAe,EAAE,MAAM;IACvBK,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDP,MAAM,EAAE;IACJQ,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXH,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBG,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE;EAClB,CAAC;EACDR,UAAU,EAAE;IACRS,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAevB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}