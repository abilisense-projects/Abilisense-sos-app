{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResetPassword = function ResetPassword(_ref) {\n  var onStepChange = _ref.onStepChange;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    onChangeEmail = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    messageToUser = _React$useState4[0],\n    onChangeMessageToUser = _React$useState4[1];\n  var handleVerificationCode = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var result = yield checkIfEmailExists(email);\n      console.log(\"result:\", result);\n      if (!result) {\n        onChangeMessageToUser('not valid email');\n      } else {\n        onChangeMessageToUser('succeeded!');\n        yield sendVerificationCode();\n        onStepChange(2);\n      }\n    });\n    return function handleVerificationCode() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"enter an email address:\"\n    }), _jsx(TextInput, {\n      onChangeText: onChangeEmail,\n      value: email\n    }), _jsx(Button, {\n      title: \"send me verification code\",\n      onPress: handleVerificationCode\n    }), _jsx(Text, {\n      children: messageToUser\n    })]\n  });\n};\nexport default ResetPassword;","map":{"version":3,"names":["React","axios","View","Text","Button","TextInput","jsx","_jsx","jsxs","_jsxs","ResetPassword","_ref","onStepChange","_React$useState","useState","_React$useState2","_slicedToArray","email","onChangeEmail","_React$useState3","_React$useState4","messageToUser","onChangeMessageToUser","handleVerificationCode","_ref2","_asyncToGenerator","result","checkIfEmailExists","console","log","sendVerificationCode","apply","arguments","children","onChangeText","value","title","onPress"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/reset_password.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { View, Text, Button, TextInput } from 'react-native';\r\n\r\nconst ResetPassword = ({ onStepChange }) => {\r\n    const [email, onChangeEmail] = React.useState('');\r\n    const [messageToUser, onChangeMessageToUser] = React.useState('');\r\n\r\n    const handleVerificationCode = async () => {\r\n        const result = await checkIfEmailExists(email);\r\n        console.log(\"result:\", result);\r\n        if (!result) {\r\n            onChangeMessageToUser('not valid email');\r\n        } else {\r\n            onChangeMessageToUser('succeeded!');\r\n            await sendVerificationCode();\r\n            onStepChange(2)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Text>enter an email address:</Text>\r\n            <TextInput\r\n                onChangeText={onChangeEmail}\r\n                value={email}\r\n            />\r\n            <Button title='send me verification code' onPress={handleVerificationCode}></Button>\r\n            <Text>{messageToUser}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ResetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAyB;EAAA,IAAnBC,YAAY,GAAAD,IAAA,CAAZC,YAAY;EACjC,IAAAC,eAAA,GAA+Bb,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA1CI,KAAK,GAAAF,gBAAA;IAAEG,aAAa,GAAAH,gBAAA;EAC3B,IAAAI,gBAAA,GAA+CnB,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAA1DE,aAAa,GAAAD,gBAAA;IAAEE,qBAAqB,GAAAF,gBAAA;EAE3C,IAAMG,sBAAsB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACvC,IAAMC,MAAM,SAASC,kBAAkB,CAACV,KAAK,CAAC;MAC9CW,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;MAC9B,IAAI,CAACA,MAAM,EAAE;QACTJ,qBAAqB,CAAC,iBAAiB,CAAC;MAC5C,CAAC,MAAM;QACHA,qBAAqB,CAAC,YAAY,CAAC;QACnC,MAAMQ,oBAAoB,CAAC,CAAC;QAC5BlB,YAAY,CAAC,CAAC,CAAC;MACnB;IACJ,CAAC;IAAA,gBAVKW,sBAAsBA,CAAA;MAAA,OAAAC,KAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAU3B;EAED,OACIvB,KAAA,CAACP,IAAI;IAAA+B,QAAA,GACD1B,IAAA,CAACJ,IAAI;MAAA8B,QAAA,EAAC;IAAuB,CAAM,CAAC,EACpC1B,IAAA,CAACF,SAAS;MACN6B,YAAY,EAAEhB,aAAc;MAC5BiB,KAAK,EAAElB;IAAM,CAChB,CAAC,EACFV,IAAA,CAACH,MAAM;MAACgC,KAAK,EAAC,2BAA2B;MAACC,OAAO,EAAEd;IAAuB,CAAS,CAAC,EACpFhB,IAAA,CAACJ,IAAI;MAAA8B,QAAA,EAAEZ;IAAa,CAAO,CAAC;EAAA,CAC1B,CAAC;AAEf,CAAC;AAED,eAAeX,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}