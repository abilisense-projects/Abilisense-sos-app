{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Location from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProblemType = function ProblemType(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    locationServiceEnabled = _useState2[0],\n    setLocationServiceEnabled = _useState2[1];\n  var _useState3 = useState('Wait, we are fetching you location...'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    displayCurrentAddress = _useState4[0],\n    setDisplayCurrentAddress = _useState4[1];\n  var onPress = function onPress() {\n    CheckIfLocationEnabled();\n    GetCurrentLocation();\n  };\n  var CheckIfLocationEnabled = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var enabled = yield Location.hasServicesEnabledAsync();\n      if (!enabled) {\n        Alert.alert('Location Service not enabled', 'Please enable your location services to continue', [{\n          text: 'OK'\n        }], {\n          cancelable: false\n        });\n      } else {\n        setLocationServiceEnabled(enabled);\n      }\n    });\n    return function CheckIfLocationEnabled() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var GetCurrentLocation = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        Alert.alert('Permission not granted', 'Allow the app to use location service.', [{\n          text: 'OK'\n        }], {\n          cancelable: false\n        });\n      }\n      var _yield$Location$getCu = yield Location.getCurrentPositionAsync(),\n        coords = _yield$Location$getCu.coords;\n      if (coords) {\n        var latitude = coords.latitude,\n          longitude = coords.longitude;\n        var response = yield Location.reverseGeocodeAsync({\n          latitude: latitude,\n          longitude: longitude\n        });\n        for (var item of response) {\n          console.log(item);\n          var address = `${item.name}, ${item.street}, ${item.postalCode}, ${item.city}`;\n          setDisplayCurrentAddress(address);\n          if (address.length > 0) {\n            console.log(+address);\n          }\n        }\n      }\n    });\n    return function GetCurrentLocation() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.contentContainer,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"What's your address?\"\n      })\n    }), _jsx(Button, {\n      onPress: onPress,\n      title: \"location\",\n      color: \"#841584\",\n      accessibilityLabel: \"Learn more about this purple button\"\n    }), _jsx(Text, {\n      style: styles.text,\n      children: displayCurrentAddress\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#070707',\n    alignItems: 'center',\n    paddingTop: 130\n  },\n  contentContainer: {\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  image: {\n    width: 150,\n    height: 150,\n    resizeMode: 'contain',\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: '700',\n    color: '#FD0139'\n  },\n  text: {\n    fontSize: 20,\n    fontWeight: '400',\n    color: '#fff'\n  }\n});\nexport default ProblemType;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Image","Alert","Button","Location","jsx","_jsx","jsxs","_jsxs","ProblemType","_ref","navigation","_useState","_useState2","_slicedToArray","locationServiceEnabled","setLocationServiceEnabled","_useState3","_useState4","displayCurrentAddress","setDisplayCurrentAddress","onPress","CheckIfLocationEnabled","GetCurrentLocation","_ref2","_asyncToGenerator","enabled","hasServicesEnabledAsync","alert","text","cancelable","apply","arguments","_ref3","_yield$Location$reque","requestForegroundPermissionsAsync","status","_yield$Location$getCu","getCurrentPositionAsync","coords","latitude","longitude","response","reverseGeocodeAsync","item","console","log","address","name","street","postalCode","city","length","style","styles","container","children","contentContainer","title","color","accessibilityLabel","create","flex","backgroundColor","alignItems","paddingTop","marginBottom","image","width","height","resizeMode","fontSize","fontWeight"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/ProblemType.js"],"sourcesContent":["// import { Button, TextInput } from \"react-native\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Image, Alert, Button } from 'react-native';\r\nimport * as Location from 'expo-location';\r\n\r\nconst ProblemType = ({ navigation }) => {\r\n    // const getLocation = () => {\r\n\r\n    // }\r\n    // const send = () => {\r\n    //     location = getLocation();\r\n    // }\r\n    // return (\r\n    //     <View>\r\n    //         <Button\r\n    //             onPress={send}\r\n    //             title=\"problem 1\"\r\n    //             color=\"#ffffff\"\r\n    //             accessibilityLabel=\"Learn more about this purple button\"\r\n    //         />\r\n    //         <Button\r\n    //             onPress={send}\r\n    //             title=\"problem 2\"\r\n    //             color=\"#ffff00\"\r\n    //             accessibilityLabel=\"Learn more about this purple button\"\r\n    //         />\r\n    //         <Button\r\n    //             onPress={send}\r\n    //             title=\"problem 3\"\r\n    //             color=\"#ff0000\"\r\n    //             accessibilityLabel=\"Learn more about this purple button\"\r\n    //         />\r\n    //         <TextInput\r\n    //             style={{ height: 40 }}\r\n    //             placeholder=\"another\"\r\n    //             onChangeText={newText => setText(newText)}\r\n    //             defaultValue={text}\r\n    //         />\r\n    //         <Button\r\n    //             onPress={send}\r\n    //             title=\"problem 3\"\r\n    //             color=\"#ff0000\"\r\n    //             accessibilityLabel=\"Learn more about this purple button\"\r\n    //         />\r\n    //     </View>\r\n    const [locationServiceEnabled, setLocationServiceEnabled] = useState(false);\r\n\r\n    const [displayCurrentAddress, setDisplayCurrentAddress] = useState(\r\n        'Wait, we are fetching you location...'\r\n    );\r\n    const onPress = ()=>{\r\n        CheckIfLocationEnabled();\r\n        GetCurrentLocation();\r\n    }\r\n    // useEffect(() => {\r\n    //     CheckIfLocationEnabled();\r\n    //     GetCurrentLocation();\r\n    // }, []);\r\n\r\n    const CheckIfLocationEnabled = async () => {\r\n        let enabled = await Location.hasServicesEnabledAsync();\r\n\r\n        if (!enabled) {\r\n            Alert.alert(\r\n                'Location Service not enabled',\r\n                'Please enable your location services to continue',\r\n                [{ text: 'OK' }],\r\n                { cancelable: false }\r\n            );\r\n        } else {\r\n            setLocationServiceEnabled(enabled);\r\n        }\r\n    };\r\n\r\n    const GetCurrentLocation = async () => {\r\n        let { status } = await Location.requestForegroundPermissionsAsync();\r\n\r\n        if (status !== 'granted') {\r\n            Alert.alert(\r\n                'Permission not granted',\r\n                'Allow the app to use location service.',\r\n                [{ text: 'OK' }],\r\n                { cancelable: false }\r\n            );\r\n        }\r\n\r\n        let { coords } = await Location.getCurrentPositionAsync();\r\n\r\n        if (coords) {\r\n            const { latitude, longitude } = coords;\r\n            let response = await Location.reverseGeocodeAsync({\r\n                latitude,\r\n                longitude,\r\n            });\r\n\r\n            for (let item of response) {\r\n                console.log(item)\r\n                let address = `${item.name}, ${item.street}, ${item.postalCode}, ${item.city}`;\r\n\r\n                setDisplayCurrentAddress(address);\r\n\r\n                if (address.length > 0) {\r\n                    console.log(+address);\r\n                    // setTimeout(() => {\r\n                    //     navigation.navigate('Home', { item: address });\r\n                    // }, 2000);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.contentContainer}>\r\n                {/* <Image source={require('../assets/geo.png')} style={styles.image} /> */}\r\n                <Text style={styles.title}>What's your address?</Text>\r\n            </View>\r\n            <Button\r\n                onPress={onPress}\r\n                title=\"location\"\r\n                color=\"#841584\"\r\n                accessibilityLabel=\"Learn more about this purple button\"\r\n            />\r\n            <Text style={styles.text}>{displayCurrentAddress}</Text>\r\n        </View>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#070707',\r\n        alignItems: 'center',\r\n        paddingTop: 130,\r\n    },\r\n    contentContainer: {\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 150,\r\n        resizeMode: 'contain',\r\n        marginBottom: 20,\r\n    },\r\n    title: {\r\n        fontSize: 22,\r\n        fontWeight: '700',\r\n        color: '#FD0139',\r\n    },\r\n    text: {\r\n        fontSize: 20,\r\n        fontWeight: '400',\r\n        color: '#fff',\r\n    },\r\n});\r\nexport default ProblemType;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}