{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/SignUp3.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import { View, Text, TouchableOpacity, TextInput, ScrollView, StyleSheet } from 'react-native';\r\n// import { useNavigation } from '@react-navigation/native';\r\n// import { MaterialIcons } from '@expo/vector-icons';\r\n\r\n// const MedicalConditionsComponent = () => {\r\n//   const navigation = useNavigation();  // Get navigation prop using useNavigation\r\n\r\n//   const [selectedConditions, setSelectedConditions] = useState([]);\r\n//   const [newCondition, setNewCondition] = useState('');\r\n//    // State for error messages\r\n//    const [error, setError] = useState('');\r\n\r\n//  // Function to handle form validation\r\n//  const validateForm = () => {\r\n//     setError('');\r\n\r\n//     if (!selectedConditions || !newCondition) {\r\n//         setError('All fields are required');\r\n//         return false;\r\n//     }\r\n\r\n//     // Add more sophisticated validation logic if needed\r\n\r\n//     return true;\r\n// };\r\n\r\n//   const addCondition = () => {\r\n//     if (newCondition.trim() !== '') {\r\n//       setSelectedConditions([...selectedConditions, newCondition.trim()]);\r\n//       setNewCondition('');\r\n//     }\r\n//   };\r\n\r\n//   const removeCondition = (condition) => {\r\n//     const updatedConditions = selectedConditions.filter((c) => c !== condition);\r\n//     setSelectedConditions(updatedConditions);\r\n//   };\r\n\r\n//   const renderConditions = () => {\r\n//     return selectedConditions.map((condition, index) => (\r\n//       <View key={index} style={styles.conditionBox}>\r\n//         <Text>{condition}</Text>\r\n//         <TouchableOpacity onPress={() => removeCondition(condition)}>\r\n//           <Text style={styles.removeButton}>X</Text>\r\n//         </TouchableOpacity>\r\n//       </View>\r\n//     ));\r\n//   };\r\n\r\n//   const handleSignUp3 = () => {\r\n//     if (validateForm()) {\r\n//         //Navigate to SignUp3 when the form is valid\r\n//          navigation.navigate('MedicalConditionsComponent');\r\n//     }\r\n// };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <ScrollView>\r\n//         <Text>Select Medical Conditions:</Text>\r\n//         {/* Add your list of medical conditions here */}\r\n//         {/* For simplicity, I'm just displaying the alphabetical sections */}\r\n//         <Text>A</Text>\r\n//         {/* ... (Add other sections similarly) */}\r\n//         <Text>H</Text>\r\n//         {/* ... (Add other sections similarly) */}\r\n//         <Text>J</Text>\r\n//         {/* ... (Add other sections similarly) */}\r\n//         <Text>M</Text>\r\n//         {/* ... (Add other sections similarly) */}\r\n//         <Text>N</Text>\r\n//         {/* ... (Add other sections similarly) */}\r\n//         <Text>S</Text>\r\n//         {/* ... (Add other sections similarly) */}\r\n//         <Text>P</Text>\r\n//         {/* ... (Add other sections similarly) */}\r\n//         <Text>K</Text>\r\n//         {/* ... (Add other sections similarly) */}\r\n//         <Text>R</Text>\r\n//         {/* ... (Add other sections similarly) */}\r\n//         <Text>T</Text>\r\n//         {/* ... (Add other sections similarly) */}\r\n//       </ScrollView>\r\n\r\n//       {/* Display selected conditions */}\r\n//       <View style={styles.selectedConditionsContainer}>{renderConditions()}</View>\r\n\r\n//       {/* Input for adding new condition */}\r\n//       <View style={styles.inputContainer}>\r\n//         <TextInput\r\n//           style={styles.input}\r\n//           placeholder=\"Add a new medical condition\"\r\n//           value={newCondition}\r\n//           onChangeText={(text) => setNewCondition(text)}\r\n//         />\r\n//         <TouchableOpacity onPress={addCondition}>\r\n//           <Text style={styles.addButton}>Add</Text>\r\n//         </TouchableOpacity>\r\n//       </View>\r\n\r\n//       {/* Login button */}\r\n//       <TouchableOpacity style={styles.loginButton}>\r\n//         <Text style={{ color: 'white' }}>Login</Text>\r\n//       </TouchableOpacity>\r\n// {/* \r\n//       <View style={styles.buttonContainer}>\r\n//           <TouchableOpacity style={styles.buttonPrev} onPress={() => navigation.goBack()}>\r\n//           <Text style={styles.buttonText}>Prev</Text>\r\n//           </TouchableOpacity>\r\n//            <TouchableOpacity style={styles.buttonNext} onPress={handleSignUp3}>\r\n//           <Text style={styles.buttonText}>Next</Text>\r\n//           </TouchableOpacity> \r\n//       </View> */}\r\n\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     padding: 20,\r\n//   },\r\n//   selectedConditionsContainer: {\r\n//     flexDirection: 'row',\r\n//     flexWrap: 'wrap',\r\n//     marginVertical: 10,\r\n//   },\r\n//   conditionBox: {\r\n//     backgroundColor: '#e0e0e0',\r\n//     borderRadius: 20,\r\n//     padding: 10,\r\n//     margin: 5,\r\n//     flexDirection: 'row',\r\n//     alignItems: 'center',\r\n//   },\r\n//   removeButton: {\r\n//     marginLeft: 5,\r\n//     color: 'red',\r\n//   },\r\n//   inputContainer: {\r\n//     flexDirection: 'row',\r\n//     alignItems: 'center',\r\n//     marginVertical: 10,\r\n//   },\r\n//   input: {\r\n//     flex: 1,\r\n//     borderWidth: 1,\r\n//     borderRadius: 10,\r\n//     padding: 10,\r\n//     marginRight: 10,\r\n//   },\r\n//   addButton: {\r\n//     color: 'blue',\r\n//   },\r\n//   loginButton: {\r\n//     backgroundColor: 'blue',\r\n//     borderRadius: 10,\r\n//     padding: 15,\r\n//     alignItems: 'center',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc', // Light gray\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n// });\r\n\r\n// export default MedicalConditionsComponent;\r\n\r\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}