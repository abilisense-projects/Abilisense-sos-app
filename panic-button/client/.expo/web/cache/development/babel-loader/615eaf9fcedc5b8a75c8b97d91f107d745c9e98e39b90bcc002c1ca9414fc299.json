{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MedicalConditionsList = function MedicalConditionsList(_ref) {\n  var route = _ref.route,\n    onPrev = _ref.onPrev;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var medicalConditions = ['Gallstones', 'Myocarditis', 'Infertility in Men', 'Infertility in Women', 'Chronic Instability of the Ankle', 'Alzheimer\\'s Disease', 'Endometriosis', 'Insulin', 'Asthma of the Skin in Children', 'Hammer Finger'];\n  var handleSelectCondition = function handleSelectCondition() {\n    if (validateForm()) {\n      onNext();\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"List of Medical Conditions:\"\n    }), medicalConditions.map(function (condition, index) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleSelectCondition(condition);\n        },\n        style: styles.conditionButton,\n        children: _jsx(Text, {\n          children: condition\n        })\n      }, index);\n    }), _jsx(\"button\", {\n      onClick: function onClick() {\n        return handleStepChange(1);\n      },\n      children: \"Close\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  conditionButton: {\n    backgroundColor: '#e0e0e0',\n    borderRadius: 10,\n    padding: 10,\n    marginVertical: 5,\n    alignItems: 'center'\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 20\n  },\n  closeModalButton: {\n    backgroundColor: '#454',\n    borderRadius: 10,\n    padding: 10,\n    marginVertical: 5,\n    alignItems: 'center'\n  }\n});\nexport default MedicalConditionsList;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Modal","ScrollView","jsx","_jsx","jsxs","_jsxs","MedicalConditionsList","_ref","route","onPrev","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","medicalConditions","handleSelectCondition","validateForm","onNext","style","styles","container","children","map","condition","index","onPress","conditionButton","onClick","handleStepChange","create","flex","padding","backgroundColor","borderRadius","marginVertical","alignItems","modalContainer","closeModalButton"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/MedicalConditionsList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, ScrollView } from 'react-native';\r\n\r\nconst MedicalConditionsList = ({ route, onPrev}) => {\r\n  // const { onSelectCondition } = route.params;\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n  const medicalConditions = [\r\n    'Gallstones', 'Myocarditis', 'Infertility in Men', 'Infertility in Women', 'Chronic Instability of the Ankle', \r\n    'Alzheimer\\'s Disease', 'Endometriosis', 'Insulin', 'Asthma of the Skin in Children', 'Hammer Finger', /* ... add other conditions */\r\n  ];\r\n\r\n  // const handleSelectCondition = (condition) => {\r\n  //   onSelectCondition(condition);\r\n  // };\r\n\r\n  const handleSelectCondition = () => {\r\n    if (validateForm()) {\r\n      onNext(); // Call the callback to move to the next step\r\n    }\r\n}  \r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>List of Medical Conditions:</Text>\r\n      {medicalConditions.map((condition, index) => (\r\n        <TouchableOpacity\r\n          key={index}\r\n          onPress={() => handleSelectCondition(condition)}\r\n          style={styles.conditionButton}\r\n        >\r\n          <Text>{condition}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n\r\n {/* Close button */}\r\n <button onClick={() => handleStepChange(1)}>Close</button>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  conditionButton: {\r\n    backgroundColor: '#e0e0e0',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n  },\r\n  closeModalButton: {\r\n    backgroundColor: '#454',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default MedicalConditionsList;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAAyB;EAAA,IAAnBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,MAAM,GAAAF,IAAA,CAANE,MAAM;EAE5C,IAAAC,SAAA,GAA0Cf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,cAAc,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEtC,IAAMI,iBAAiB,GAAG,CACxB,YAAY,EAAE,aAAa,EAAE,oBAAoB,EAAE,sBAAsB,EAAE,kCAAkC,EAC7G,sBAAsB,EAAE,eAAe,EAAE,SAAS,EAAE,gCAAgC,EAAE,eAAe,CACtG;EAMD,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAClC,IAAIC,YAAY,CAAC,CAAC,EAAE;MAClBC,MAAM,CAAC,CAAC;IACV;EACJ,CAAC;EAEC,OACEb,KAAA,CAACT,IAAI;IAACuB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BnB,IAAA,CAACN,IAAI;MAAAyB,QAAA,EAAC;IAA2B,CAAM,CAAC,EACvCP,iBAAiB,CAACQ,GAAG,CAAC,UAACC,SAAS,EAAEC,KAAK;MAAA,OACtCtB,IAAA,CAACL,gBAAgB;QAEf4B,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMV,qBAAqB,CAACQ,SAAS,CAAC;QAAA,CAAC;QAChDL,KAAK,EAAEC,MAAM,CAACO,eAAgB;QAAAL,QAAA,EAE9BnB,IAAA,CAACN,IAAI;UAAAyB,QAAA,EAAEE;QAAS,CAAO;MAAC,GAJnBC,KAKW,CAAC;IAAA,CACpB,CAAC,EAGPtB,IAAA;MAAQyB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,gBAAgB,CAAC,CAAC,CAAC;MAAA,CAAC;MAAAP,QAAA,EAAC;IAAK,CAAQ,CAAC;EAAA,CACjD,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGrB,UAAU,CAAC+B,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDL,eAAe,EAAE;IACfM,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBF,OAAO,EAAE,EAAE;IACXG,cAAc,EAAE,CAAC;IACjBC,UAAU,EAAE;EACd,CAAC;EACDC,cAAc,EAAE;IACdN,IAAI,EAAE,CAAC;IACPE,eAAe,EAAE,OAAO;IACxBD,OAAO,EAAE;EACX,CAAC;EACDM,gBAAgB,EAAE;IAChBL,eAAe,EAAE,MAAM;IACvBC,YAAY,EAAE,EAAE;IAChBF,OAAO,EAAE,EAAE;IACXG,cAAc,EAAE,CAAC;IACjBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe9B,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}