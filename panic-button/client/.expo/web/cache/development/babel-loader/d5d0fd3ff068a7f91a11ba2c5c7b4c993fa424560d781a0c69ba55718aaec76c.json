{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Geolocation from '@react-native-community/geolocation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProblemType = function ProblemType() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  var getLocation = function getLocation() {\n    console.log('fghjk');\n  };\n  var send = function send() {};\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      onPress: send,\n      title: \"problem 1\",\n      color: \"#841584\",\n      accessibilityLabel: \"Learn more about this purple button\"\n    }), _jsx(Button, {\n      onPress: send,\n      title: \"problem 2\",\n      color: \"#841584\",\n      accessibilityLabel: \"Learn more about this purple button\"\n    }), _jsx(Button, {\n      onPress: send,\n      title: \"problem 3\",\n      color: \"#841584\",\n      accessibilityLabel: \"Learn more about this purple button\"\n    }), _jsx(TextInput, {\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1\n      },\n      placeholder: \"Enter text\",\n      onChangeText: function onChangeText(newText) {\n        return setText(newText);\n      },\n      value: text\n    }), _jsx(Button, {\n      onPress: send,\n      title: \"Submit\",\n      color: \"#841584\",\n      accessibilityLabel: \"Learn more about this purple button\"\n    })]\n  });\n};\nexport default ProblemType;","map":{"version":3,"names":["React","useState","View","Button","TextInput","Geolocation","jsx","_jsx","jsxs","_jsxs","ProblemType","_useState","_useState2","_slicedToArray","text","setText","getLocation","console","log","send","children","onPress","title","color","accessibilityLabel","style","height","borderColor","borderWidth","placeholder","onChangeText","newText","value"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/ProblemType.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Button, TextInput } from 'react-native';\r\nimport Geolocation from '@react-native-community/geolocation';\r\n\r\nconst ProblemType = () => {\r\n    const [text, setText] = useState('');\r\n\r\n    const getLocation = () => {\r\n        console.log('fghjk');\r\n        // Return some location data here if needed\r\n    };\r\n\r\n    const send = () => {\r\n        // const location = getLocation();\r\n        // // Do something with the location data\r\n        // console.log(location);\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <Button\r\n                onPress={send}\r\n                title=\"problem 1\"\r\n                color=\"#841584\"\r\n                accessibilityLabel=\"Learn more about this purple button\"\r\n            />\r\n            <Button\r\n                onPress={send}\r\n                title=\"problem 2\"\r\n                color=\"#841584\"\r\n                accessibilityLabel=\"Learn more about this purple button\"\r\n            />\r\n            <Button\r\n                onPress={send}\r\n                title=\"problem 3\"\r\n                color=\"#841584\"\r\n                accessibilityLabel=\"Learn more about this purple button\"\r\n            />\r\n            <TextInput\r\n                style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n                placeholder=\"Enter text\"\r\n                onChangeText={newText => setText(newText)}\r\n                value={text}\r\n            />\r\n            <Button\r\n                onPress={send}\r\n                title=\"Submit\"\r\n                color=\"#841584\"\r\n                accessibilityLabel=\"Learn more about this purple button\"\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ProblemType;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAExC,OAAOC,WAAW,MAAM,qCAAqC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9D,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACtB,IAAAC,SAAA,GAAwBV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EAExB,CAAC;EAED,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS,CAInB,CAAC;EAED,OACIV,KAAA,CAACP,IAAI;IAAAkB,QAAA,GACDb,IAAA,CAACJ,MAAM;MACHkB,OAAO,EAAEF,IAAK;MACdG,KAAK,EAAC,WAAW;MACjBC,KAAK,EAAC,SAAS;MACfC,kBAAkB,EAAC;IAAqC,CAC3D,CAAC,EACFjB,IAAA,CAACJ,MAAM;MACHkB,OAAO,EAAEF,IAAK;MACdG,KAAK,EAAC,WAAW;MACjBC,KAAK,EAAC,SAAS;MACfC,kBAAkB,EAAC;IAAqC,CAC3D,CAAC,EACFjB,IAAA,CAACJ,MAAM;MACHkB,OAAO,EAAEF,IAAK;MACdG,KAAK,EAAC,WAAW;MACjBC,KAAK,EAAC,SAAS;MACfC,kBAAkB,EAAC;IAAqC,CAC3D,CAAC,EACFjB,IAAA,CAACH,SAAS;MACNqB,KAAK,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,WAAW,EAAE,MAAM;QAAEC,WAAW,EAAE;MAAE,CAAE;MAC3DC,WAAW,EAAC,YAAY;MACxBC,YAAY,EAAE,SAAAA,aAAAC,OAAO;QAAA,OAAIhB,OAAO,CAACgB,OAAO,CAAC;MAAA,CAAC;MAC1CC,KAAK,EAAElB;IAAK,CACf,CAAC,EACFP,IAAA,CAACJ,MAAM;MACHkB,OAAO,EAAEF,IAAK;MACdG,KAAK,EAAC,QAAQ;MACdC,KAAK,EAAC,SAAS;MACfC,kBAAkB,EAAC;IAAqC,CAC3D,CAAC;EAAA,CACA,CAAC;AAEf,CAAC;AAED,eAAed,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}