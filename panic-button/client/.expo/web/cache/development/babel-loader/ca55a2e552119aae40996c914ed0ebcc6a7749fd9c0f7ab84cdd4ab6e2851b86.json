{"ast":null,"code":"'use strict';\n\nimport { useHandler } from \"./useHandler\";\nimport { useEvent } from \"./useEvent\";\nvar EVENT_TYPE = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5\n};\nvar _worklet_3049273329051_init_data = {\n  code: \"function anonymous(e){const{useWeb,EVENT_TYPE,handlers,context}=this.__closure;const event=useWeb?e.nativeEvent:e;if(event.state===EVENT_TYPE.BEGAN&&handlers.onStart){handlers.onStart(event,context);}if(event.state===EVENT_TYPE.ACTIVE&&handlers.onActive){handlers.onActive(event,context);}if(event.oldState===EVENT_TYPE.ACTIVE&&event.state===EVENT_TYPE.END&&handlers.onEnd){handlers.onEnd(event,context);}if(event.oldState===EVENT_TYPE.BEGAN&&event.state===EVENT_TYPE.FAILED&&handlers.onFail){handlers.onFail(event,context);}if(event.oldState===EVENT_TYPE.ACTIVE&&event.state===EVENT_TYPE.CANCELLED&&handlers.onCancel){handlers.onCancel(event,context);}if((event.oldState===EVENT_TYPE.BEGAN||event.oldState===EVENT_TYPE.ACTIVE)&&event.state!==EVENT_TYPE.BEGAN&&event.state!==EVENT_TYPE.ACTIVE&&handlers.onFinish){handlers.onFinish(event,context,event.state===EVENT_TYPE.CANCELLED||event.state===EVENT_TYPE.FAILED);}}\",\n  location: \"C:\\\\Users\\\\inbal\\\\Documents\\\\abilisense-project\\\\project1\\\\panic-button\\\\client\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\hook\\\\useAnimatedGestureHandler.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"e\\\",\\\"useWeb\\\",\\\"EVENT_TYPE\\\",\\\"handlers\\\",\\\"context\\\",\\\"__closure\\\",\\\"event\\\",\\\"nativeEvent\\\",\\\"state\\\",\\\"BEGAN\\\",\\\"onStart\\\",\\\"ACTIVE\\\",\\\"onActive\\\",\\\"oldState\\\",\\\"END\\\",\\\"onEnd\\\",\\\"FAILED\\\",\\\"onFail\\\",\\\"CANCELLED\\\",\\\"onCancel\\\",\\\"onFinish\\\"],\\\"sources\\\":[\\\"C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedGestureHandler.js\\\"],\\\"mappings\\\":\\\"AA2BkB,QAAC,CAAAA,SAAIA,CAAAC,CAAA,QAAAC,MAAA,CAAAC,UAAA,CAAAC,QAAA,CAAAC,OAAA,OAAAC,SAAA,CAGnB,KAAM,CAAAC,KAAK,CAAGL,MAAM,CAIpBD,CAAC,CAACO,WAAW,CAAGP,CAAC,CACjB,GAAIM,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACO,KAAK,EAAIN,QAAQ,CAACO,OAAO,CAAE,CACxDP,QAAQ,CAACO,OAAO,CAACJ,KAAK,CAAEF,OAAO,CAAC,CAClC,CACA,GAAIE,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACS,MAAM,EAAIR,QAAQ,CAACS,QAAQ,CAAE,CAC1DT,QAAQ,CAACS,QAAQ,CAACN,KAAK,CAAEF,OAAO,CAAC,CACnC,CACA,GAAIE,KAAK,CAACO,QAAQ,GAAKX,UAAU,CAACS,MAAM,EAAIL,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACY,GAAG,EAAIX,QAAQ,CAACY,KAAK,CAAE,CAC5FZ,QAAQ,CAACY,KAAK,CAACT,KAAK,CAAEF,OAAO,CAAC,CAChC,CACA,GAAIE,KAAK,CAACO,QAAQ,GAAKX,UAAU,CAACO,KAAK,EAAIH,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACc,MAAM,EAAIb,QAAQ,CAACc,MAAM,CAAE,CAC/Fd,QAAQ,CAACc,MAAM,CAACX,KAAK,CAAEF,OAAO,CAAC,CACjC,CACA,GAAIE,KAAK,CAACO,QAAQ,GAAKX,UAAU,CAACS,MAAM,EAAIL,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACgB,SAAS,EAAIf,QAAQ,CAACgB,QAAQ,CAAE,CACrGhB,QAAQ,CAACgB,QAAQ,CAACb,KAAK,CAAEF,OAAO,CAAC,CACnC,CACA,GAAI,CAACE,KAAK,CAACO,QAAQ,GAAKX,UAAU,CAACO,KAAK,EAAIH,KAAK,CAACO,QAAQ,GAAKX,UAAU,CAACS,MAAM,GAAKL,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACO,KAAK,EAAIH,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACS,MAAM,EAAIR,QAAQ,CAACiB,QAAQ,CAAE,CAC/KjB,QAAQ,CAACiB,QAAQ,CAACd,KAAK,CAAEF,OAAO,CAAEE,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACgB,SAAS,EAAIZ,KAAK,CAACE,KAAK,GAAKN,UAAU,CAACc,MAAM,CAAC,CAC9G,CACF\\\"}\",\n  version: \"3.6.1\"\n};\nexport function useAnimatedGestureHandler(handlers, dependencies) {\n  var _useHandler = useHandler(handlers, dependencies),\n    context = _useHandler.context,\n    doDependenciesDiffer = _useHandler.doDependenciesDiffer,\n    useWeb = _useHandler.useWeb;\n  var handler = function () {\n    var _e = [new global.Error(), -5, -27];\n    var anonymous = function anonymous(e) {\n      var event = useWeb ? e.nativeEvent : e;\n      if (event.state === EVENT_TYPE.BEGAN && handlers.onStart) {\n        handlers.onStart(event, context);\n      }\n      if (event.state === EVENT_TYPE.ACTIVE && handlers.onActive) {\n        handlers.onActive(event, context);\n      }\n      if (event.oldState === EVENT_TYPE.ACTIVE && event.state === EVENT_TYPE.END && handlers.onEnd) {\n        handlers.onEnd(event, context);\n      }\n      if (event.oldState === EVENT_TYPE.BEGAN && event.state === EVENT_TYPE.FAILED && handlers.onFail) {\n        handlers.onFail(event, context);\n      }\n      if (event.oldState === EVENT_TYPE.ACTIVE && event.state === EVENT_TYPE.CANCELLED && handlers.onCancel) {\n        handlers.onCancel(event, context);\n      }\n      if ((event.oldState === EVENT_TYPE.BEGAN || event.oldState === EVENT_TYPE.ACTIVE) && event.state !== EVENT_TYPE.BEGAN && event.state !== EVENT_TYPE.ACTIVE && handlers.onFinish) {\n        handlers.onFinish(event, context, event.state === EVENT_TYPE.CANCELLED || event.state === EVENT_TYPE.FAILED);\n      }\n    };\n    anonymous.__closure = {\n      useWeb: useWeb,\n      EVENT_TYPE: EVENT_TYPE,\n      handlers: handlers,\n      context: context\n    };\n    anonymous.__workletHash = 3049273329051;\n    anonymous.__initData = _worklet_3049273329051_init_data;\n    anonymous.__stackDetails = _e;\n    return anonymous;\n  }();\n  if (useWeb) {\n    return handler;\n  }\n  return useEvent(handler, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], doDependenciesDiffer);\n}","map":{"version":3,"names":["useHandler","useEvent","EVENT_TYPE","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END","_worklet_3049273329051_init_data","code","location","sourceMap","version","useAnimatedGestureHandler","handlers","dependencies","_useHandler","context","doDependenciesDiffer","useWeb","handler","_e","global","Error","anonymous","e","event","nativeEvent","state","onStart","onActive","oldState","onEnd","onFail","onCancel","onFinish","__closure","__workletHash","__initData","__stackDetails"],"sources":["C:\\Users\\inbal\\Documents\\abilisense-project\\project1\\panic-button\\client\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useAnimatedGestureHandler.ts"],"sourcesContent":["'use strict';\nimport type {\n  DependencyList,\n  NativeEventWrapper,\n  ReanimatedEvent,\n} from './commonTypes';\nimport { useHandler } from './useHandler';\nimport { useEvent } from './useEvent';\n\nconst EVENT_TYPE = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n} as const;\n\ntype StateType = (typeof EVENT_TYPE)[keyof typeof EVENT_TYPE];\n\n// This type comes from React Native Gesture Handler\n// import type { PanGestureHandlerGestureEvent as DefaultEvent } from 'react-native-gesture-handler';\ntype DefaultEvent = {\n  nativeEvent: {\n    readonly handlerTag: number;\n    readonly numberOfPointers: number;\n    readonly state: (typeof EVENT_TYPE)[keyof typeof EVENT_TYPE];\n    readonly x: number;\n    readonly y: number;\n    readonly absoluteX: number;\n    readonly absoluteY: number;\n    readonly translationX: number;\n    readonly translationY: number;\n    readonly velocityX: number;\n    readonly velocityY: number;\n  };\n};\n\ninterface PropsUsedInUseAnimatedGestureHandler {\n  handlerTag?: number;\n  numberOfPointers?: number;\n  state?: StateType;\n  oldState?: StateType;\n}\n\nexport type GestureHandlerEvent<Event extends object> =\n  | ReanimatedEvent<Event>\n  | Event;\n\ntype GestureHandler<\n  Event extends NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler>,\n  Context extends Record<string, unknown>\n> = (\n  eventPayload: ReanimatedEvent<Event>,\n  context: Context,\n  isCanceledOrFailed?: boolean\n) => void;\n\nexport interface GestureHandlers<\n  Event extends NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler>,\n  Context extends Record<string, unknown>\n> {\n  [key: string]: GestureHandler<Event, Context> | undefined;\n  onStart?: GestureHandler<Event, Context>;\n  onActive?: GestureHandler<Event, Context>;\n  onEnd?: GestureHandler<Event, Context>;\n  onFail?: GestureHandler<Event, Context>;\n  onCancel?: GestureHandler<Event, Context>;\n  onFinish?: GestureHandler<Event, Context>;\n}\n\n/**\n * @deprecated useAnimatedGestureHandler is an old API which is no longer supported.\n *\n * Please check https://docs.swmansion.com/react-native-gesture-handler/docs/guides/upgrading-to-2/\n * for information about how to migrate to `react-native-gesture-handler` v2\n */\nexport function useAnimatedGestureHandler<\n  Event extends NativeEventWrapper<PropsUsedInUseAnimatedGestureHandler> = DefaultEvent,\n  Context extends Record<string, unknown> = Record<string, unknown>\n>(handlers: GestureHandlers<Event, Context>, dependencies?: DependencyList) {\n  type WebOrNativeEvent = Event | ReanimatedEvent<Event>;\n\n  const { context, doDependenciesDiffer, useWeb } = useHandler<Event, Context>(\n    handlers,\n    dependencies\n  );\n  const handler = (e: WebOrNativeEvent) => {\n    'worklet';\n    const event = useWeb\n      ? // On Web we get events straight from React Native and they don't have\n        // the `eventName` field there. To simplify the types here we just\n        // cast it as the field was available.\n        ((e as Event).nativeEvent as ReanimatedEvent<Event>)\n      : (e as ReanimatedEvent<Event>);\n\n    if (event.state === EVENT_TYPE.BEGAN && handlers.onStart) {\n      handlers.onStart(event, context);\n    }\n    if (event.state === EVENT_TYPE.ACTIVE && handlers.onActive) {\n      handlers.onActive(event, context);\n    }\n    if (\n      event.oldState === EVENT_TYPE.ACTIVE &&\n      event.state === EVENT_TYPE.END &&\n      handlers.onEnd\n    ) {\n      handlers.onEnd(event, context);\n    }\n    if (\n      event.oldState === EVENT_TYPE.BEGAN &&\n      event.state === EVENT_TYPE.FAILED &&\n      handlers.onFail\n    ) {\n      handlers.onFail(event, context);\n    }\n    if (\n      event.oldState === EVENT_TYPE.ACTIVE &&\n      event.state === EVENT_TYPE.CANCELLED &&\n      handlers.onCancel\n    ) {\n      handlers.onCancel(event, context);\n    }\n    if (\n      (event.oldState === EVENT_TYPE.BEGAN ||\n        event.oldState === EVENT_TYPE.ACTIVE) &&\n      event.state !== EVENT_TYPE.BEGAN &&\n      event.state !== EVENT_TYPE.ACTIVE &&\n      handlers.onFinish\n    ) {\n      handlers.onFinish(\n        event,\n        context,\n        event.state === EVENT_TYPE.CANCELLED ||\n          event.state === EVENT_TYPE.FAILED\n      );\n    }\n  };\n\n  if (useWeb) {\n    return handler;\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useEvent<Event>(\n    handler,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    doDependenciesDiffer\n    // This is not correct but we want to make GH think it receives a function.\n  ) as unknown as (e: Event) => void;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}