{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProblemType = function ProblemType(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    locationServiceEnabled = _useState2[0],\n    setLocationServiceEnabled = _useState2[1];\n  var _useState3 = useState('Wait, we are fetching you location...'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    displayCurrentAddress = _useState4[0],\n    setDisplayCurrentAddress = _useState4[1];\n  useEffect(function () {\n    CheckIfLocationEnabled();\n    GetCurrentLocation();\n  }, []);\n  var CheckIfLocationEnabled = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var enabled = yield Location.hasServicesEnabledAsync();\n      if (!enabled) {\n        Alert.alert('Location Service not enabled', 'Please enable your location services to continue', [{\n          text: 'OK'\n        }], {\n          cancelable: false\n        });\n      } else {\n        setLocationServiceEnabled(enabled);\n      }\n    });\n    return function CheckIfLocationEnabled() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var GetCurrentLocation = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        Alert.alert('Permission not granted', 'Allow the app to use location service.', [{\n          text: 'OK'\n        }], {\n          cancelable: false\n        });\n      }\n      var _yield$Location$getCu = yield Location.getCurrentPositionAsync(),\n        coords = _yield$Location$getCu.coords;\n      if (coords) {\n        var latitude = coords.latitude,\n          longitude = coords.longitude;\n        var response = yield Location.reverseGeocodeAsync({\n          latitude: latitude,\n          longitude: longitude\n        });\n        var _loop = function* _loop() {\n          var address = `${item.name}, ${item.street}, ${item.postalCode}, ${item.city}`;\n          setDisplayCurrentAddress(address);\n          if (address.length > 0) {\n            setTimeout(function () {\n              navigation.navigate('Home', {\n                item: address\n              });\n            }, 2000);\n          }\n        };\n        for (var item of response) {\n          yield* _loop();\n        }\n      }\n    });\n    return function GetCurrentLocation() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsx(Image, {\n        source: require(\"../assets/geo.png\"),\n        style: styles.image\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"What's your address?\"\n      })]\n    }), _jsx(Text, {\n      style: styles.text,\n      children: displayCurrentAddress\n    })]\n  });\n};\nexport default ProblemType;","map":{"version":3,"names":["ProblemType","_ref","navigation","_useState","useState","_useState2","_slicedToArray","locationServiceEnabled","setLocationServiceEnabled","_useState3","_useState4","displayCurrentAddress","setDisplayCurrentAddress","useEffect","CheckIfLocationEnabled","GetCurrentLocation","_ref2","_asyncToGenerator","enabled","Location","hasServicesEnabledAsync","Alert","alert","text","cancelable","apply","arguments","_ref3","_yield$Location$reque","requestForegroundPermissionsAsync","status","_yield$Location$getCu","getCurrentPositionAsync","coords","latitude","longitude","response","reverseGeocodeAsync","_loop","address","item","name","street","postalCode","city","length","setTimeout","navigate","_jsxs","View","style","styles","container","children","contentContainer","_jsx","Image","source","require","image","Text","title"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/ProblemType.js"],"sourcesContent":["import { Button, TextInput } from \"react-native\";\r\n\r\nconst ProblemType = ({ navigation }) => {\r\n    // const getLocation = () => {\r\n\r\n    // }\r\n    // const send = () => {\r\n    //     location = getLocation();\r\n    // }\r\n    // return (\r\n    //     <View>\r\n    //         <Button\r\n    //             onPress={send}\r\n    //             title=\"problem 1\"\r\n    //             color=\"#ffffff\"\r\n    //             accessibilityLabel=\"Learn more about this purple button\"\r\n    //         />\r\n    //         <Button\r\n    //             onPress={send}\r\n    //             title=\"problem 2\"\r\n    //             color=\"#ffff00\"\r\n    //             accessibilityLabel=\"Learn more about this purple button\"\r\n    //         />\r\n    //         <Button\r\n    //             onPress={send}\r\n    //             title=\"problem 3\"\r\n    //             color=\"#ff0000\"\r\n    //             accessibilityLabel=\"Learn more about this purple button\"\r\n    //         />\r\n    //         <TextInput\r\n    //             style={{ height: 40 }}\r\n    //             placeholder=\"another\"\r\n    //             onChangeText={newText => setText(newText)}\r\n    //             defaultValue={text}\r\n    //         />\r\n    //         <Button\r\n    //             onPress={send}\r\n    //             title=\"problem 3\"\r\n    //             color=\"#ff0000\"\r\n    //             accessibilityLabel=\"Learn more about this purple button\"\r\n    //         />\r\n    //     </View>\r\n    const [locationServiceEnabled, setLocationServiceEnabled] = useState(false);\r\n\r\n  const [displayCurrentAddress, setDisplayCurrentAddress] = useState(\r\n    'Wait, we are fetching you location...'\r\n  );\r\n\r\n  useEffect(() => {\r\n    CheckIfLocationEnabled();\r\n    GetCurrentLocation();\r\n  }, []);\r\n\r\n  const CheckIfLocationEnabled = async () => {\r\n    let enabled = await Location.hasServicesEnabledAsync();\r\n\r\n    if (!enabled) {\r\n      Alert.alert(\r\n        'Location Service not enabled',\r\n        'Please enable your location services to continue',\r\n        [{ text: 'OK' }],\r\n        { cancelable: false }\r\n      );\r\n    } else {\r\n      setLocationServiceEnabled(enabled);\r\n    }\r\n  };\r\n\r\n  const GetCurrentLocation = async () => {\r\n    let { status } = await Location.requestForegroundPermissionsAsync();\r\n\r\n    if (status !== 'granted') {\r\n      Alert.alert(\r\n        'Permission not granted',\r\n        'Allow the app to use location service.',\r\n        [{ text: 'OK' }],\r\n        { cancelable: false }\r\n      );\r\n    }\r\n\r\n    let { coords } = await Location.getCurrentPositionAsync();\r\n\r\n    if (coords) {\r\n      const { latitude, longitude } = coords;\r\n      let response = await Location.reverseGeocodeAsync({\r\n        latitude,\r\n        longitude,\r\n      });\r\n\r\n      for (let item of response) {\r\n        // console.log(item)\r\n        let address = `${item.name}, ${item.street}, ${item.postalCode}, ${item.city}`;\r\n\r\n        setDisplayCurrentAddress(address);\r\n\r\n        if (address.length > 0) {\r\n          setTimeout(() => {\r\n            navigation.navigate('Home', { item: address });\r\n          }, 2000);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.contentContainer}>\r\n        <Image source={require('../assets/geo.png')} style={styles.image} />\r\n        <Text style={styles.title}>What's your address?</Text>\r\n      </View>\r\n      <Text style={styles.text}>{displayCurrentAddress}</Text>\r\n    </View>\r\n    )\r\n}\r\nexport default ProblemType;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}