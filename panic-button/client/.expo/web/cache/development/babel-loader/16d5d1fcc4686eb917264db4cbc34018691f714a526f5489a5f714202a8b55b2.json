{"ast":null,"code":"'use strict';\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { useEffect, useRef } from 'react';\nimport { startMapper, stopMapper, makeRemote } from \"../core\";\nimport updateProps, { updatePropsJestWrapper } from \"../UpdateProps\";\nimport { initialUpdaterRun } from \"../animation\";\nimport { useSharedValue } from \"./useSharedValue\";\nimport { buildWorkletsHash, isAnimated, shallowEqual, validateAnimatedStyles } from \"./utils\";\nimport { makeViewDescriptorsSet, useViewRefSet } from \"../ViewDescriptorsSet\";\nimport { isJest, shouldBeUseWeb } from \"../PlatformChecker\";\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nfunction prepareAnimation(frameTimestamp, animatedProp, lastAnimation, lastValue) {\n  'worklet';\n\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach(function (prop, index) {\n      prepareAnimation(frameTimestamp, prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n    });\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    var animation = animatedProp;\n    var value = animation.current;\n    if (lastValue !== undefined) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n            value = lastAnimation.current;\n          } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n            value = lastValue.current;\n          }\n        }\n      } else {\n        value = lastValue;\n      }\n    }\n    animation.callStart = function (timestamp) {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    Object.keys(animatedProp).forEach(function (key) {\n      return prepareAnimation(frameTimestamp, animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n    });\n  }\n}\nfunction runAnimations(animation, timestamp, key, result, animationsActive) {\n  'worklet';\n\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    var allFinished = true;\n    animation.forEach(function (entry, index) {\n      if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    var finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    var _allFinished = true;\n    Object.keys(animation).forEach(function (k) {\n      if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n        _allFinished = false;\n      }\n    });\n    return _allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\nfunction styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n  'worklet';\n\n  var _state$animations, _updater;\n  var isAnimatedProps = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var animations = (_state$animations = state.animations) != null ? _state$animations : {};\n  var newValues = (_updater = updater()) != null ? _updater : {};\n  var oldValues = state.last;\n  var nonAnimatedNewValues = {};\n  var hasAnimations = false;\n  var frameTimestamp;\n  var hasNonAnimatedValues = false;\n  for (var key in newValues) {\n    var value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || _getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n  if (hasAnimations) {\n    var frame = function frame(timestamp) {\n      var animations = state.animations,\n        last = state.last,\n        isAnimationCancelled = state.isAnimationCancelled;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n      var updates = {};\n      var allFinished = true;\n      for (var propName in animations) {\n        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp);\n    }\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef, isAnimatedProps);\n    }\n  }\n  state.last = newValues;\n}\nfunction jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle) {\n  'worklet';\n\n  var _state$animations2, _updater2;\n  var adapters = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  var animations = (_state$animations2 = state.animations) != null ? _state$animations2 : {};\n  var newValues = (_updater2 = updater()) != null ? _updater2 : {};\n  var oldValues = state.last;\n  var hasAnimations = false;\n  var frameTimestamp;\n  Object.keys(animations).forEach(function (key) {\n    var value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach(function (key) {\n    var value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || _getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n  function frame(timestamp) {\n    var animations = state.animations,\n      last = state.last,\n      isAnimationCancelled = state.isAnimationCancelled;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n    var updates = {};\n    var allFinished = true;\n    Object.keys(animations).forEach(function (propName) {\n      var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n    }\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n  state.last = newValues;\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(viewDescriptors, newValues, maybeViewRef, animatedStyle, adapters);\n  }\n}\nfunction checkSharedValueUsage(prop, currentKey) {\n  if (Array.isArray(prop)) {\n    for (var element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop !== null && prop.value === undefined) {\n    for (var key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (currentKey !== undefined && typeof prop === 'object' && prop !== null && prop.value !== undefined) {\n    throw new Error(`[Reanimated] Invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`);\n  }\n}\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n  var _updater$__closure;\n  var isAnimatedProps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var viewsRef = useViewRefSet();\n  var initRef = useRef();\n  var inputs = Object.values((_updater$__closure = updater.__closure) != null ? _updater$__closure : {});\n  if (SHOULD_BE_USE_WEB) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {\n      inputs = dependencies;\n    }\n    if (__DEV__ && !inputs.length && !dependencies && !updater.__workletHash) {\n      throw new Error(`[Reanimated] \\`useAnimatedStyle\\` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel/SWC plugin.\nFor more, see the docs: \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin\\`.`);\n    }\n  }\n  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n  var adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  var animationsActive = useSharedValue(true);\n  var animatedStyle = useRef({});\n  if (!dependencies) {\n    dependencies = [].concat(_toConsumableArray(inputs), [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n  if (!initRef.current) {\n    var initialStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater\n      },\n      remoteState: makeRemote({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false\n      }),\n      viewDescriptors: makeViewDescriptorsSet()\n    };\n  }\n  var _initRef$current = initRef.current,\n    initial = _initRef$current.initial,\n    remoteState = _initRef$current.remoteState,\n    viewDescriptors = _initRef$current.viewDescriptors;\n  var shareableViewDescriptors = viewDescriptors.shareableViewDescriptors;\n  var maybeViewRef = SHOULD_BE_USE_WEB ? viewsRef : undefined;\n  dependencies.push(shareableViewDescriptors);\n  useEffect(function () {\n    var fun;\n    var updaterFn = updater;\n    if (adapters) {\n      updaterFn = function updaterFn() {\n        'worklet';\n\n        var newValues = updater();\n        adaptersArray.forEach(function (adapter) {\n          adapter(newValues);\n        });\n        return newValues;\n      };\n    }\n    if (isJest()) {\n      fun = function fun() {\n        'worklet';\n\n        jestStyleUpdater(shareableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n      };\n    } else {\n      fun = function fun() {\n        'worklet';\n\n        styleUpdater(shareableViewDescriptors, updaterFn, remoteState, maybeViewRef, animationsActive, isAnimatedProps);\n      };\n    }\n    var mapperId = startMapper(fun, inputs);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(function () {\n    animationsActive.value = true;\n    return function () {\n      animationsActive.value = false;\n    };\n  }, []);\n  checkSharedValueUsage(initial.value);\n  if (isJest()) {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef,\n      animatedStyle: animatedStyle\n    };\n  } else {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef\n    };\n  }\n}","map":{"version":3,"names":["_toConsumableArray","useEffect","useRef","startMapper","stopMapper","makeRemote","updateProps","updatePropsJestWrapper","initialUpdaterRun","useSharedValue","buildWorkletsHash","isAnimated","shallowEqual","validateAnimatedStyles","makeViewDescriptorsSet","useViewRefSet","isJest","shouldBeUseWeb","SHOULD_BE_USE_WEB","prepareAnimation","frameTimestamp","animatedProp","lastAnimation","lastValue","Array","isArray","forEach","prop","index","onFrame","animation","value","current","undefined","callStart","timestamp","onStart","Object","keys","key","runAnimations","result","animationsActive","allFinished","entry","finished","callback","k","styleUpdater","viewDescriptors","updater","state","maybeViewRef","_state$animations","_updater","isAnimatedProps","arguments","length","animations","newValues","oldValues","last","nonAnimatedNewValues","hasAnimations","hasNonAnimatedValues","global","__frameTimestamp","_getAnimationTimestamp","frame","isAnimationCancelled","isAnimationRunning","updates","propName","requestAnimationFrame","jestStyleUpdater","animatedStyle","_state$animations2","_updater2","adapters","checkSharedValueUsage","currentKey","element","Error","useAnimatedStyle","dependencies","_updater$__closure","viewsRef","initRef","inputs","values","__closure","_dependencies","__DEV__","__workletHash","adaptersArray","adaptersHash","concat","push","initialStyle","initial","remoteState","_initRef$current","shareableViewDescriptors","fun","updaterFn","adapter","mapperId"],"sources":["C:\\Users\\inbal\\Documents\\abilisense-project\\project1\\panic-button\\client\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useAnimatedStyle.ts"],"sourcesContent":["'use strict';\nimport type { MutableRefObject } from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport { startMapper, stopMapper, makeRemote } from '../core';\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\nimport { initialUpdaterRun } from '../animation';\nimport { useSharedValue } from './useSharedValue';\nimport {\n  buildWorkletsHash,\n  isAnimated,\n  shallowEqual,\n  validateAnimatedStyles,\n} from './utils';\nimport type { DefaultStyle, DependencyList, Descriptor } from './commonTypes';\nimport type { ViewDescriptorsSet, ViewRefSet } from '../ViewDescriptorsSet';\nimport { makeViewDescriptorsSet, useViewRefSet } from '../ViewDescriptorsSet';\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\nimport type {\n  AnimationObject,\n  Timestamp,\n  NestedObjectValues,\n  SharedValue,\n  StyleProps,\n  __AdapterWorkletFunction,\n  __BasicWorkletFunction,\n  WorkletFunction,\n} from '../commonTypes';\nimport type { AnimatedStyle } from '../helperTypes';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\ninterface AnimatedState {\n  last: AnimatedStyle<any>;\n  animations: AnimatedStyle<any>;\n  isAnimationRunning: boolean;\n  isAnimationCancelled: boolean;\n}\n\ninterface AnimationRef {\n  initial: {\n    value: AnimatedStyle<any>;\n    updater: () => AnimatedStyle<any>;\n  };\n  remoteState: AnimatedState;\n  viewDescriptors: ViewDescriptorsSet;\n}\n\nfunction prepareAnimation(\n  frameTimestamp: number,\n  animatedProp: AnimatedStyle<any>,\n  lastAnimation: AnimatedStyle<any>,\n  lastValue: AnimatedStyle<any>\n): void {\n  'worklet';\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach((prop, index) => {\n      prepareAnimation(\n        frameTimestamp,\n        prop,\n        lastAnimation && lastAnimation[index],\n        lastValue && lastValue[index]\n      );\n    });\n    // return animatedProp;\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    const animation = animatedProp;\n\n    let value = animation.current;\n    if (lastValue !== undefined) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          // previously it was a shared value\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if (lastAnimation?.current !== undefined) {\n            // it was an animation before, copy its state\n            value = lastAnimation.current;\n          } else if (lastValue?.current !== undefined) {\n            // it was initialized\n            value = lastValue.current;\n          }\n        }\n      } else {\n        // previously it was a plain value, just set it as starting point\n        value = lastValue;\n      }\n    }\n\n    animation.callStart = (timestamp: Timestamp) => {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    // it is an object\n    Object.keys(animatedProp).forEach((key) =>\n      prepareAnimation(\n        frameTimestamp,\n        animatedProp[key],\n        lastAnimation && lastAnimation[key],\n        lastValue && lastValue[key]\n      )\n    );\n  }\n}\n\nfunction runAnimations(\n  animation: AnimatedStyle<any>,\n  timestamp: Timestamp,\n  key: number | string,\n  result: AnimatedStyle<any>,\n  animationsActive: SharedValue<boolean>\n): boolean {\n  'worklet';\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    let allFinished = true;\n    animation.forEach((entry, index) => {\n      if (\n        !runAnimations(entry, timestamp, index, result[key], animationsActive)\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    let finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true /* finished */);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    let allFinished = true;\n    Object.keys(animation).forEach((k) => {\n      if (\n        !runAnimations(\n          animation[k],\n          timestamp,\n          k,\n          result[key],\n          animationsActive\n        )\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\n\nfunction styleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: __BasicWorkletFunction<AnimatedStyle<any>>,\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>,\n  isAnimatedProps = false\n): void {\n  'worklet';\n  const animations = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n  const nonAnimatedNewValues: StyleProps = {};\n\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  let hasNonAnimatedValues = false;\n  for (const key in newValues) {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || _getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n\n  if (hasAnimations) {\n    const frame = (timestamp: Timestamp) => {\n      const { animations, last, isAnimationCancelled } = state;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      const updates: AnimatedStyle<any> = {};\n      let allFinished = true;\n      for (const propName in animations) {\n        const finished = runAnimations(\n          animations[propName],\n          timestamp,\n          propName,\n          updates,\n          animationsActive\n        );\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef, isAnimatedProps);\n    }\n  }\n  state.last = newValues;\n}\n\nfunction jestStyleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: __BasicWorkletFunction<AnimatedStyle<any>>,\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>,\n  animatedStyle: MutableRefObject<AnimatedStyle<any>>,\n  adapters: __AdapterWorkletFunction[] = []\n): void {\n  'worklet';\n  const animations: AnimatedStyle<any> = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n\n  // extract animated props\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  Object.keys(animations).forEach((key) => {\n    const value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || _getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n\n  function frame(timestamp: Timestamp) {\n    const { animations, last, isAnimationCancelled } = state;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n\n    const updates: AnimatedStyle<any> = {};\n    let allFinished = true;\n    Object.keys(animations).forEach((propName) => {\n      const finished = runAnimations(\n        animations[propName],\n        timestamp,\n        propName,\n        updates,\n        animationsActive\n      );\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(\n        viewDescriptors,\n        updates,\n        maybeViewRef,\n        animatedStyle,\n        adapters\n      );\n    }\n\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n\n  // calculate diff\n  state.last = newValues;\n\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(\n      viewDescriptors,\n      newValues,\n      maybeViewRef,\n      animatedStyle,\n      adapters\n    );\n  }\n}\n\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(\n  prop: NestedObjectValues<AnimationObject>,\n  currentKey?: string\n): void {\n  if (Array.isArray(prop)) {\n    // if it's an array (i.ex. transform) validate all its elements\n    for (const element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value === undefined\n  ) {\n    // if it's a nested object, run validation for all its props\n    for (const key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (\n    currentKey !== undefined &&\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value !== undefined\n  ) {\n    // if shared value is passed insted of its value, throw an error\n    throw new Error(\n      `[Reanimated] Invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`\n    );\n  }\n}\n\n/**\n * Lets you create a styles object, similar to StyleSheet styles, which can be animated using shared values.\n *\n * @param updater - A function returning an object with style properties you want to animate.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @returns An animated style object which has to be passed to the `style` property of an Animated component you want to animate.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedStyle\n */\n// You cannot pass Shared Values to `useAnimatedStyle` directly.\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater: () => Style,\n  dependencies?: DependencyList | null\n): Style;\n\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater: WorkletFunction<[], Style>,\n  dependencies?: DependencyList | null,\n  adapters?: WorkletFunction | WorkletFunction[],\n  isAnimatedProps = false\n) {\n  const viewsRef: ViewRefSet<unknown> = useViewRefSet();\n  const initRef = useRef<AnimationRef>();\n  let inputs = Object.values(updater.__closure ?? {});\n  if (SHOULD_BE_USE_WEB) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n    if (__DEV__ && !inputs.length && !dependencies && !updater.__workletHash) {\n      throw new Error(\n        `[Reanimated] \\`useAnimatedStyle\\` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel/SWC plugin.\nFor more, see the docs: \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin\\`.`\n      );\n    }\n  }\n  const adaptersArray = adapters\n    ? Array.isArray(adapters)\n      ? adapters\n      : [adapters]\n    : [];\n  const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  const animationsActive = useSharedValue<boolean>(true);\n  const animatedStyle: MutableRefObject<Style> = useRef<Style>({} as Style);\n\n  // build dependencies\n  if (!dependencies) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!initRef.current) {\n    const initialStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater,\n      },\n      remoteState: makeRemote<AnimatedState>({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false,\n      }),\n      viewDescriptors: makeViewDescriptorsSet(),\n    };\n  }\n\n  const { initial, remoteState, viewDescriptors } = initRef.current;\n  const shareableViewDescriptors = viewDescriptors.shareableViewDescriptors;\n  const maybeViewRef = SHOULD_BE_USE_WEB ? viewsRef : undefined;\n\n  dependencies.push(shareableViewDescriptors);\n\n  useEffect(() => {\n    let fun;\n    let updaterFn = updater;\n    if (adapters) {\n      updaterFn = (() => {\n        'worklet';\n        const newValues = updater();\n        adaptersArray.forEach((adapter) => {\n          adapter(newValues);\n        });\n        return newValues;\n      }) as WorkletFunction<[], Style>;\n    }\n\n    if (isJest()) {\n      fun = () => {\n        'worklet';\n        jestStyleUpdater(\n          shareableViewDescriptors,\n          updater,\n          remoteState,\n          maybeViewRef,\n          animationsActive,\n          animatedStyle,\n          adaptersArray\n        );\n      };\n    } else {\n      fun = () => {\n        'worklet';\n        styleUpdater(\n          shareableViewDescriptors,\n          updaterFn,\n          remoteState,\n          maybeViewRef,\n          animationsActive,\n          isAnimatedProps\n        );\n      };\n    }\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  useEffect(() => {\n    animationsActive.value = true;\n    return () => {\n      animationsActive.value = false;\n    };\n  }, []);\n\n  checkSharedValueUsage(initial.value);\n\n  if (isJest()) {\n    return { viewDescriptors, initial, viewsRef, animatedStyle };\n  } else {\n    return { viewDescriptors, initial, viewsRef };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}