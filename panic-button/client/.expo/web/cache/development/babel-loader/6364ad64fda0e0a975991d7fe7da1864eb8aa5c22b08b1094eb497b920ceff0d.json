{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    firstname = _useState2[0],\n    setFirstname = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastname = _useState4[0],\n    setLastname = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    error = _useState10[0],\n    setError = _useState10[1];\n  var validateForm = function validateForm() {\n    setError('');\n    if (!firstname || !lastname || !email || !password) {\n      setError('All fields are required');\n      return false;\n    }\n    return true;\n  };\n  var handleSignUp = function handleSignUp() {\n    if (validateForm()) {\n      navigation.navigate('SignUp2', {\n        firstname: firstname,\n        lastname: lastname,\n        email: email,\n        password: password\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Sign Up\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Firstname\",\n      onChangeText: function onChangeText(text) {\n        return setFirstname(text);\n      },\n      value: firstname\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Lastname\",\n      onChangeText: function onChangeText(text) {\n        return setLastname(text);\n      },\n      value: lastname\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      value: email,\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password,\n      secureTextEntry: true\n    }), error ? _jsx(Text, {\n      style: styles.error,\n      children: error\n    }) : null, _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.buttonPrev,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Prev\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonNext,\n        onPress: handleSignUp,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Next\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingLeft: 10\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  error: {\n    color: 'red',\n    marginBottom: 10\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '80%',\n    marginTop: 20\n  },\n  buttonPrev: {\n    backgroundColor: '#ccc',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    marginRight: 10\n  },\n  buttonNext: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","useNavigation","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_ref","navigation","_useState","_useState2","_slicedToArray","firstname","setFirstname","_useState3","_useState4","lastname","setLastname","_useState5","_useState6","email","setEmail","_useState7","_useState8","password","setPassword","_useState9","_useState10","error","setError","validateForm","handleSignUp","navigate","style","styles","container","children","title","input","placeholder","onChangeText","text","value","keyboardType","secureTextEntry","buttonContainer","buttonPrev","onPress","goBack","buttonText","buttonNext","create","flex","justifyContent","alignItems","fontSize","fontWeight","marginBottom","width","height","borderColor","borderWidth","paddingLeft","button","backgroundColor","padding","borderRadius","marginTop","color","textAlign","flexDirection","marginRight"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/pages/signUp.js"],"sourcesContent":["// //גירסה 1\r\n\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nconst SignUpScreen = ({ navigation }) => {\r\n    // State to manage user input\r\n    const [firstname, setFirstname] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    // State for error messages\r\n    const [error, setError] = useState('');\r\n\r\n    // Function to handle form validation\r\n    const validateForm = () => {\r\n        setError('');\r\n\r\n        if (!firstname || !lastname || !email || !password) {\r\n            setError('All fields are required');\r\n            return false;\r\n        }\r\n\r\n        // Add more sophisticated validation logic if needed\r\n\r\n        return true;\r\n    };\r\n\r\n    // Function to handle sign-up action\r\n    const handleSignUp = () => {\r\n        if (validateForm()) {\r\n            //Navigate to SignUp2 when the form is valid\r\n             navigation.navigate('SignUp2', { firstname, lastname, email, password });\r\n            // // Perform sign-up logic here (e.g., make an API request)\r\n            // console.log('Signing up with:', { firstname, lastname, email, password });\r\n\r\n            // // Assume successful sign-up for the purpose of this example\r\n            // Alert.alert('Success', 'Sign-up successful!', [{ text: 'OK', onPress: () => navigation.goBack() }]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Sign Up</Text>\r\n\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Firstname\"\r\n                onChangeText={(text) => setFirstname(text)}\r\n                value={firstname}\r\n            />\r\n\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Lastname\"\r\n                onChangeText={(text) => setLastname(text)}\r\n                value={lastname}\r\n            />\r\n\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Email\"\r\n                onChangeText={(text) => setEmail(text)}\r\n                value={email}\r\n                keyboardType=\"email-address\"\r\n            />\r\n\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Password\"\r\n                onChangeText={(text) => setPassword(text)}\r\n                value={password}\r\n                secureTextEntry\r\n            />\r\n\r\n            {/* Display error message if there is one */}\r\n            {error ? <Text style={styles.error}>{error}</Text> : null}\r\n\r\n            <View style={styles.buttonContainer}>\r\n                <TouchableOpacity style={styles.buttonPrev} onPress={() => navigation.goBack()}>\r\n                <Text style={styles.buttonText}>Prev</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity style={styles.buttonNext} onPress={handleSignUp}>\r\n                <Text style={styles.buttonText}>Next</Text>\r\n                </TouchableOpacity> \r\n            </View>\r\n\r\n\r\n            {/* <TouchableOpacity style={styles.button} onPress={handleSignUp}>\r\n                <Text style={styles.buttonText}>Prev</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={styles.button} onPress={handleSignUp}>\r\n                <Text style={styles.buttonText}>Next</Text>\r\n            </TouchableOpacity> */}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        marginBottom: 10,\r\n        paddingLeft: 10,\r\n    },\r\n    button: {\r\n        backgroundColor: 'blue',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        marginTop: 10,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        marginBottom: 10,\r\n    },\r\n    \r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '80%',\r\n    marginTop: 20,\r\n  },\r\n  buttonPrev: {\r\n    backgroundColor: '#ccc', // Light gray\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  buttonNext: {\r\n    backgroundColor: 'blue',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default SignUpScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//קוד 2\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\n// import { useNavigation } from '@react-navigation/native';\r\n// import SignUp2 from '../components/signUp/SignUp2'; // Import SignUp2 component\r\n\r\n// const SignUpScreen = () => {\r\n//   const navigation = useNavigation();\r\n\r\n//   // State to manage user input\r\n//   const [firstname, setFirstname] = useState('');\r\n//   const [lastname, setLastname] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n\r\n//   // State for error messages\r\n//   const [error, setError] = useState('');\r\n\r\n//   // Function to handle form validation\r\n//   const validateForm = () => {\r\n//     setError('');\r\n\r\n//     if (!firstname || !lastname || !email || !password) {\r\n//       setError('All fields are required');\r\n//       return false;\r\n//     }\r\n\r\n//     // Add more sophisticated validation logic if needed\r\n\r\n//     return true;\r\n//   };\r\n\r\n//   // Function to handle sign-up action\r\n//   const handleSignUp = () => {\r\n//     if (validateForm()) {\r\n//       // Navigate to SignUp2 when the form is valid\r\n//       navigation.navigate(SignUp2, { firstname, lastname, email, password });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.title}>Sign Up</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Firstname\"\r\n//         onChangeText={(text) => setFirstname(text)}\r\n//         value={firstname}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Lastname\"\r\n//         onChangeText={(text) => setLastname(text)}\r\n//         value={lastname}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Email\"\r\n//         onChangeText={(text) => setEmail(text)}\r\n//         value={email}\r\n//         keyboardType=\"email-address\"\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Password\"\r\n//         onChangeText={(text) => setPassword(text)}\r\n//         value={password}\r\n//         secureTextEntry\r\n//       />\r\n\r\n//       {/* Display error message if there is one */}\r\n//       {error ? <Text style={styles.error}>{error}</Text> : null}\r\n\r\n//       <TouchableOpacity style={styles.button} onPress={handleSignUp}>\r\n//         <Text style={styles.buttonText}>Sign Up</Text>\r\n//       </TouchableOpacity>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     paddingLeft: 10,\r\n//   },\r\n//   button: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     marginTop: 10,\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginBottom: 10,\r\n//   },\r\n// });\r\n\r\n// export default SignUpScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}