{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MedicalConditionsList = function MedicalConditionsList(_ref) {\n  var route = _ref.route;\n  var onSelectCondition = route.params.onSelectCondition;\n  var medicalConditions = ['Gallstones', 'Myocarditis', 'Infertility in Men', 'Infertility in Women', 'Chronic Instability of the Ankle', 'Alzheimer\\'s Disease', 'Endometriosis', 'Insulin', 'Asthma of the Skin in Children', 'Hammer Finger'];\n  var handleSelectCondition = function handleSelectCondition(condition) {\n    onSelectCondition(condition);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"List of Medical Conditions:\"\n    }), medicalConditions.map(function (condition, index) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleSelectCondition(condition);\n        },\n        style: styles.conditionButton,\n        children: _jsx(Text, {\n          children: condition\n        })\n      }, index);\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  conditionButton: {\n    backgroundColor: '#e0e0e0',\n    borderRadius: 10,\n    padding: 10,\n    marginVertical: 5,\n    alignItems: 'center'\n  }\n});\nexport default MedicalConditionsList;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","MedicalConditionsList","_ref","route","onSelectCondition","params","medicalConditions","handleSelectCondition","condition","style","styles","container","children","map","index","onPress","conditionButton","create","flex","padding","backgroundColor","borderRadius","marginVertical","alignItems"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/MedicalConditionsList.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\nconst MedicalConditionsList = ({ route }) => {\r\n  const { onSelectCondition } = route.params;\r\n\r\n  const medicalConditions = [\r\n    'Gallstones', 'Myocarditis', 'Infertility in Men', 'Infertility in Women', 'Chronic Instability of the Ankle', \r\n    'Alzheimer\\'s Disease', 'Endometriosis', 'Insulin', 'Asthma of the Skin in Children', 'Hammer Finger', /* ... add other conditions */\r\n  ];\r\n\r\n  const handleSelectCondition = (condition) => {\r\n    onSelectCondition(condition);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>List of Medical Conditions:</Text>\r\n      {medicalConditions.map((condition, index) => (\r\n        <TouchableOpacity\r\n          key={index}\r\n          onPress={() => handleSelectCondition(condition)}\r\n          style={styles.conditionButton}\r\n        >\r\n          <Text>{condition}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  conditionButton: {\r\n    backgroundColor: '#e0e0e0',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default MedicalConditionsList;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACpC,IAAQC,iBAAiB,GAAKD,KAAK,CAACE,MAAM,CAAlCD,iBAAiB;EAEzB,IAAME,iBAAiB,GAAG,CACxB,YAAY,EAAE,aAAa,EAAE,oBAAoB,EAAE,sBAAsB,EAAE,kCAAkC,EAC7G,sBAAsB,EAAE,eAAe,EAAE,SAAS,EAAE,gCAAgC,EAAE,eAAe,CACtG;EAED,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,SAAS,EAAK;IAC3CJ,iBAAiB,CAACI,SAAS,CAAC;EAC9B,CAAC;EAED,OACER,KAAA,CAACP,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bd,IAAA,CAACJ,IAAI;MAAAkB,QAAA,EAAC;IAA2B,CAAM,CAAC,EACvCN,iBAAiB,CAACO,GAAG,CAAC,UAACL,SAAS,EAAEM,KAAK;MAAA,OACtChB,IAAA,CAACH,gBAAgB;QAEfoB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMR,qBAAqB,CAACC,SAAS,CAAC;QAAA,CAAC;QAChDC,KAAK,EAAEC,MAAM,CAACM,eAAgB;QAAAJ,QAAA,EAE9Bd,IAAA,CAACJ,IAAI;UAAAkB,QAAA,EAAEJ;QAAS,CAAO;MAAC,GAJnBM,KAKW,CAAC;IAAA,CACpB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAMJ,MAAM,GAAGd,UAAU,CAACqB,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDH,eAAe,EAAE;IACfI,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,EAAE;IAChBF,OAAO,EAAE,EAAE;IACXG,cAAc,EAAE,CAAC;IACjBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAetB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}