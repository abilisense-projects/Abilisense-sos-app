{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CompleteResetPassword = function CompleteResetPassword(_ref) {\n  var onStepChange = _ref.onStepChange;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    pwd = _React$useState2[0],\n    onChangePwd = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    verifyPwd = _React$useState4[0],\n    onChangeVerifyPwd = _React$useState4[1];\n  var resetPassword = function () {\n    var _ref2 = _asyncToGenerator(function* (password) {\n      try {\n        return yield axios.post(`http://localhost:3000/api/reset-password/email-verification`, {\n          email: email,\n          verificationCode: verificationCode\n        }).then(function (response) {\n          return response.data;\n        }).catch(function (error) {\n          console.error('Error:', error);\n        });\n      } catch (error) {\n        console.error('Error verifing code:', error);\n      }\n    });\n    return function resetPassword(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"enter an email address:\"\n    }), _jsx(TextInput, {\n      onChangeText: onChangePwd,\n      value: pwd\n    }), _jsx(TextInput, {\n      onChangeText: onChangeVerifyPwd,\n      value: verifyPwd\n    }), _jsx(Button, {\n      title: \"verify password\",\n      onPress: function onPress() {\n        return console.log(pwd === verifyPwd ? \"yes\" : \"No\");\n      }\n    })]\n  });\n};\nexport default CompleteResetPassword;","map":{"version":3,"names":["React","View","Text","Button","TextInput","jsx","_jsx","jsxs","_jsxs","CompleteResetPassword","_ref","onStepChange","_React$useState","useState","_React$useState2","_slicedToArray","pwd","onChangePwd","_React$useState3","_React$useState4","verifyPwd","onChangeVerifyPwd","resetPassword","_ref2","_asyncToGenerator","password","axios","post","email","verificationCode","then","response","data","catch","error","console","_x","apply","arguments","children","onChangeText","value","title","onPress","log"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/complete_reset_password.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Button, TextInput } from 'react-native';\r\n\r\n\r\nconst CompleteResetPassword = ({ onStepChange }) => {\r\n    const [pwd, onChangePwd] = React.useState('');\r\n    const [verifyPwd, onChangeVerifyPwd] = React.useState('');\r\n\r\n    const resetPassword = async (password) => {\r\n        try {\r\n            return await axios.post(`http://localhost:3000/api/reset-password/email-verification`, { email, verificationCode })\r\n                .then(response => {\r\n                    return response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n        catch (error) {\r\n            console.error('Error verifing code:', error);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Text>enter an email address:</Text>\r\n            <TextInput\r\n                onChangeText={onChangePwd}\r\n                value={pwd}\r\n            />\r\n            <TextInput\r\n                onChangeText={onChangeVerifyPwd}\r\n                value={verifyPwd}\r\n            />\r\n            <Button title='verify password' onPress={() => console.log(pwd === verifyPwd ? \"yes\" : \"No\")}></Button>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default CompleteResetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI1B,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAAyB;EAAA,IAAnBC,YAAY,GAAAD,IAAA,CAAZC,YAAY;EACzC,IAAAC,eAAA,GAA2BZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAtCI,GAAG,GAAAF,gBAAA;IAAEG,WAAW,GAAAH,gBAAA;EACvB,IAAAI,gBAAA,GAAuClB,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAAlDE,SAAS,GAAAD,gBAAA;IAAEE,iBAAiB,GAAAF,gBAAA;EAEnC,IAAMG,aAAa;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAOC,QAAQ,EAAK;MACtC,IAAI;QACA,aAAaC,KAAK,CAACC,IAAI,CAAE,6DAA4D,EAAE;UAAEC,KAAK,EAALA,KAAK;UAAEC,gBAAgB,EAAhBA;QAAiB,CAAC,CAAC,CAC9GC,IAAI,CAAC,UAAAC,QAAQ,EAAI;UACd,OAAOA,QAAQ,CAACC,IAAI;QACxB,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAC,KAAK,EAAI;UACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAClC,CAAC,CAAC;MACV,CAAC,CACD,OAAOA,KAAK,EAAE;QACVC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IAEJ,CAAC;IAAA,gBAdKZ,aAAaA,CAAAc,EAAA;MAAA,OAAAb,KAAA,CAAAc,KAAA,OAAAC,SAAA;IAAA;EAAA,GAclB;EAED,OACI9B,KAAA,CAACP,IAAI;IAAAsC,QAAA,GACDjC,IAAA,CAACJ,IAAI;MAAAqC,QAAA,EAAC;IAAuB,CAAM,CAAC,EACpCjC,IAAA,CAACF,SAAS;MACNoC,YAAY,EAAEvB,WAAY;MAC1BwB,KAAK,EAAEzB;IAAI,CACd,CAAC,EACFV,IAAA,CAACF,SAAS;MACNoC,YAAY,EAAEnB,iBAAkB;MAChCoB,KAAK,EAAErB;IAAU,CACpB,CAAC,EACFd,IAAA,CAACH,MAAM;MAACuC,KAAK,EAAC,iBAAiB;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMR,OAAO,CAACS,GAAG,CAAC5B,GAAG,KAAKI,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC;MAAA;IAAC,CAAS,CAAC;EAAA,CACrG,CAAC;AAEf,CAAC;AAED,eAAeX,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}