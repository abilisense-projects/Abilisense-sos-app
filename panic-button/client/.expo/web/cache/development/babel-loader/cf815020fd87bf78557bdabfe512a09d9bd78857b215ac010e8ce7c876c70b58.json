{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar EmailVerification = function EmailVerification(_ref) {\n  var onStepChange = _ref.onStepChange;\n  return _jsx(View, {\n    style: styles.container,\n    children: codes.map(function (code, index) {\n      return _jsx(TextInput, {\n        style: [styles.input, code.length === 1 && styles.inputGreenBorder, index > 0 && styles.inputMarginLeft],\n        keyboardType: \"numeric\",\n        maxLength: 1,\n        onChangeText: function onChangeText(text) {\n          return handleChange(text, index);\n        },\n        onKeyPress: function onKeyPress(_ref2) {\n          var key = _ref2.nativeEvent.key;\n          return handleChange(codes[index], index, key);\n        },\n        ref: function ref(input) {\n          return refs.current[index] = input;\n        }\n      }, index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: 70,\n    height: 70,\n    borderWidth: 2,\n    textAlign: 'center',\n    fontSize: 18\n  },\n  inputGreenBorder: {\n    borderColor: 'green'\n  },\n  inputMarginLeft: {\n    marginLeft: 10\n  }\n});\nexport default EmailVerification;","map":{"version":3,"names":["React","useState","useRef","View","TextInput","StyleSheet","jsx","_jsx","EmailVerification","_ref","onStepChange","style","styles","container","children","codes","map","code","index","input","length","inputGreenBorder","inputMarginLeft","keyboardType","maxLength","onChangeText","text","handleChange","onKeyPress","_ref2","key","nativeEvent","ref","refs","current","create","flexDirection","justifyContent","width","height","borderWidth","textAlign","fontSize","borderColor","marginLeft"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/email_verification.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { View, TextInput, StyleSheet } from 'react-native';\r\n\r\nconst EmailVerification = ({onStepChange}) => {\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {codes.map((code, index) => (\r\n                <TextInput\r\n                    key={index}\r\n                    style={[styles.input,\r\n                    code.length === 1 && styles.inputGreenBorder,\r\n                    index > 0 && styles.inputMarginLeft]}\r\n                    keyboardType=\"numeric\"\r\n                    maxLength={1}\r\n                    onChangeText={(text) => handleChange(text, index)}\r\n                    onKeyPress={({ nativeEvent: { key } }) => handleChange(codes[index], index, key)}\r\n                    ref={(input) => (refs.current[index] = input)}\r\n                />\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    input: {\r\n        width: 70,\r\n        height: 70,\r\n        borderWidth: 2,\r\n        textAlign: 'center',\r\n        fontSize: 18,\r\n    },\r\n    inputGreenBorder: {\r\n        borderColor: 'green',\r\n    },\r\n    inputMarginLeft: {\r\n        marginLeft: 10, // Adjust the space between inputs\r\n    }\r\n});\r\n\r\nexport default EmailVerification;\r\n\r\n// const sendVerificationCode = async (email) => {\r\n//     try {\r\n//         return await axios.post(`http://localhost:3000/api/reset-password/initiate-reset`, { email })\r\n//             .then(response => {\r\n//                 console.log('Data:', response.data);\r\n//                 return response.data;\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error('Error:', error);\r\n//             });\r\n//     }\r\n//     catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//     }\r\n\r\n// }"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGhD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAAuB;EAAA,IAAlBC,YAAY,GAAAD,IAAA,CAAZC,YAAY;EAEpC,OACIH,IAAA,CAACJ,IAAI;IAACQ,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EACzBC,KAAK,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OACnBX,IAAA,CAACH,SAAS;QAENO,KAAK,EAAE,CAACC,MAAM,CAACO,KAAK,EACpBF,IAAI,CAACG,MAAM,KAAK,CAAC,IAAIR,MAAM,CAACS,gBAAgB,EAC5CH,KAAK,GAAG,CAAC,IAAIN,MAAM,CAACU,eAAe,CAAE;QACrCC,YAAY,EAAC,SAAS;QACtBC,SAAS,EAAE,CAAE;QACbC,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAKC,YAAY,CAACD,IAAI,EAAER,KAAK,CAAC;QAAA,CAAC;QAClDU,UAAU,EAAE,SAAAA,WAAAC,KAAA;UAAA,IAAkBC,GAAG,GAAAD,KAAA,CAAlBE,WAAW,CAAID,GAAG;UAAA,OAASH,YAAY,CAACZ,KAAK,CAACG,KAAK,CAAC,EAAEA,KAAK,EAAEY,GAAG,CAAC;QAAA,CAAC;QACjFE,GAAG,EAAE,SAAAA,IAACb,KAAK;UAAA,OAAMc,IAAI,CAACC,OAAO,CAAChB,KAAK,CAAC,GAAGC,KAAK;QAAA;MAAE,GARzCD,KASR,CAAC;IAAA,CACL;EAAC,CACA,CAAC;AAEf,CAAC;AAED,IAAMN,MAAM,GAAGP,UAAU,CAAC8B,MAAM,CAAC;EAC7BtB,SAAS,EAAE;IACPuB,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDlB,KAAK,EAAE;IACHmB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE;EACd,CAAC;EACDrB,gBAAgB,EAAE;IACdsB,WAAW,EAAE;EACjB,CAAC;EACDrB,eAAe,EAAE;IACbsB,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAepC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}