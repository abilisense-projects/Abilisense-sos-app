{"ast":null,"code":"import { useNavigation } from '@react-navigation/native';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Status = function Status() {\n  var navigation = useNavigation();\n  var handlePress = function handlePress(level) {\n    navigation.navigate('ProblemType', {\n      level: level\n    });\n  };\n  var levels = [\"Easy\", \"Medium\", \"Hard\"];\n  var levelsColors = [\"yellow\", \"orange\", \"red\"];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Choose your level:\"\n    }), levels.map(function (item, index) {\n      return _jsx(TouchableOpacity, {\n        style: [styles.button, {\n          backgroundColor: levelsColors[index]\n        }],\n        onPress: function onPress() {\n          return handlePress(item);\n        },\n        children: _jsx(Text, {\n          children: item\n        })\n      }, index);\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    width: 150,\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 10,\n    borderRadius: 15\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff'\n  }\n});\nexport default Status;","map":{"version":3,"names":["useNavigation","React","StyleSheet","TouchableOpacity","View","Text","jsx","_jsx","jsxs","_jsxs","Status","navigation","handlePress","level","navigate","levels","levelsColors","style","styles","container","children","map","item","index","button","backgroundColor","onPress","create","flex","alignItems","justifyContent","width","height","marginVertical","borderRadius","buttonText","fontSize","fontWeight","color"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/Status.js"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport React from 'react';\r\nimport { StyleSheet, TouchableOpacity, View, Text } from 'react-native';\r\n\r\nconst Status = () => {\r\n    const navigation = useNavigation();\r\n\r\n    const handlePress = (level) => {\r\n        navigation.navigate('ProblemType', { level: level });\r\n    };\r\n    const levels = [\"Easy\", \"Medium\", \"Hard\"];\r\n    const levelsColors = [\"yellow\", \"orange\", \"red\"]\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>Choose your level:</Text>\r\n            {levels.map((item, index) => (\r\n                <TouchableOpacity style={[styles.button, { backgroundColor: levelsColors[index] }]} key={index} onPress={() => handlePress(item)}>\r\n                    <Text>{item}</Text>\r\n                </TouchableOpacity>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    button: {\r\n        width: 150,\r\n        height: 150,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginVertical: 10,\r\n        borderRadius: 15,\r\n    },\r\n    buttonText: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: '#fff',\r\n    },\r\n});\r\n\r\nexport default Status;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACjB,IAAMC,UAAU,GAAGX,aAAa,CAAC,CAAC;EAElC,IAAMY,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAK;IAC3BF,UAAU,CAACG,QAAQ,CAAC,aAAa,EAAE;MAAED,KAAK,EAAEA;IAAM,CAAC,CAAC;EACxD,CAAC;EACD,IAAME,MAAM,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC;EACzC,IAAMC,YAAY,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC;EAChD,OACIP,KAAA,CAACL,IAAI;IAACa,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1Bb,IAAA,CAACF,IAAI;MAAAe,QAAA,EAAC;IAAkB,CAAM,CAAC,EAC9BL,MAAM,CAACM,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OACpBhB,IAAA,CAACJ,gBAAgB;QAACc,KAAK,EAAE,CAACC,MAAM,CAACM,MAAM,EAAE;UAAEC,eAAe,EAAET,YAAY,CAACO,KAAK;QAAE,CAAC,CAAE;QAAaG,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMd,WAAW,CAACU,IAAI,CAAC;QAAA,CAAC;QAAAF,QAAA,EAC7Hb,IAAA,CAACF,IAAI;UAAAe,QAAA,EAAEE;QAAI,CAAO;MAAC,GADkEC,KAEvE,CAAC;IAAA,CACtB,CAAC;EAAA,CACA,CAAC;AAEf,CAAC;AAED,IAAML,MAAM,GAAGhB,UAAU,CAACyB,MAAM,CAAC;EAC7BR,SAAS,EAAE;IACPS,IAAI,EAAE,CAAC;IACPH,eAAe,EAAE,MAAM;IACvBI,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDN,MAAM,EAAE;IACJO,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXH,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBG,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE;EAClB,CAAC;EACDC,UAAU,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAe5B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}