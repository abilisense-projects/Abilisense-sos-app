{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgetPassword = function ForgetPassword() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    onChangeEmail = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    massageToUser = _React$useState4[0],\n    onChangeMassageToUser = _React$useState4[1];\n  var checkIfEmailExists = function () {\n    var _ref = _asyncToGenerator(function* (email) {\n      try {\n        user = yield axios.get(`http://localhost:3000/${email}`).then(function (response) {\n          console.log('Data:', response.data);\n        }).catch(function (error) {\n          console.error('Error:', error);\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n      return user ? true : false;\n    });\n    return function checkIfEmailExists(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"enter an email address:\"\n    }), _jsx(TextInput, {\n      onChangeText: onChangeEmail,\n      value: email\n    }), _jsx(Button, {\n      title: \"send me verification code\",\n      onPress: function onPress() {\n        if (!checkIfEmailExists(email)) {\n          onChangeMassageToUser('not valied email');\n        } else {\n          onChangeMassageToUser('succeeded!');\n        }\n      }\n    }), _jsx(Text, {\n      children: massageToUser\n    })]\n  });\n};\nexport default ForgetPassword;","map":{"version":3,"names":["React","axios","View","Text","Button","TextInput","jsx","_jsx","jsxs","_jsxs","ForgetPassword","_React$useState","useState","_React$useState2","_slicedToArray","email","onChangeEmail","_React$useState3","_React$useState4","massageToUser","onChangeMassageToUser","checkIfEmailExists","_ref","_asyncToGenerator","user","get","then","response","console","log","data","catch","error","_x","apply","arguments","children","onChangeText","value","title","onPress"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/forget_password.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { View, Text, Button, TextInput } from 'react-native';\r\n\r\nconst ForgetPassword = () => {\r\n    const [email, onChangeEmail] = React.useState('');\r\n    const [massageToUser, onChangeMassageToUser] = React.useState('');\r\n\r\n    const checkIfEmailExists = async (email) => {\r\n        try {\r\n            user = await axios.get(`http://localhost:3000/${email}`)\r\n                .then(response => {\r\n                    console.log('Data:', response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n        catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n        return user? true: false\r\n\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Text>enter an email address:</Text>\r\n            <TextInput\r\n                onChangeText={onChangeEmail}\r\n                value={email}\r\n            />\r\n            <Button title='send me verification code' onPress={\r\n                () => {\r\n                    if (!checkIfEmailExists(email)){\r\n                        onChangeMassageToUser('not valied email');\r\n                    }\r\n                    else{onChangeMassageToUser('succeeded!')}}}></Button>\r\n            <Text>{massageToUser}</Text>        \r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ForgetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EACzB,IAAAC,eAAA,GAA+BX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA1CI,KAAK,GAAAF,gBAAA;IAAEG,aAAa,GAAAH,gBAAA;EAC3B,IAAAI,gBAAA,GAA+CjB,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAA1DE,aAAa,GAAAD,gBAAA;IAAEE,qBAAqB,GAAAF,gBAAA;EAE3C,IAAMG,kBAAkB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOR,KAAK,EAAK;MACxC,IAAI;QACAS,IAAI,SAASvB,KAAK,CAACwB,GAAG,CAAE,yBAAwBV,KAAM,EAAC,CAAC,CACnDW,IAAI,CAAC,UAAAC,QAAQ,EAAI;UACdC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAAC;QACvC,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAC,KAAK,EAAI;UACZJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAClC,CAAC,CAAC;MACV,CAAC,CACD,OAAOA,KAAK,EAAE;QACVJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;MACA,OAAOR,IAAI,GAAE,IAAI,GAAE,KAAK;IAE5B,CAAC;IAAA,gBAfKH,kBAAkBA,CAAAY,EAAA;MAAA,OAAAX,IAAA,CAAAY,KAAA,OAAAC,SAAA;IAAA;EAAA,GAevB;EAED,OACI1B,KAAA,CAACP,IAAI;IAAAkC,QAAA,GACD7B,IAAA,CAACJ,IAAI;MAAAiC,QAAA,EAAC;IAAuB,CAAM,CAAC,EACpC7B,IAAA,CAACF,SAAS;MACNgC,YAAY,EAAErB,aAAc;MAC5BsB,KAAK,EAAEvB;IAAM,CAChB,CAAC,EACFR,IAAA,CAACH,MAAM;MAACmC,KAAK,EAAC,2BAA2B;MAACC,OAAO,EAC7C,SAAAA,QAAA,EAAM;QACF,IAAI,CAACnB,kBAAkB,CAACN,KAAK,CAAC,EAAC;UAC3BK,qBAAqB,CAAC,kBAAkB,CAAC;QAC7C,CAAC,MACG;UAACA,qBAAqB,CAAC,YAAY,CAAC;QAAA;MAAC;IAAE,CAAS,CAAC,EAC7Db,IAAA,CAACJ,IAAI;MAAAiC,QAAA,EAAEjB;IAAa,CAAO,CAAC;EAAA,CAC1B,CAAC;AAEf,CAAC;AAED,eAAeT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}