{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MedicalConditionsList = function MedicalConditionsList(_ref) {\n  var onStepChange = _ref.onStepChange,\n    addConditionButton = _ref.addConditionButton;\n  var medicalConditions = ['Gallstones', 'Myocarditis', 'Infertility in Men', 'Infertility in Women', 'Chronic Instability of the Ankle', 'Alzheimer\\'s Disease', 'Endometriosis', 'Insulin', 'Asthma of the Skin in Children', 'Hammer Finger'];\n  var handleSelectCondition = function handleSelectCondition(condition) {\n    addConditionButton(condition);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"List of Medical Conditions:\"\n    }), medicalConditions.map(function (condition, index) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleSelectCondition(condition);\n        },\n        style: styles.conditionButton,\n        children: _jsx(Text, {\n          children: condition\n        })\n      }, index);\n    }), _jsx(View, {\n      style: styles.closeButtonContainer,\n      children: _jsx(TouchableOpacity, {\n        style: styles.closeButton,\n        onPress: function onPress() {\n          return onStepChange(3);\n        },\n        children: _jsx(Text, {\n          style: styles.closeButtonText,\n          children: \"Close\"\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({});\nexport default MedicalConditionsList;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","MedicalConditionsList","_ref","onStepChange","addConditionButton","medicalConditions","handleSelectCondition","condition","style","styles","container","children","map","index","onPress","conditionButton","closeButtonContainer","closeButton","closeButtonText","create"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/MedicalConditionsList.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\nconst MedicalConditionsList = ({ onStepChange, addConditionButton }) => {\r\n  const medicalConditions = [\r\n    'Gallstones', 'Myocarditis', 'Infertility in Men', 'Infertility in Women', 'Chronic Instability of the Ankle',\r\n    'Alzheimer\\'s Disease', 'Endometriosis', 'Insulin', 'Asthma of the Skin in Children', 'Hammer Finger',\r\n  ];\r\n\r\n  const handleSelectCondition = (condition) => {\r\n    addConditionButton(condition);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>List of Medical Conditions:</Text>\r\n      {medicalConditions.map((condition, index) => (\r\n        <TouchableOpacity\r\n          key={index}\r\n          onPress={() => handleSelectCondition(condition)}\r\n          style={styles.conditionButton}\r\n        >\r\n          <Text>{condition}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n      <View style={styles.closeButtonContainer}>\r\n        <TouchableOpacity style={styles.closeButton} onPress={() => onStepChange(3)}>\r\n          <Text style={styles.closeButtonText}>Close</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  // ... (existing styles)\r\n});\r\n\r\nexport default MedicalConditionsList;\r\n\r\n\r\n// import React from 'react';\r\n// import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\n// const MedicalConditionsList = ({ onStepChange }) => {\r\n//   const medicalConditions = [\r\n//     'Gallstones', 'Myocarditis', 'Infertility in Men', 'Infertility in Women', 'Chronic Instability of the Ankle',\r\n//     'Alzheimer\\'s Disease', 'Endometriosis', 'Insulin', 'Asthma of the Skin in Children', 'Hammer Finger',\r\n//   ];\r\n\r\n//   const handleSelectCondition = (condition) => {\r\n//     addConditionButton(condition);\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text>List of Medical Conditions:</Text>\r\n//       {medicalConditions.map((condition, index) => (\r\n//         <TouchableOpacity\r\n//           key={index}\r\n//           onPress={() => handleSelectCondition(condition)}\r\n//           style={styles.conditionButton}\r\n//         >\r\n//           <Text>{condition}</Text>\r\n//         </TouchableOpacity>\r\n//       ))}\r\n//       <View style={styles.closeButtonContainer}>\r\n//         <TouchableOpacity style={styles.closeButton} onPress={() => onStepChange(3)}>\r\n//           <Text style={styles.closeButtonText}>Close</Text>\r\n//         </TouchableOpacity>\r\n//       </View>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     padding: 20,\r\n//   },\r\n//   conditionButton: {\r\n//     backgroundColor: '#e0e0e0',\r\n//     borderRadius: 10,\r\n//     padding: 10,\r\n//     marginVertical: 5,\r\n//     alignItems: 'center',\r\n//   },\r\n//   closeButtonContainer: {\r\n//     position: 'absolute',\r\n//     bottom: 20,\r\n//     width: '100%',\r\n//     alignItems: 'center',\r\n//   },\r\n//   closeButton: {\r\n//     backgroundColor: 'red',\r\n//     padding: 15,\r\n//     borderRadius: 10,\r\n//   },\r\n//   closeButtonText: {\r\n//     color: 'white',\r\n//     fontSize: 16,\r\n//     fontWeight: 'bold',\r\n//   },\r\n// });\r\n\r\n// export default MedicalConditionsList;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAA6C;EAAA,IAAvCC,YAAY,GAAAD,IAAA,CAAZC,YAAY;IAAEC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;EAC/D,IAAMC,iBAAiB,GAAG,CACxB,YAAY,EAAE,aAAa,EAAE,oBAAoB,EAAE,sBAAsB,EAAE,kCAAkC,EAC7G,sBAAsB,EAAE,eAAe,EAAE,SAAS,EAAE,gCAAgC,EAAE,eAAe,CACtG;EAED,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,SAAS,EAAK;IAC3CH,kBAAkB,CAACG,SAAS,CAAC;EAC/B,CAAC;EAED,OACEP,KAAA,CAACP,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bb,IAAA,CAACJ,IAAI;MAAAiB,QAAA,EAAC;IAA2B,CAAM,CAAC,EACvCN,iBAAiB,CAACO,GAAG,CAAC,UAACL,SAAS,EAAEM,KAAK;MAAA,OACtCf,IAAA,CAACH,gBAAgB;QAEfmB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMR,qBAAqB,CAACC,SAAS,CAAC;QAAA,CAAC;QAChDC,KAAK,EAAEC,MAAM,CAACM,eAAgB;QAAAJ,QAAA,EAE9Bb,IAAA,CAACJ,IAAI;UAAAiB,QAAA,EAAEJ;QAAS,CAAO;MAAC,GAJnBM,KAKW,CAAC;IAAA,CACpB,CAAC,EACFf,IAAA,CAACL,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACO,oBAAqB;MAAAL,QAAA,EACvCb,IAAA,CAACH,gBAAgB;QAACa,KAAK,EAAEC,MAAM,CAACQ,WAAY;QAACH,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMX,YAAY,CAAC,CAAC,CAAC;QAAA,CAAC;QAAAQ,QAAA,EAC1Eb,IAAA,CAACJ,IAAI;UAACc,KAAK,EAAEC,MAAM,CAACS,eAAgB;UAAAP,QAAA,EAAC;QAAK,CAAM;MAAC,CACjC;IAAC,CACf,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGb,UAAU,CAACuB,MAAM,CAAC,CAEjC,CAAC,CAAC;AAEF,eAAelB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}