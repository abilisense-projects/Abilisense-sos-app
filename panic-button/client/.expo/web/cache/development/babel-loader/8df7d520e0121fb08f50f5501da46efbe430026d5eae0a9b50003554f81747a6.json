{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar VerificationCodeInput = function VerificationCodeInput() {\n  var _useState = useState(['', '', '', '', '', '']),\n    _useState2 = _slicedToArray(_useState, 2),\n    codes = _useState2[0],\n    setCodes = _useState2[1];\n  var refs = useRef([]);\n  var handleChange = function handleChange(text, index) {\n    var newCodes = _toConsumableArray(codes);\n    newCodes[index] = text;\n    setCodes(newCodes);\n    if (text.length === 1 && index < codes.length - 1) {\n      refs.current[index + 1].focus();\n    }\n    if (text.length === 0 || text === '' && index > 0) {\n      refs.current[index - 1].focus();\n      index--;\n    }\n    console.log(codes, index);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: codes.map(function (code, index) {\n      return _jsx(TextInput, {\n        style: [styles.input, code.length === 1 && styles.inputGreenBorder],\n        keyboardType: \"numeric\",\n        maxLength: 1,\n        onChangeText: function onChangeText(text) {\n          return handleChange(text, index);\n        },\n        ref: function ref(input) {\n          return refs.current[index] = input;\n        }\n      }, index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: 70,\n    height: 70,\n    borderBottomWidth: 2,\n    textAlign: 'center',\n    fontSize: 18\n  },\n  inputGreenBorder: {\n    borderBottomColor: 'green'\n  }\n});\nexport default VerificationCodeInput;","map":{"version":3,"names":["React","useState","useRef","View","TextInput","StyleSheet","jsx","_jsx","VerificationCodeInput","_useState","_useState2","_slicedToArray","codes","setCodes","refs","handleChange","text","index","newCodes","_toConsumableArray","length","current","focus","console","log","style","styles","container","children","map","code","input","inputGreenBorder","keyboardType","maxLength","onChangeText","ref","create","flexDirection","justifyContent","width","height","borderBottomWidth","textAlign","fontSize","borderBottomColor"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/email_verification.js"],"sourcesContent":["// import React from 'react';\r\n// import { View, Text, Button, TextInput } from 'react-native';\r\n\r\n\r\n// const EmailVerification = () => {\r\n//     const [code, onChangeCode] = React.useState('');\r\n\r\n//     return (\r\n//         <View>\r\n//             <Text>Check your email inbox - a verification code has been sent now</Text>\r\n//             <TextInput\r\n//                 onChangeText={onChangeCode}\r\n//                 value={code}\r\n//             />\r\n//             <Button title='verify password' onPress={() => console.log(pwd === verifyPwd ? \"yes\" : \"No\")}></Button>\r\n//         </View>\r\n//     )\r\n// }\r\n\r\n// export default EmailVerification;\r\n\r\n\r\n\r\nimport React, { useState, useRef } from 'react';\r\nimport { View, TextInput, StyleSheet } from 'react-native';\r\n\r\nconst VerificationCodeInput = () => {\r\n  const [codes, setCodes] = useState(['', '', '', '', '', '']);\r\n  const refs = useRef([]);\r\n\r\n  const handleChange = (text, index) => {\r\n    const newCodes = [...codes];\r\n    newCodes[index] = text;\r\n\r\n    setCodes(newCodes);\r\n\r\n    // Move to the next input\r\n    if (text.length === 1 && index < codes.length - 1) {\r\n      refs.current[index + 1].focus();\r\n    }\r\n\r\n     // Move to the previous input if the current input is cleared\r\n     if (text.length === 0 || text === '' && index > 0) {\r\n        refs.current[index - 1].focus();\r\n        index--\r\n      }\r\n      console.log(codes, index);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {codes.map((code, index) => (\r\n        <TextInput\r\n          key={index}\r\n          style={[styles.input, code.length === 1 && styles.inputGreenBorder]}\r\n          keyboardType=\"numeric\"\r\n          maxLength={1}\r\n          onChangeText={(text) => handleChange(text, index)}\r\n          ref={(input) => (refs.current[index] = input)}\r\n        />\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  input: {\r\n    width: 70,\r\n    height: 70,\r\n    borderBottomWidth: 2,\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n  },\r\n  inputGreenBorder: {\r\n    borderBottomColor: 'green',\r\n  },\r\n});\r\n\r\nexport default VerificationCodeInput;"],"mappings":";;AAuBA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGhD,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;EAClC,IAAAC,SAAA,GAA0BR,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArDG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAMI,IAAI,GAAGZ,MAAM,CAAC,EAAE,CAAC;EAEvB,IAAMa,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAI,EAAEC,KAAK,EAAK;IACpC,IAAMC,QAAQ,GAAAC,kBAAA,CAAOP,KAAK,CAAC;IAC3BM,QAAQ,CAACD,KAAK,CAAC,GAAGD,IAAI;IAEtBH,QAAQ,CAACK,QAAQ,CAAC;IAGlB,IAAIF,IAAI,CAACI,MAAM,KAAK,CAAC,IAAIH,KAAK,GAAGL,KAAK,CAACQ,MAAM,GAAG,CAAC,EAAE;MACjDN,IAAI,CAACO,OAAO,CAACJ,KAAK,GAAG,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC;IACjC;IAGC,IAAIN,IAAI,CAACI,MAAM,KAAK,CAAC,IAAIJ,IAAI,KAAK,EAAE,IAAIC,KAAK,GAAG,CAAC,EAAE;MAChDH,IAAI,CAACO,OAAO,CAACJ,KAAK,GAAG,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC;MAC/BL,KAAK,EAAE;IACT;IACAM,OAAO,CAACC,GAAG,CAACZ,KAAK,EAAEK,KAAK,CAAC;EAC7B,CAAC;EAED,OACEV,IAAA,CAACJ,IAAI;IAACsB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC3BhB,KAAK,CAACiB,GAAG,CAAC,UAACC,IAAI,EAAEb,KAAK;MAAA,OACrBV,IAAA,CAACH,SAAS;QAERqB,KAAK,EAAE,CAACC,MAAM,CAACK,KAAK,EAAED,IAAI,CAACV,MAAM,KAAK,CAAC,IAAIM,MAAM,CAACM,gBAAgB,CAAE;QACpEC,YAAY,EAAC,SAAS;QACtBC,SAAS,EAAE,CAAE;QACbC,YAAY,EAAE,SAAAA,aAACnB,IAAI;UAAA,OAAKD,YAAY,CAACC,IAAI,EAAEC,KAAK,CAAC;QAAA,CAAC;QAClDmB,GAAG,EAAE,SAAAA,IAACL,KAAK;UAAA,OAAMjB,IAAI,CAACO,OAAO,CAACJ,KAAK,CAAC,GAAGc,KAAK;QAAA;MAAE,GALzCd,KAMN,CAAC;IAAA,CACH;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAMS,MAAM,GAAGrB,UAAU,CAACgC,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDR,KAAK,EAAE;IACLS,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,iBAAiB,EAAE,CAAC;IACpBC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE;EACZ,CAAC;EACDZ,gBAAgB,EAAE;IAChBa,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAerC,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}