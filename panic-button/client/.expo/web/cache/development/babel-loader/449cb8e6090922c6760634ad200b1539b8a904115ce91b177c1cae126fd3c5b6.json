{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { withStyleAnimation } from \"../animation/styleAnimation\";\nimport { makeUIMutable } from \"../mutables\";\nimport { LayoutAnimationType } from \"./animationBuilder\";\nimport { runOnUIImmediately } from \"../threads\";\nvar TAG_OFFSET = 1e9;\nfunction startObservingProgress(tag, sharedValue, animationType) {\n  'worklet';\n\n  var isSharedTransition = animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, function () {\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\nfunction stopObservingProgress(tag, sharedValue) {\n  'worklet';\n\n  var removeView = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  _notifyAboutEnd(tag, removeView);\n}\nfunction createLayoutAnimationManager() {\n  'worklet';\n\n  var enteringAnimationForTag = new Map();\n  var mutableValuesForTag = new Map();\n  return {\n    start: function start(tag, type, yogaValues, config) {\n      if (type === LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {\n        global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);\n        return;\n      }\n      var style = config(yogaValues);\n      var currentAnimation = style.animations;\n      if (type === LayoutAnimationType.ENTERING) {\n        enteringAnimationForTag.set(tag, currentAnimation);\n      } else if (type === LayoutAnimationType.LAYOUT) {\n        var enteringAnimation = enteringAnimationForTag.get(tag);\n        if (enteringAnimation) {\n          currentAnimation = _objectSpread(_objectSpread({}, enteringAnimation), style.animations);\n        }\n      }\n      var value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeUIMutable(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value);\n        value._value = style.initialValues;\n      }\n      var animation = withStyleAnimation(currentAnimation);\n      animation.callback = function (finished) {\n        if (finished) {\n          enteringAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          var shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, shouldRemoveView);\n        }\n        style.callback && style.callback(finished === undefined ? false : finished);\n      };\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop: function stop(tag) {\n      var value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value);\n    }\n  };\n}\nrunOnUIImmediately(function () {\n  'worklet';\n\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();","map":{"version":3,"names":["_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","withStyleAnimation","makeUIMutable","LayoutAnimationType","runOnUIImmediately","TAG_OFFSET","startObservingProgress","tag","sharedValue","animationType","isSharedTransition","SHARED_ELEMENT_TRANSITION","addListener","_notifyAboutProgress","value","stopObservingProgress","removeView","undefined","removeListener","_notifyAboutEnd","createLayoutAnimationManager","enteringAnimationForTag","Map","mutableValuesForTag","start","type","yogaValues","config","SHARED_ELEMENT_TRANSITION_PROGRESS","global","ProgressTransitionRegister","onTransitionStart","style","currentAnimation","animations","ENTERING","set","LAYOUT","enteringAnimation","get","initialValues","_value","animation","callback","finished","delete","shouldRemoveView","EXITING","stop","LayoutAnimationsManager"],"sources":["C:\\Users\\inbal\\Documents\\abilisense-project\\project1\\panic-button\\client\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\layoutReanimation\\animationsManager.ts"],"sourcesContent":["'use strict';\nimport { withStyleAnimation } from '../animation/styleAnimation';\nimport type { SharedValue } from '../commonTypes';\nimport { makeUIMutable } from '../mutables';\nimport { LayoutAnimationType } from './animationBuilder';\nimport { runOnUIImmediately } from '../threads';\nimport type {\n  SharedTransitionAnimationsValues,\n  LayoutAnimation,\n} from './animationBuilder/commonTypes';\n\nconst TAG_OFFSET = 1e9;\n\nfunction startObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<Record<string, unknown>>,\n  animationType: LayoutAnimationType\n): void {\n  'worklet';\n  const isSharedTransition =\n    animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, () => {\n    _notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\n\nfunction stopObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  removeView = false\n): void {\n  'worklet';\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  _notifyAboutEnd(tag, removeView);\n}\n\nfunction createLayoutAnimationManager() {\n  'worklet';\n  const enteringAnimationForTag = new Map();\n  const mutableValuesForTag = new Map();\n\n  return {\n    start(\n      tag: number,\n      type: LayoutAnimationType,\n      /**\n       * createLayoutAnimationManager creates an animation manager for both Layout animations and Shared Transition Elements animations.\n       */\n      yogaValues: Partial<SharedTransitionAnimationsValues>,\n      config: (\n        arg: Partial<SharedTransitionAnimationsValues>\n      ) => LayoutAnimation\n    ) {\n      if (type === LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {\n        global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);\n        return;\n      }\n\n      const style = config(yogaValues);\n      let currentAnimation = style.animations;\n\n      if (type === LayoutAnimationType.ENTERING) {\n        enteringAnimationForTag.set(tag, currentAnimation);\n      } else if (type === LayoutAnimationType.LAYOUT) {\n        // When layout animation is requested, but entering is still running, we merge\n        // new layout animation targets into the ongoing animation\n        const enteringAnimation = enteringAnimationForTag.get(tag);\n        if (enteringAnimation) {\n          currentAnimation = { ...enteringAnimation, ...style.animations };\n        }\n      }\n\n      let value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeUIMutable(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value);\n        value._value = style.initialValues;\n      }\n\n      // @ts-ignore The line below started failing because I added types to the method â€“ don't have time to fix it right now\n      const animation = withStyleAnimation(currentAnimation);\n\n      animation.callback = (finished?: boolean) => {\n        if (finished) {\n          enteringAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, shouldRemoveView);\n        }\n        style.callback &&\n          style.callback(finished === undefined ? false : finished);\n      };\n\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop(tag: number) {\n      const value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value);\n    },\n  };\n}\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();\n\nexport type LayoutAnimationsManager = ReturnType<\n  typeof createLayoutAnimationManager\n>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}