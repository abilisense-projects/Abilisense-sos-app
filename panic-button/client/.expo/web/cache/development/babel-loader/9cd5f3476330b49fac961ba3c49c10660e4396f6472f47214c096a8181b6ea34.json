{"ast":null,"code":"import * as React from 'react';\nexport default function useDocumentTitle(ref) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$enabled = _ref.enabled,\n    enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n    _ref$formatter = _ref.formatter,\n    formatter = _ref$formatter === void 0 ? function (options, route) {\n      var _options$title;\n      return (_options$title = options === null || options === void 0 ? void 0 : options.title) !== null && _options$title !== void 0 ? _options$title : route === null || route === void 0 ? void 0 : route.name;\n    } : _ref$formatter;\n  React.useEffect(function () {\n    if (!enabled) {\n      return;\n    }\n    var navigation = ref.current;\n    if (navigation) {\n      var title = formatter(navigation.getCurrentOptions(), navigation.getCurrentRoute());\n      document.title = title;\n    }\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('options', function (e) {\n      var title = formatter(e.data.options, navigation === null || navigation === void 0 ? void 0 : navigation.getCurrentRoute());\n      document.title = title;\n    });\n  });\n}","map":{"version":3,"names":["React","useDocumentTitle","ref","_ref","arguments","length","undefined","_ref$enabled","enabled","_ref$formatter","formatter","options","route","_options$title","title","name","useEffect","navigation","current","getCurrentOptions","getCurrentRoute","document","addListener","e","data"],"sources":["C:\\Users\\inbal\\Documents\\abilisense-project\\project1\\panic-button\\client\\node_modules\\@react-navigation\\native\\lib\\module\\useDocumentTitle.tsx"],"sourcesContent":["import type {\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport type { DocumentTitleOptions } from './types';\n\n/**\n * Set the document title for the active screen\n */\nexport default function useDocumentTitle(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    enabled = true,\n    formatter = (options, route) => options?.title ?? route?.name,\n  }: DocumentTitleOptions = {}\n) {\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const navigation = ref.current;\n\n    if (navigation) {\n      const title = formatter(\n        navigation.getCurrentOptions(),\n        navigation.getCurrentRoute()\n      );\n\n      document.title = title;\n    }\n\n    return navigation?.addListener('options', (e) => {\n      const title = formatter(e.data.options, navigation?.getCurrentRoute());\n\n      document.title = title;\n    });\n  });\n}\n"],"mappings":"AAIA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAOA,eAAe,SAASC,gBAATA,CACbC,GADa,EAMb;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAD0B,EALb;IAAAG,YAAA,GAAAJ,IAAA,CAGXK,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,IADZ,GAAAA,YAAA;IAAAE,cAAA,GAAAN,IAAA,CAEEO,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,UAACE,OAAD,EAAUC,KAAV;MAAA,IAAAC,cAAA;MAAA,QAAAA,cAAA,GAAoBF,OAApB,aAAoBA,OAApB,uBAAoBA,OAAO,CAAEG,KAA7B,cAAAD,cAAA,cAAAA,cAAA,GAAsCD,KAAtC,aAAsCA,KAAtC,uBAAsCA,KAAK,CAAEG,IAA7C;IAAA,IAAAN,cAAA;EAGdT,KAAK,CAACgB,SAAN,CAAgB,YAAM;IACpB,IAAI,CAACR,OAAL,EAAc;MACZ;IACD;IAED,IAAMS,UAAU,GAAGf,GAAG,CAACgB,OAAvB;IAEA,IAAID,UAAJ,EAAgB;MACd,IAAMH,KAAK,GAAGJ,SAAS,CACrBO,UAAU,CAACE,iBAAX,EADqB,EAErBF,UAAU,CAACG,eAAX,EAFqB,CAAvB;MAKAC,QAAQ,CAACP,KAAT,GAAiBA,KAAjB;IACD;IAED,OAAOG,UAAP,aAAOA,UAAP,uBAAOA,UAAU,CAAEK,WAAZ,CAAwB,SAAxB,EAAoC,UAAAC,CAAD,EAAO;MAC/C,IAAMT,KAAK,GAAGJ,SAAS,CAACa,CAAC,CAACC,IAAF,CAAOb,OAAR,EAAiBM,UAAjB,aAAiBA,UAAjB,uBAAiBA,UAAU,CAAEG,eAAZ,EAAjB,CAAvB;MAEAC,QAAQ,CAACP,KAAT,GAAiBA,KAAjB;IACD,CAJM,CAAP;EAKD,CArBD;AAsBD"},"metadata":{},"sourceType":"module","externalDependencies":[]}