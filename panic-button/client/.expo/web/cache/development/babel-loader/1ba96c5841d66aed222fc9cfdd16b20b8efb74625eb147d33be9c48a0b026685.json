{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProblemType = function ProblemType(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var level = route.params;\n  console.log(level);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  var send = function send(problem) {\n    navigation.navigate('SendAlert', {\n      problem: problem\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        send(\"problem 1\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Problem 1\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        send(\"problem 2\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Problem 2\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        send(\"problem 3\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Problem 3\"\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"another\",\n        onChangeText: function onChangeText(newText) {\n          return setText(newText);\n        },\n        value: text\n      }), _jsx(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          send(text);\n        },\n        children: _jsx(Text, {\n          style: styles.submitButtonText,\n          children: \"OK\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    width: 200,\n    height: 50,\n    backgroundColor: 'blue',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 10,\n    borderRadius: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    width: 140,\n    marginVertical: 10,\n    borderRadius: 5,\n    paddingHorizontal: 10\n  },\n  submitButton: {\n    width: 50,\n    height: 50,\n    backgroundColor: 'blue',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    marginLeft: 10\n  },\n  submitButtonText: {\n    color: 'white',\n    fontSize: 16\n  }\n});\nexport default ProblemType;","map":{"version":3,"names":["React","useState","StyleSheet","View","TouchableOpacity","TextInput","Text","useNavigation","jsx","_jsx","jsxs","_jsxs","ProblemType","_ref","route","navigation","level","params","console","log","_useState","_useState2","_slicedToArray","text","setText","send","problem","navigate","style","styles","container","children","button","onPress","buttonText","inputContainer","input","placeholder","onChangeText","newText","value","submitButton","submitButtonText","create","flex","backgroundColor","alignItems","justifyContent","width","height","marginVertical","borderRadius","color","fontSize","flexDirection","borderColor","borderWidth","paddingHorizontal","marginLeft"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/ProblemType.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, TouchableOpacity, TextInput, Text } from 'react-native';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst ProblemType = ({ route }) => {\r\n    const navigation = useNavigation();\r\n    const level = route.params;\r\n    console.log(level);\r\n    const [text, setText] = useState('');\r\n    \r\n\r\n    const send = (problem) => {\r\n        navigation.navigate('SendAlert', {problem: problem})\r\n    };\r\n    \r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TouchableOpacity style={styles.button} onPress={()=>{send(\"problem 1\")}}>\r\n                <Text style={styles.buttonText}>Problem 1</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.button} onPress={()=>{send(\"problem 2\")}}>\r\n                <Text style={styles.buttonText}>Problem 2</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.button} onPress={()=>{send(\"problem 3\")}}>\r\n                <Text style={styles.buttonText}>Problem 3</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.inputContainer}>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"another\"\r\n                    onChangeText={newText => setText(newText)}\r\n                    value={text}\r\n                />\r\n                <TouchableOpacity style={styles.submitButton} onPress={()=>{send(text)}}>\r\n                    <Text style={styles.submitButtonText}>OK</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    button: {\r\n        width: 200,\r\n        height: 50,\r\n        backgroundColor: 'blue',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginVertical: 10,\r\n        borderRadius: 10,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n    },\r\n    inputContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        height: 50,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        width: 140,\r\n        marginVertical: 10,\r\n        borderRadius: 5,\r\n        paddingHorizontal: 10,\r\n    },\r\n    submitButton: {\r\n        width: 50,\r\n        height: 50,\r\n        backgroundColor: 'blue',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 10,\r\n        marginLeft: 10,\r\n    },\r\n    submitButtonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\nexport default ProblemType;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}