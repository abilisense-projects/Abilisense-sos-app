{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProblemType = function ProblemType(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var level = route.params;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    anotherProblem = _useState2[0],\n    setAnotherProblem = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFieldValid = _useState4[0],\n    setIsFieldValid = _useState4[1];\n  var changeText = function changeText(text) {\n    setAnotherProblem(text);\n    if (text.trim() !== '') {\n      setIsFieldValid(true);\n    } else {\n      setIsFieldValid(false);\n    }\n  };\n  var handlePress = function handlePress(problem) {\n    if (!isFieldValid) {\n      return;\n    }\n    var prob = {\n      problem: problem\n    };\n    var paramsToSend = JSON.stringify(_objectSpread(_objectSpread({}, level), prob));\n    console.log(paramsToSend);\n    navigation.navigate('SendAlert', paramsToSend);\n  };\n  var problems = [\"Event\", \"Medical condition\"];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Choose your problem: \"\n    }), problems.map(function (item, index) {\n      return _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return handlePress(item);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: item\n        })\n      }, index);\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Another problem\",\n        onChangeText: function onChangeText(newText) {\n          return changeText(newText);\n        },\n        value: anotherProblem\n      }), _jsx(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          handlePress(anotherProblem);\n        },\n        children: _jsx(Text, {\n          style: styles.submitButtonText,\n          children: \"OK\"\n        })\n      })]\n    }), !isFieldValid && anotherProblem !== '' && _jsx(Text, {\n      style: {\n        color: 'red'\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    width: 200,\n    height: 50,\n    backgroundColor: 'blue',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 10,\n    borderRadius: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    height: 50,\n    borderColor: 'blue',\n    borderWidth: 1,\n    width: 140,\n    marginVertical: 10,\n    borderRadius: 5,\n    paddingHorizontal: 10\n  },\n  submitButton: {\n    width: 50,\n    height: 50,\n    backgroundColor: 'blue',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    marginLeft: 10\n  },\n  submitButtonText: {\n    color: 'white',\n    fontSize: 16\n  }\n});\nexport default ProblemType;","map":{"version":3,"names":["React","useState","StyleSheet","View","TouchableOpacity","TextInput","Text","useNavigation","jsx","_jsx","jsxs","_jsxs","ProblemType","_ref","route","navigation","level","params","_useState","_useState2","_slicedToArray","anotherProblem","setAnotherProblem","_useState3","_useState4","isFieldValid","setIsFieldValid","changeText","text","trim","handlePress","problem","prob","paramsToSend","JSON","stringify","_objectSpread","console","log","navigate","problems","style","styles","container","children","map","item","index","button","onPress","buttonText","inputContainer","input","placeholder","onChangeText","newText","value","submitButton","submitButtonText","color","create","flex","backgroundColor","alignItems","justifyContent","width","height","marginVertical","borderRadius","fontSize","flexDirection","borderColor","borderWidth","paddingHorizontal","marginLeft"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/ProblemType.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, TouchableOpacity, TextInput, Text } from 'react-native';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst ProblemType = ({ route }) => {\r\n    const navigation = useNavigation();\r\n    const level = route.params;\r\n    const [anotherProblem, setAnotherProblem] = useState('');\r\n    const [isFieldValid, setIsFieldValid] = useState();\r\n\r\n    const changeText = (text) => {\r\n        setAnotherProblem(text);\r\n        if (text.trim() !== '') {\r\n            setIsFieldValid(true);\r\n        }\r\n        else {\r\n            setIsFieldValid(false);\r\n        }\r\n\r\n\r\n    }\r\n    const handlePress = (problem) => {\r\n        if (!isFieldValid) {\r\n            return\r\n        }\r\n        const prob = { problem: problem }\r\n        const paramsToSend = JSON.stringify({ ...level, ...prob })\r\n        console.log(paramsToSend);\r\n        navigation.navigate('SendAlert', paramsToSend)\r\n    };\r\n    const problems = [\"Event\", \"Medical condition\"];\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>Choose your problem: </Text>\r\n            {problems.map((item, index) => (\r\n                <TouchableOpacity style={styles.button} key={index} onPress={() => handlePress(item)}>\r\n                    <Text style={styles.buttonText}>{item}</Text>\r\n                </TouchableOpacity>\r\n            ))}\r\n            <View style={styles.inputContainer}>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Another problem\"\r\n                    onChangeText={newText => changeText(newText)}\r\n                    value={anotherProblem}\r\n                />\r\n                <TouchableOpacity style={styles.submitButton} onPress={() => { handlePress(anotherProblem) }}>\r\n                    <Text style={styles.submitButtonText}>OK</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            {(!isFieldValid && anotherProblem !== '') && (\r\n                <Text style={{ color: 'red' }}>{}</Text>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    button: {\r\n        width: 200,\r\n        height: 50,\r\n        backgroundColor: 'blue',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginVertical: 10,\r\n        borderRadius: 10,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n    },\r\n    inputContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        height: 50,\r\n        borderColor: 'blue',\r\n        borderWidth: 1,\r\n        width: 140,\r\n        marginVertical: 10,\r\n        borderRadius: 5,\r\n        paddingHorizontal: 10,\r\n    },\r\n    submitButton: {\r\n        width: 50,\r\n        height: 50,\r\n        backgroundColor: 'blue',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 10,\r\n        marginLeft: 10,\r\n    },\r\n    submitButtonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\nexport default ProblemType;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}