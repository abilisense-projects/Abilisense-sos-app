{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Geolocation from '@react-native-community/geolocation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SendAlert = function SendAlert(_ref) {\n  var route = _ref.route;\n  var params = route.params;\n  console.log(params);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  useEffect(function () {\n    findUserLocation();\n  }, []);\n  var findUserLocation = function findUserLocation() {\n    Geolocation.getCurrentPosition(function (position) {\n      var _position$coords = position.coords,\n        latitude = _position$coords.latitude,\n        longitude = _position$coords.longitude;\n      console.log('User Location:', latitude, longitude);\n      setLocation({\n        latitude: latitude,\n        longitude: longitude\n      });\n    }, function (error) {\n      console.log('Error:', error.message);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 10000\n    });\n  };\n  var sendAlert = function sendAlert() {\n    fetch('URL_של_השרת_המקבל_את_הנתונים', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        key1: 'value1',\n        key2: 'value2'\n      })\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.error('Error:', error);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Your location is:\"\n    }), _jsx(Text, {\n      children: location ? `Latitude: ${location.latitude}, Longitude: ${location.longitude}` : 'Fetching location...'\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default SendAlert;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Geolocation","jsx","_jsx","jsxs","_jsxs","SendAlert","_ref","route","params","console","log","_useState","_useState2","_slicedToArray","location","setLocation","findUserLocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","error","message","enableHighAccuracy","timeout","maximumAge","sendAlert","fetch","method","headers","body","JSON","stringify","key1","key2","then","response","catch","style","styles","container","children","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/SendAlert.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport Geolocation from '@react-native-community/geolocation';\r\n\r\nconst SendAlert = ({ route }) => {\r\n    const params = route.params;\r\n    console.log(params);\r\n    const [location, setLocation] = useState(null);\r\n\r\n    useEffect(() => {\r\n        findUserLocation();\r\n    }, []);\r\n\r\n    const findUserLocation = () => {\r\n        Geolocation.getCurrentPosition(\r\n            position => {\r\n                const { latitude, longitude } = position.coords;\r\n                console.log('User Location:', latitude, longitude);\r\n                setLocation({ latitude: latitude, longitude: longitude });\r\n            },\r\n            error => {\r\n                console.log('Error:', error.message);\r\n                // Handle error\r\n            },\r\n            { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }\r\n        );\r\n    };\r\n\r\n    const sendAlert = () => {\r\n        fetch('URL_של_השרת_המקבל_את_הנתונים', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json' // כאן יש לציין טיפוס הנתונים שאתה שולח, לדוגמה JSON\r\n            },\r\n            body: JSON.stringify({ // כאן יש להמיר את הנתונים לפורמט הנדרש\r\n              key1: 'value1',\r\n              key2: 'value2'\r\n              // ניתן להוסיף כמה שדות שתרצה\r\n            })\r\n          })\r\n          .then(response => {\r\n            // טיפול בתשובה מהשרת\r\n            console.log(response);\r\n          })\r\n          .catch(error => {\r\n            // טיפול בשגיאות\r\n            console.error('Error:', error);\r\n          });\r\n          \r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>\r\n                Your location is:\r\n            </Text>\r\n            <Text>\r\n                {location ? `Latitude: ${location.latitude}, Longitude: ${location.longitude}` : 'Fetching location...'}\r\n            </Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n})\r\n\r\nexport default SendAlert;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,OAAOC,WAAW,MAAM,qCAAqC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9D,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACtB,IAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;EAC3BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,IAAAG,SAAA,GAAgChB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5BhB,SAAS,CAAC,YAAM;IACZoB,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC3BhB,WAAW,CAACiB,kBAAkB,CAC1B,UAAAC,QAAQ,EAAI;MACR,IAAAC,gBAAA,GAAgCD,QAAQ,CAACE,MAAM;QAAvCC,QAAQ,GAAAF,gBAAA,CAARE,QAAQ;QAAEC,SAAS,GAAAH,gBAAA,CAATG,SAAS;MAC3Bb,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEW,QAAQ,EAAEC,SAAS,CAAC;MAClDP,WAAW,CAAC;QAAEM,QAAQ,EAAEA,QAAQ;QAAEC,SAAS,EAAEA;MAAU,CAAC,CAAC;IAC7D,CAAC,EACD,UAAAC,KAAK,EAAI;MACLd,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEa,KAAK,CAACC,OAAO,CAAC;IAExC,CAAC,EACD;MAAEC,kBAAkB,EAAE,IAAI;MAAEC,OAAO,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAM,CAClE,CAAC;EACL,CAAC;EAED,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACpBC,KAAK,CAAC,8BAA8B,EAAE;MAClCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAE,QAAQ;QACdC,IAAI,EAAE;MAER,CAAC;IACH,CAAC,CAAC,CACDC,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAEhB7B,OAAO,CAACC,GAAG,CAAC4B,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAhB,KAAK,EAAI;MAEdd,OAAO,CAACc,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EAER,CAAC;EAED,OACInB,KAAA,CAACL,IAAI;IAACyC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BzC,IAAA,CAACJ,IAAI;MAAA6C,QAAA,EAAC;IAEN,CAAM,CAAC,EACPzC,IAAA,CAACJ,IAAI;MAAA6C,QAAA,EACA7B,QAAQ,GAAI,aAAYA,QAAQ,CAACO,QAAS,gBAAeP,QAAQ,CAACQ,SAAU,EAAC,GAAG;IAAsB,CACrG,CAAC;EAAA,CACL,CAAC;AAEf,CAAC;AAED,IAAMmB,MAAM,GAAG5C,UAAU,CAAC+C,MAAM,CAAC;EAC7BF,SAAS,EAAE;IACPG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,eAAe3C,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}