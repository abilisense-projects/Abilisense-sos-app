{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SosButton = function SosButton(_ref) {\n  var navigation = _ref.navigation;\n  var animatedValues = useRef([new Animated.Value(0), new Animated.Value(0), new Animated.Value(0)]).current;\n  useEffect(function () {\n    startAnimations();\n  }, []);\n  var startAnimations = function startAnimations() {\n    animatedValues.forEach(function (value, index) {\n      Animated.loop(Animated.sequence([Animated.timing(value, {\n        toValue: 1,\n        duration: 1000 + index * 200,\n        easing: Easing.linear,\n        useNativeDriver: true\n      }), Animated.timing(value, {\n        toValue: 0,\n        duration: 0,\n        useNativeDriver: true\n      })])).start();\n    });\n  };\n  var animatedCircles = animatedValues.map(function (value, index) {\n    var interpolateValue = value.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '360deg']\n    });\n    var animatedStyle = {\n      transform: [{\n        translateX: value.interpolate({\n          inputRange: [0, 1],\n          outputRange: [80 * Math.cos(index * Math.PI / 3), 120 * Math.cos(index * Math.PI / 3)]\n        })\n      }, {\n        translateY: value.interpolate({\n          inputRange: [0, 1],\n          outputRange: [80 * Math.sin(index * Math.PI / 3), 120 * Math.sin(index * Math.PI / 3)]\n        })\n      }, {\n        scale: value.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1]\n        })\n      }],\n      opacity: value\n    };\n    return _jsx(Animated.View, {\n      style: [styles.animationCircle, animatedStyle]\n    }, index);\n  });\n  var onPress = function onPress() {\n    console.log('SosButton');\n    navigation.navigate('Status');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(TouchableOpacity, {\n      style: styles.button,\n      onPress: onPress,\n      children: [_jsx(Text, {\n        style: styles.buttonText,\n        children: \"S.O.S\"\n      }), animatedCircles]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  animationCircle: {\n    position: 'absolute',\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: '#ffffff'\n  }\n});\nexport default SosButton;","map":{"version":3,"names":["React","useEffect","useRef","StyleSheet","Button","View","TouchableOpacity","Animated","Easing","Text","jsx","_jsx","jsxs","_jsxs","SosButton","_ref","navigation","animatedValues","Value","current","startAnimations","forEach","value","index","loop","sequence","timing","toValue","duration","easing","linear","useNativeDriver","start","animatedCircles","map","interpolateValue","interpolate","inputRange","outputRange","animatedStyle","transform","translateX","Math","cos","PI","translateY","sin","scale","opacity","style","styles","animationCircle","onPress","console","log","navigate","container","children","button","buttonText","create","flex","backgroundColor","alignItems","justifyContent","width","height","borderRadius","zIndex","color","fontSize","fontWeight","position","borderWidth","borderColor"],"sources":["C:/Users/User/source/repos/abilisence project/project1/panic-button/client/components/sos_button/SosButton.js"],"sourcesContent":["// import { useNavigation } from '@react-navigation/native';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { StyleSheet, Button, View, TouchableOpacity, Animated, Easing, Text } from 'react-native';\r\n\r\nconst SosButton = ({ navigation }) => {\r\n    const animatedValues = useRef([\r\n        new Animated.Value(0),\r\n        new Animated.Value(0),\r\n        new Animated.Value(0),\r\n    ]).current;\r\n\r\n    useEffect(() => {\r\n        startAnimations();\r\n    }, []);\r\n\r\n    const startAnimations = () => {\r\n        animatedValues.forEach((value, index) => {\r\n            Animated.loop(\r\n                Animated.sequence([\r\n                    Animated.timing(value, {\r\n                        toValue: 1,\r\n                        duration: 1000 + index * 200,\r\n                        easing: Easing.linear,\r\n                        useNativeDriver: true,\r\n                    }),\r\n                    Animated.timing(value, {\r\n                        toValue: 0,\r\n                        duration: 0,\r\n                        useNativeDriver: true,\r\n                    }),\r\n                ]),\r\n            ).start();\r\n        });\r\n    };\r\n\r\n    const animatedCircles = animatedValues.map((value, index) => {\r\n        const interpolateValue = value.interpolate({\r\n            inputRange: [0, 1],\r\n            outputRange: ['0deg', '360deg'],\r\n        });\r\n\r\n        const animatedStyle = {\r\n            transform: [\r\n                {\r\n                    translateX: value.interpolate({\r\n                        inputRange: [0, 1],\r\n                        outputRange: [80 * Math.cos((index * Math.PI) / 3), 120 * Math.cos((index * Math.PI) / 3)],\r\n                    }),\r\n                },\r\n                {\r\n                    translateY: value.interpolate({\r\n                        inputRange: [0, 1],\r\n                        outputRange: [80 * Math.sin((index * Math.PI) / 3), 120 * Math.sin((index * Math.PI) / 3)],\r\n                    }),\r\n                },\r\n                {\r\n                    scale: value.interpolate({\r\n                        inputRange: [0, 1],\r\n                        outputRange: [0, 1],\r\n                    }),\r\n                },\r\n            ],\r\n            opacity: value,\r\n        };\r\n\r\n        return (\r\n            <Animated.View key={index} style={[styles.animationCircle, animatedStyle]} />\r\n        );\r\n    });\r\n\r\n    // const navigation = useNavigation();\r\n    const onPress = () => {\r\n        // startAnimation();\r\n        console.log('SosButton');\r\n        navigation.navigate('Status');\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <TouchableOpacity style={styles.button} onPress={onPress}>\r\n                <Text style={styles.buttonText}>S.O.S</Text>\r\n                {animatedCircles}\r\n            </TouchableOpacity>\r\n            {/* <Button\r\n                onPress={onPress}\r\n                title=\"S.O.S\"\r\n                color=\"#841584\"\r\n                accessibilityLabel=\"Learn more about this purple button\"\r\n            /> */}\r\n        </View>\r\n    );\r\n};\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    button: {\r\n        width: 150,\r\n        height: 150,\r\n        borderRadius: 75,\r\n        backgroundColor: 'red',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: 1,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n    },\r\n    animationCircle: {\r\n        position: 'absolute',\r\n        width: 20,\r\n        height: 20,\r\n        borderRadius: 10,\r\n        borderWidth: 2,\r\n        borderColor: '#ffffff',\r\n    },\r\n});\r\n\r\nexport default SosButton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}