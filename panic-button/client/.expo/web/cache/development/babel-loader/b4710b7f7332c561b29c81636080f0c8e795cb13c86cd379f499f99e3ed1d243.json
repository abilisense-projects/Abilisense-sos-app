{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from 'axios';\nimport { signUpValidationSchema } from \"./Validation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUp2 = function SignUp2(_ref) {\n  var onStepChange = _ref.onStepChange;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    phoneNumber = _useState2[0],\n    setPhoneNumber = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    country = _useState4[0],\n    setCountry = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    city = _useState6[0],\n    setCity = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    street = _useState8[0],\n    setStreet = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    streetNum = _useState10[0],\n    setStreetNum = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    entrance = _useState12[0],\n    setEntrance = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    houseNumber = _useState14[0],\n    setHouseNumber = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    dob = _useState16[0],\n    setDob = _useState16[1];\n  var _useState17 = useState({}),\n    _useState18 = _slicedToArray(_useState17, 2),\n    errors = _useState18[0],\n    setErrors = _useState18[1];\n  var validateForm = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield signUpValidationSchema.validate({\n          phoneNumber: phoneNumber,\n          country: country,\n          city: city,\n          street: street,\n          streetNum: streetNum,\n          entrance: entrance,\n          houseNumber: houseNumber,\n          dob: dob\n        }, {\n          abortEarly: false\n        });\n        setErrors({});\n        return true;\n      } catch (error) {\n        var validationErrors = {};\n        error.inner.forEach(function (e) {\n          validationErrors[e.path] = e.message;\n        });\n        setErrors(validationErrors);\n        return false;\n      }\n    });\n    return function validateForm() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSignUp = function () {\n    var _ref3 = _asyncToGenerator(function* (newStep) {\n      if (yield validateForm()) {\n        onStepChange(newStep);\n      }\n    });\n    return function handleSignUp(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [Object.keys(errors).map(function (key) {\n      return _jsx(Text, {\n        style: styles.error,\n        children: errors[key]\n      }, key);\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.buttonPrev,\n        onPress: function onPress() {\n          return onStepChange(1);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Prev\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonNext,\n        onPress: function onPress() {\n          return handleSignUp(3);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Next\"\n        })\n      })]\n    })]\n  });\n};\nexport default SignUp2;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","axios","signUpValidationSchema","jsx","_jsx","jsxs","_jsxs","SignUp2","_ref","onStepChange","_useState","_useState2","_slicedToArray","phoneNumber","setPhoneNumber","_useState3","_useState4","country","setCountry","_useState5","_useState6","city","setCity","_useState7","_useState8","street","setStreet","_useState9","_useState10","streetNum","setStreetNum","_useState11","_useState12","entrance","setEntrance","_useState13","_useState14","houseNumber","setHouseNumber","_useState15","_useState16","dob","setDob","_useState17","_useState18","errors","setErrors","validateForm","_ref2","_asyncToGenerator","validate","abortEarly","error","validationErrors","inner","forEach","e","path","message","apply","arguments","handleSignUp","_ref3","newStep","_x","style","styles","container","children","Object","keys","map","key","buttonContainer","buttonPrev","onPress","buttonText","buttonNext"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/SignUp2.js"],"sourcesContent":["// SignUp2.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport axios from 'axios';\r\nimport { signUpValidationSchema } from './Validation'; // Adjust the path as needed\r\n\r\nconst SignUp2 = ({ onStepChange }) => {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [street, setStreet] = useState('');\r\n  const [streetNum, setStreetNum] = useState('');\r\n  const [entrance, setEntrance] = useState('');\r\n  const [houseNumber, setHouseNumber] = useState('');\r\n  const [dob, setDob] = useState('');\r\n\r\n  // State for error messages\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateForm = async () => {\r\n    try {\r\n      await signUpValidationSchema.validate(\r\n        {\r\n          phoneNumber,\r\n          country,\r\n          city,\r\n          street,\r\n          streetNum,\r\n          entrance,\r\n          houseNumber,\r\n          dob,\r\n        },\r\n        { abortEarly: false }\r\n      );\r\n\r\n      // Clear errors if validation succeeds\r\n      setErrors({});\r\n      return true;\r\n    } catch (error) {\r\n      const validationErrors = {};\r\n      error.inner.forEach((e) => {\r\n        validationErrors[e.path] = e.message;\r\n      });\r\n      setErrors(validationErrors);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleSignUp = async (newStep) => {\r\n    if (await validateForm()) {\r\n      onStepChange(newStep); // Call the callback to move to another step\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* ... (other code) */}\r\n\r\n      {/* Display error messages if there are any */}\r\n      {Object.keys(errors).map((key) => (\r\n        <Text key={key} style={styles.error}>\r\n          {errors[key]}\r\n        </Text>\r\n      ))}\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity style={styles.buttonPrev} onPress={() => onStepChange(1)}>\r\n          <Text style={styles.buttonText}>Prev</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.buttonNext} onPress={() => handleSignUp(3)}>\r\n          <Text style={styles.buttonText}>Next</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   subtitle: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//     marginTop: 10,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     paddingLeft: 10,\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginBottom: 10,\r\n// },\r\n//   button: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     marginTop: 10,\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc', // Light gray\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n// });\r\n\r\nexport default SignUp2;\r\n\r\n\r\n\r\n//ישן טוב\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\n// import axios from 'axios';\r\n\r\n// const SignUp2 = ({onStepChange}) => {\r\n\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n//   const [country, setCountry] = useState('');\r\n//   const [city, setCity] = useState('');\r\n//   const [street, setStreet] = useState('');\r\n//   const [streetNum, setStreetNum] = useState('');\r\n//   const [entrance, setEntrance] = useState('');\r\n//   const [houseNumber, setHouseNumber] = useState('');\r\n//   const [dob, setDob] = useState('');\r\n\r\n//     // State for error messages\r\n//     const [error, setError] = useState('');\r\n\r\n\r\n//     const validateForm = () => {\r\n      \r\n//       setError('');\r\n      \r\n//       if (!phoneNumber) {\r\n//         setError('All fields are required');\r\n//         return false;\r\n//       }\r\n\r\n//       // if (!phoneNumber || !country || !city || !street || !streetNum || !entrance || !houseNumber || !dob) {\r\n//       //   setError('All fields are required');\r\n//       //   return false;\r\n//       // }\r\n    \r\n//       // Add more sophisticated validation logic if needed\r\n    \r\n//       return true;\r\n//     };\r\n\r\n\r\n//   const handleSignUp = (newStep) => {\r\n//     if (validateForm()) {\r\n//       onStepChange(newStep); // Call the callback to move to another step\r\n//     }\r\n// }\r\n  \r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Phone Number\"\r\n//         onChangeText={(text) => setPhoneNumber(text)}\r\n//         value={phoneNumber}\r\n//         keyboardType=\"phone-pad\"\r\n//       />\r\n\r\n//       <Text style={styles.subtitle}>Exact Residential Address:</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Country\"\r\n//         onChangeText={(text) => setCountry(text)}\r\n//         value={country}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"City\"\r\n//         onChangeText={(text) => setCity(text)}\r\n//         value={city}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Street\"\r\n//         onChangeText={(text) => setStreet(text)}\r\n//         value={street}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Street Number\"\r\n//         onChangeText={(text) => setStreetNum(text)}\r\n//         value={streetNum}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Entrance\"\r\n//         onChangeText={(text) => setEntrance(text)}\r\n//         value={entrance}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"House Number\"\r\n//         onChangeText={(text) => setHouseNumber(text)}\r\n//         value={houseNumber}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Date of Birth (YYYY-MM-DD)\"\r\n//         onChangeText={(text) => setDob(text)}\r\n//         value={dob}\r\n//         keyboardType=\"numeric\"\r\n//       />\r\n\r\n//       {/* Display error message if there is one */}\r\n//       {error ? <Text style={styles.error}>{error}</Text> : null}\r\n\r\n//       <View style={styles.buttonContainer}>\r\n//           <TouchableOpacity style={styles.buttonPrev} onPress={() =>onStepChange(1)}>\r\n//           <Text style={styles.buttonText}>Prev</Text>\r\n//           </TouchableOpacity>\r\n//            <TouchableOpacity style={styles.buttonNext} onPress={() =>handleSignUp(3)}>\r\n//           <Text style={styles.buttonText}>Next</Text>\r\n//           </TouchableOpacity> \r\n//       </View>\r\n\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   subtitle: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//     marginTop: 10,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     paddingLeft: 10,\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginBottom: 10,\r\n// },\r\n//   button: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     marginTop: 10,\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc', // Light gray\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n// });\r\n\r\n// export default SignUp2;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}