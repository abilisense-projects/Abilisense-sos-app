{"ast":null,"code":"'use strict';\n\nimport { useEffect, useRef } from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { useEvent } from \"./useEvent\";\nimport { useSharedValue } from \"./useSharedValue\";\nvar scrollEventNames = ['onScroll', 'onScrollBeginDrag', 'onScrollEndDrag', 'onMomentumScrollBegin', 'onMomentumScrollEnd'];\nvar _worklet_7096777976604_init_data = {\n  code: \"function anonymous(event){const{offsetRef}=this.__closure;offsetRef.current.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;}\",\n  location: \"C:\\\\Users\\\\inbal\\\\Documents\\\\abilisense-project\\\\project1\\\\panic-button\\\\client\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\hook\\\\useScrollViewOffset.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"event\\\",\\\"offsetRef\\\",\\\"__closure\\\",\\\"current\\\",\\\"value\\\",\\\"contentOffset\\\",\\\"x\\\",\\\"y\\\"],\\\"sources\\\":[\\\"C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useScrollViewOffset.js\\\"],\\\"mappings\\\":\\\"AAmByB,SAAAA,SAASA,CAAAC,KAAA,QAAAC,SAAA,OAAAC,SAAA,CAG9BD,SAAS,CAACE,OAAO,CAACC,KAAK,CAAGJ,KAAK,CAACK,aAAa,CAACC,CAAC,GAAK,CAAC,CAAGN,KAAK,CAACK,aAAa,CAACE,CAAC,CAAGP,KAAK,CAACK,aAAa,CAACC,CAAC,CACvG\\\"}\",\n  version: \"3.6.1\"\n};\nexport function useScrollViewOffset(animatedRef, initialRef) {\n  var offsetRef = useRef(initialRef !== undefined ? initialRef : useSharedValue(0));\n  var event = useEvent(function () {\n    var _e = [new global.Error(), -2, -27];\n    var anonymous = function anonymous(event) {\n      offsetRef.current.value = event.contentOffset.x === 0 ? event.contentOffset.y : event.contentOffset.x;\n    };\n    anonymous.__closure = {\n      offsetRef: offsetRef\n    };\n    anonymous.__workletHash = 7096777976604;\n    anonymous.__initData = _worklet_7096777976604_init_data;\n    anonymous.__stackDetails = _e;\n    return anonymous;\n  }(), scrollEventNames);\n  useEffect(function () {\n    var _event$current;\n    var viewTag = findNodeHandle(animatedRef.current);\n    (_event$current = event.current) === null || _event$current === void 0 ? void 0 : _event$current.registerForEvents(viewTag);\n    return function () {\n      var _event$current2;\n      (_event$current2 = event.current) === null || _event$current2 === void 0 ? void 0 : _event$current2.unregisterFromEvents();\n    };\n  }, [animatedRef.current]);\n  return offsetRef.current;\n}","map":{"version":3,"names":["useEffect","useRef","findNodeHandle","useEvent","useSharedValue","scrollEventNames","_worklet_7096777976604_init_data","code","location","sourceMap","version","useScrollViewOffset","animatedRef","initialRef","offsetRef","undefined","event","_e","global","Error","anonymous","current","value","contentOffset","x","y","__closure","__workletHash","__initData","__stackDetails","_event$current","viewTag","registerForEvents","_event$current2","unregisterFromEvents"],"sources":["C:\\Users\\inbal\\Documents\\abilisense-project\\project1\\panic-button\\client\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useScrollViewOffset.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport type { SharedValue } from '../commonTypes';\nimport { findNodeHandle } from 'react-native';\nimport type { EventHandlerInternal } from './useEvent';\nimport { useEvent } from './useEvent';\nimport { useSharedValue } from './useSharedValue';\nimport type { AnimatedScrollView } from '../component/ScrollView';\nimport type {\n  AnimatedRef,\n  RNNativeScrollEvent,\n  ReanimatedScrollEvent,\n} from './commonTypes';\n\nconst scrollEventNames = [\n  'onScroll',\n  'onScrollBeginDrag',\n  'onScrollEndDrag',\n  'onMomentumScrollBegin',\n  'onMomentumScrollEnd',\n];\n\n/**\n * Lets you synchronously get the current offset of a `ScrollView`.\n *\n * @param animatedRef - An [animated ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef) attached to an Animated.ScrollView component.\n * @returns A shared value which holds the current offset of the `ScrollView`.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useScrollViewOffset\n */\nexport function useScrollViewOffset(\n  animatedRef: AnimatedRef<AnimatedScrollView>,\n  initialRef?: SharedValue<number>\n): SharedValue<number> {\n  const offsetRef = useRef(\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    initialRef !== undefined ? initialRef : useSharedValue(0)\n  );\n\n  const event = useEvent<RNNativeScrollEvent>(\n    (event: ReanimatedScrollEvent) => {\n      'worklet';\n      offsetRef.current.value =\n        event.contentOffset.x === 0\n          ? event.contentOffset.y\n          : event.contentOffset.x;\n    },\n    scrollEventNames\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n  ) as unknown as EventHandlerInternal<ReanimatedScrollEvent>;\n\n  useEffect(() => {\n    const viewTag = findNodeHandle(animatedRef.current);\n    event.current?.registerForEvents(viewTag as number);\n\n    return () => {\n      event.current?.unregisterFromEvents();\n    };\n  }, [animatedRef.current]);\n\n  return offsetRef.current;\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAA,OAAAC,cAAA;AAIzC,SAASC,QAAQ;AACjB,SAASC,cAAc;AAQvB,IAAMC,gBAAgB,GAAG,CACvB,UAAU,EACV,mBAAmB,EACnB,iBAAiB,EACjB,uBAAuB,EACvB,qBAAqB,CACtB;AAAA,IAAAC,gCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AASD,OAAO,SAASC,mBAAmBA,CACjCC,WAA4C,EAC5CC,UAAgC,EACX;EACrB,IAAMC,SAAS,GAAGb,MAAM,CAEtBY,UAAU,KAAKE,SAAS,GAAGF,UAAU,GAAGT,cAAc,CAAC,CAAC,CAAC,CAC1D;EAED,IAAMY,KAAK,GAAGb,QAAQ,CACnB;IAAA,IAAAc,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,IAAAC,SAAA,YAAAA,UAAAJ,KAA4B,EAAK;MAEhCF,SAAS,CAACO,OAAO,CAACC,KAAK,GACrBN,KAAK,CAACO,aAAa,CAACC,CAAC,KAAK,CAAC,GACvBR,KAAK,CAACO,aAAa,CAACE,CAAC,GACrBT,KAAK,CAACO,aAAa,CAACC,CAAC;IAC7B,CAAC;IAAAJ,SAAA,CAAAM,SAAA;MAAAZ,SAAA,EAJCA;IAAS;IAAAM,SAAA,CAAAO,aAAA;IAAAP,SAAA,CAAAQ,UAAA,GAAAtB,gCAAA;IAAAc,SAAA,CAAAS,cAAA,GAAAZ,EAAA;IAAA,OAAAG,SAAA;EAAA,CAFV,IAODf,gBAEA,CACyD;EAE3DL,SAAS,CAAC,YAAM;IAAA,IAAA8B,cAAA;IACd,IAAMC,OAAO,GAAG7B,cAAc,CAACU,WAAW,CAACS,OAAO,CAAC;IACnD,CAAAS,cAAA,GAAAd,KAAK,CAACK,OAAO,cAAAS,cAAA,uBAAbA,cAAA,CAAeE,iBAAiB,CAACD,OAAO,CAAW;IAEnD,OAAO,YAAM;MAAA,IAAAE,eAAA;MACX,CAAAA,eAAA,GAAAjB,KAAK,CAACK,OAAO,cAAAY,eAAA,uBAAbA,eAAA,CAAeC,oBAAoB,EAAE;IACvC,CAAC;EACH,CAAC,EAAE,CAACtB,WAAW,CAACS,OAAO,CAAC,CAAC;EAEzB,OAAOP,SAAS,CAACO,OAAO;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}