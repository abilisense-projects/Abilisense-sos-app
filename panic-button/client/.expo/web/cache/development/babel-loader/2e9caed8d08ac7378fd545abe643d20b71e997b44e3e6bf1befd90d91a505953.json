{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport PasswordValidation from \"./components/password_validation\";\nimport EmailVerification from \"./components/forget_password/email_verification\";\nimport ResetPassword from \"./components/forget_password/reset_password\";\nimport ForgetPassword from \"./components/forget_password/forget_password\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  if (Platform.OS === 'web') {\n    return _jsx(\"div\", {\n      children: \"Web platform not supported\"\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"ForgetPassword\",\n        children: [_jsx(Stack.Screen, {\n          name: \"EmailVerification\",\n          component: EmailVerification\n        }), _jsx(Stack.Screen, {\n          name: \"ResetPassword\",\n          component: ResetPassword\n        })]\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","NavigationContainer","createStackNavigator","PasswordValidation","EmailVerification","ResetPassword","ForgetPassword","jsx","_jsx","jsxs","_jsxs","Stack","App","Platform","OS","children","style","styles","container","Navigator","initialRouteName","Screen","name","component","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport PasswordValidation from \"./components/password_validation\";\r\nimport EmailVerification from './components/forget_password/email_verification';\r\nimport ResetPassword from './components/forget_password/reset_password';\r\nimport ForgetPassword from './components/forget_password/forget_password'\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  if (Platform.OS === 'web') {\r\n    // Handle the web platform differently, e.g., render a message or an alternative UI\r\n    return <div>Web platform not supported</div>;\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator initialRouteName=\"ForgetPassword\">\r\n          <Stack.Screen name=\"EmailVerification\" component={EmailVerification} />\r\n          <Stack.Screen name=\"ResetPassword\" component={ResetPassword} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,kBAAkB;AACzB,OAAOC,iBAAiB;AACxB,OAAOC,aAAa;AACpB,OAAOC,cAAc;AAAoD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzE,IAAMC,KAAK,GAAGT,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASU,GAAGA,CAAA,EAAG;EAC5B,IAAIC,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IAEzB,OAAON,IAAA;MAAAO,QAAA,EAAK;IAA0B,CAAK,CAAC;EAC9C;EACA,OACEL,KAAA,CAACV,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAH,QAAA,GAC5BP,IAAA,CAACP,mBAAmB;MAAAc,QAAA,EAClBL,KAAA,CAACC,KAAK,CAACQ,SAAS;QAACC,gBAAgB,EAAC,gBAAgB;QAAAL,QAAA,GAChDP,IAAA,CAACG,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,mBAAmB;UAACC,SAAS,EAAEnB;QAAkB,CAAE,CAAC,EACvEI,IAAA,CAACG,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,eAAe;UAACC,SAAS,EAAElB;QAAc,CAAE,CAAC;MAAA,CAChD;IAAC,CACC,CAAC,EAEtBG,IAAA,CAACX,SAAS;MAACmB,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACtB,CAAC;AAEX;AAEA,IAAMC,MAAM,GAAGnB,UAAU,CAAC0B,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}