{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar inputWidth = width * 0.12;\nvar CodeInput = function CodeInput(_ref) {\n  var onCodeChange = _ref.onCodeChange,\n    onInputsComplete = _ref.onInputsComplete;\n  var _useState = useState(['', '', '', '', '', '']),\n    _useState2 = _slicedToArray(_useState, 2),\n    codes = _useState2[0],\n    setCodes = _useState2[1];\n  var refs = useRef([]);\n  var handleChange = function handleChange(text, index, key) {\n    var newCodes = _toConsumableArray(codes);\n    newCodes[index] = text;\n    setCodes(newCodes);\n    if (text.length === 1 && index < codes.length - 1) {\n      refs.current[index + 1].focus();\n    }\n    if (key === 'Backspace' && text.length === 0 && index > 0) {\n      refs.current[index - 1].focus();\n    }\n    onCodeChange(newCodes.join(''));\n  };\n  useEffect(function () {\n    var isComplete = codes.every(function (code) {\n      return code.length === 1;\n    });\n    if (isComplete) {\n      onInputsComplete();\n    }\n  }, [codes, onInputsComplete]);\n  return _jsx(View, {\n    style: styles.container,\n    children: codes.map(function (code, index) {\n      return _jsx(TextInput, {\n        style: [styles.input, code.length === 1 && styles.inputGreenBorder, index > 0 && styles.inputMarginLeft],\n        keyboardType: \"numeric\",\n        maxLength: 1,\n        onChangeText: function onChangeText(text) {\n          return handleChange(text, index);\n        },\n        onKeyPress: function onKeyPress(_ref2) {\n          var key = _ref2.nativeEvent.key;\n          return handleChange(codes[index], index, key);\n        },\n        ref: function ref(input) {\n          return refs.current[index] = input;\n        }\n      }, index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: inputWidth,\n    height: inputWidth,\n    borderWidth: 2,\n    textAlign: 'center',\n    fontSize: inputWidth * 0.35\n  },\n  inputGreenBorder: {\n    borderColor: 'green'\n  },\n  inputMarginLeft: {\n    marginLeft: inputWidth * 0.1\n  }\n});\nexport default CodeInput;","map":{"version":3,"names":["React","useState","useRef","useEffect","View","TextInput","StyleSheet","Dimensions","jsx","_jsx","_Dimensions$get","get","width","inputWidth","CodeInput","_ref","onCodeChange","onInputsComplete","_useState","_useState2","_slicedToArray","codes","setCodes","refs","handleChange","text","index","key","newCodes","_toConsumableArray","length","current","focus","join","isComplete","every","code","style","styles","container","children","map","input","inputGreenBorder","inputMarginLeft","keyboardType","maxLength","onChangeText","onKeyPress","_ref2","nativeEvent","ref","create","flexDirection","justifyContent","height","borderWidth","textAlign","fontSize","borderColor","marginLeft"],"sources":["C:/Users/inbal/Documents/abilisense-project/project1/panic-button/client/components/forget_password/codeInput.js"],"sourcesContent":["import React, { useState, useRef, useEffect  } from 'react';\r\nimport { View, TextInput, StyleSheet, Dimensions } from 'react-native';\r\n\r\nconst { width } = Dimensions.get('window');\r\nconst inputWidth = width * 0.12;\r\n\r\nconst CodeInput = ({onCodeChange, onInputsComplete }) => {\r\n    const [codes, setCodes] = useState(['', '', '', '', '', '']);\r\n    const refs = useRef([]);\r\n\r\n    const handleChange = (text, index, key) => {\r\n        const newCodes = [...codes];\r\n        newCodes[index] = text;\r\n\r\n        setCodes(newCodes);\r\n\r\n        // Move to the next input\r\n        if (text.length === 1 && index < codes.length - 1) {\r\n            refs.current[index + 1].focus();\r\n        }\r\n\r\n        // Move to the previous input if the current input is cleared\r\n        if (key === 'Backspace' && text.length === 0 && index > 0) {\r\n            refs.current[index - 1].focus();\r\n        }\r\n        \r\n        // Send the verification code to the parent component\r\n        onCodeChange(newCodes.join(''));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Check if all inputs are filled\r\n        const isComplete = codes.every((code) => code.length === 1);\r\n    \r\n        // Notify the parent component when inputs are complete\r\n        if (isComplete) {\r\n          onInputsComplete();\r\n        }\r\n      }, [codes, onInputsComplete]);\r\n    \r\n    return (\r\n        <View style={styles.container}>\r\n            {codes.map((code, index) => (\r\n                <TextInput\r\n                    key={index}\r\n                    style={[styles.input,\r\n                    code.length === 1 && styles.inputGreenBorder,\r\n                    index > 0 && styles.inputMarginLeft]}\r\n                    keyboardType=\"numeric\"\r\n                    maxLength={1}\r\n                    onChangeText={(text) => handleChange(text, index)}\r\n                    onKeyPress={({ nativeEvent: { key } }) => handleChange(codes[index], index, key)}\r\n                    ref={(input) => (refs.current[index] = input)}\r\n                />\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    input: {\r\n        width: inputWidth,\r\n        height: inputWidth,\r\n        borderWidth: 2,\r\n        textAlign: 'center',\r\n        fontSize: inputWidth * 0.35\r\n    },\r\n    inputGreenBorder: {\r\n        borderColor: 'green',\r\n    },\r\n    inputMarginLeft: {\r\n        marginLeft: inputWidth * 0.1\r\n    }\r\n});\r\n\r\nexport default CodeInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}