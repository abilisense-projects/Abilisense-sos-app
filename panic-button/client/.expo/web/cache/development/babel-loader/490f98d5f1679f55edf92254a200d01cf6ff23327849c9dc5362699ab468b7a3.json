{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Children, Component, createContext, useEffect, useRef } from 'react';\nimport { setShouldAnimateExitingForTag } from \"../core\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nexport var SkipEnteringContext = createContext(null);\nfunction SkipEntering(props) {\n  var skipValueRef = useRef(props.shouldSkip);\n  useEffect(function () {\n    skipValueRef.current = false;\n  }, [skipValueRef]);\n  return React.createElement(SkipEnteringContext.Provider, {\n    value: skipValueRef\n  }, props.children);\n}\nexport var LayoutAnimationConfig = function (_Component) {\n  _inherits(LayoutAnimationConfig, _Component);\n  var _super = _createSuper(LayoutAnimationConfig);\n  function LayoutAnimationConfig() {\n    _classCallCheck(this, LayoutAnimationConfig);\n    return _super.apply(this, arguments);\n  }\n  _createClass(LayoutAnimationConfig, [{\n    key: \"getMaybeWrappedChildren\",\n    value: function getMaybeWrappedChildren() {\n      return Children.count(this.props.children) > 1 && this.props.skipExiting ? Children.map(this.props.children, function (child) {\n        return React.createElement(LayoutAnimationConfig, {\n          skipExiting: true\n        }, child);\n      }) : this.props.children;\n    }\n  }, {\n    key: \"setShouldAnimateExiting\",\n    value: function setShouldAnimateExiting() {\n      if (Children.count(this.props.children) === 1) {\n        var tag = findNodeHandle(this);\n        if (tag) {\n          setShouldAnimateExitingForTag(tag, !this.props.skipExiting);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.skipExiting !== undefined) {\n        this.setShouldAnimateExiting();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.getMaybeWrappedChildren();\n      if (this.props.skipEntering === undefined) {\n        return children;\n      }\n      return React.createElement(SkipEntering, {\n        shouldSkip: this.props.skipEntering\n      }, children);\n    }\n  }]);\n  return LayoutAnimationConfig;\n}(Component);","map":{"version":3,"names":["_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","React","Children","Component","createContext","useEffect","useRef","setShouldAnimateExitingForTag","findNodeHandle","SkipEnteringContext","SkipEntering","props","skipValueRef","shouldSkip","current","createElement","Provider","value","children","LayoutAnimationConfig","_Component","_super","key","getMaybeWrappedChildren","count","skipExiting","map","child","setShouldAnimateExiting","tag","componentWillUnmount","undefined","render","skipEntering"],"sources":["C:\\Users\\user1\\Desktop\\Abilicence\\project1\\panic-button\\client\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\component\\LayoutAnimationConfig.tsx"],"sourcesContent":["'use strict';\nimport React, {\n  Children,\n  Component,\n  createContext,\n  useEffect,\n  useRef,\n} from 'react';\nimport type { ReactNode } from 'react';\nimport { setShouldAnimateExitingForTag } from '../core';\nimport { findNodeHandle } from 'react-native';\n\nexport const SkipEnteringContext =\n  createContext<React.MutableRefObject<boolean> | null>(null);\n\n// skipEntering - don't animate entering of children on wrapper mount\n// skipExiting - don't animate exiting of children on wrapper unmount\ninterface LayoutAnimationConfigProps {\n  skipEntering?: boolean;\n  skipExiting?: boolean;\n  children: ReactNode;\n}\n\nfunction SkipEntering(props: { shouldSkip: boolean; children: ReactNode }) {\n  const skipValueRef = useRef(props.shouldSkip);\n\n  useEffect(() => {\n    skipValueRef.current = false;\n  }, [skipValueRef]);\n\n  return (\n    <SkipEnteringContext.Provider value={skipValueRef}>\n      {props.children}\n    </SkipEnteringContext.Provider>\n  );\n}\n\n// skipExiting (unlike skipEntering) cannot be done by conditionally\n// configuring the animation in `createAnimatedComponent`, since at this stage\n// we don't know if the wrapper is going to be unmounted or not.\n// That's why we need to pass the skipExiting flag to the native side\n// when the wrapper is unmounted to prevent the animation.\n// Since `ReactNode` can be a list of nodes, we wrap every child with our wrapper\n// so we are able to access its tag with `findNodeHandle`.\n/**\n * A component that lets you skip entering and exiting animations.\n *\n * @param skipEntering - A boolean indicating whether children's entering animations should be skipped when `LayoutAnimationConfig` is mounted.\n * @param skipExiting - A boolean indicating whether children's exiting animations should be skipped when LayoutAnimationConfig is unmounted.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-animation-config/\n */\nexport class LayoutAnimationConfig extends Component<LayoutAnimationConfigProps> {\n  getMaybeWrappedChildren() {\n    return Children.count(this.props.children) > 1 && this.props.skipExiting\n      ? Children.map(this.props.children, (child) => (\n          <LayoutAnimationConfig skipExiting>{child}</LayoutAnimationConfig>\n        ))\n      : this.props.children;\n  }\n\n  setShouldAnimateExiting() {\n    if (Children.count(this.props.children) === 1) {\n      const tag = findNodeHandle(this);\n      if (tag) {\n        setShouldAnimateExitingForTag(tag, !this.props.skipExiting);\n      }\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.props.skipExiting !== undefined) {\n      this.setShouldAnimateExiting();\n    }\n  }\n\n  render(): ReactNode {\n    const children = this.getMaybeWrappedChildren();\n\n    if (this.props.skipEntering === undefined) {\n      return children;\n    }\n\n    return (\n      <SkipEntering shouldSkip={this.props.skipEntering}>\n        {children}\n      </SkipEntering>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}