{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var onStepChange = _ref.onStepChange;\n  var _useState = useState({\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var inputFields = [{\n    key: 'firstname',\n    placeholder: 'Firstname'\n  }, {\n    key: 'lastname',\n    placeholder: 'Lastname'\n  }, {\n    key: 'email',\n    placeholder: 'Email',\n    keyboardType: 'email-address'\n  }, {\n    key: 'password',\n    placeholder: 'Password',\n    secureTextEntry: true\n  }];\n  var validateForm = function validateForm() {\n    setError('');\n    for (var field of inputFields) {\n      if (!formData[field.key]) {\n        setError('All fields are required');\n        return false;\n      }\n    }\n    return true;\n  };\n  var handleSignUp = function handleSignUp(newStep) {\n    if (validateForm()) {\n      onStepChange(newStep);\n    }\n  };\n  var handleInputChange = function handleInputChange(key, text) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, key, text)));\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Sign Up\"\n    }), inputFields.map(function (field) {\n      return _jsx(TextInput, {\n        style: styles.input,\n        placeholder: field.placeholder,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange(field.key, text);\n        },\n        value: formData[field.key],\n        keyboardType: field.keyboardType,\n        secureTextEntry: field.secureTextEntry\n      }, field.key);\n    }), error ? _jsx(Text, {\n      style: styles.error,\n      children: error\n    }) : null, _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.buttonPrev,\n        onPress: function onPress() {\n          return onStepChange(1);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Prev\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonNext,\n        onPress: function onPress() {\n          return handleSignUp(2);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Next\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingLeft: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  error: {\n    color: 'red',\n    marginBottom: 10\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '80%',\n    marginTop: 20\n  },\n  buttonPrev: {\n    backgroundColor: '#ccc',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    marginRight: 10\n  },\n  buttonNext: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_ref","onStepChange","_useState","firstname","lastname","email","password","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","error","setError","inputFields","key","placeholder","keyboardType","secureTextEntry","validateForm","field","handleSignUp","newStep","handleInputChange","text","_objectSpread","_defineProperty","style","styles","container","children","title","map","input","onChangeText","value","buttonContainer","buttonPrev","onPress","buttonText","buttonNext","create","flex","justifyContent","alignItems","fontSize","fontWeight","marginBottom","width","height","borderColor","borderWidth","paddingLeft","color","textAlign","flexDirection","marginTop","backgroundColor","padding","borderRadius","marginRight"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/signUp1.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\n\r\nconst SignUpScreen = ({ onStepChange }) => {\r\n    // State to manage user input\r\n    const [formData, setFormData] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    // State for error messages\r\n    const [error, setError] = useState('');\r\n\r\n    // Define the input fields\r\n    const inputFields = [\r\n        { key: 'firstname', placeholder: 'Firstname' },\r\n        { key: 'lastname', placeholder: 'Lastname' },\r\n        { key: 'email', placeholder: 'Email', keyboardType: 'email-address' },\r\n        { key: 'password', placeholder: 'Password', secureTextEntry: true },\r\n    ];\r\n\r\n    // Function to handle form validation\r\n    const validateForm = () => {\r\n        setError('');\r\n\r\n        for (const field of inputFields) {\r\n            if (!formData[field.key]) {\r\n                setError('All fields are required');\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Add more sophisticated validation logic if needed\r\n\r\n        return true;\r\n    };\r\n\r\n    // Function to handle sign-up action\r\n    const handleSignUp = (newStep) => {\r\n        if (validateForm()) {\r\n            onStepChange(newStep); // Call the callback to move to another step\r\n        }\r\n    };\r\n\r\n    // Function to update form data\r\n    const handleInputChange = (key, text) => {\r\n        setFormData({ ...formData, [key]: text });\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Sign Up</Text>\r\n\r\n            {inputFields.map((field) => (\r\n                <TextInput\r\n                    key={field.key}\r\n                    style={styles.input}\r\n                    placeholder={field.placeholder}\r\n                    onChangeText={(text) => handleInputChange(field.key, text)}\r\n                    value={formData[field.key]}\r\n                    keyboardType={field.keyboardType}\r\n                    secureTextEntry={field.secureTextEntry}\r\n                />\r\n            ))}\r\n\r\n            {/* Display error message if there is one */}\r\n            {error ? <Text style={styles.error}>{error}</Text> : null}\r\n\r\n            <View style={styles.buttonContainer}>\r\n                <TouchableOpacity style={styles.buttonPrev} onPress={() => onStepChange(1)}>\r\n                    <Text style={styles.buttonText}>Prev</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity style={styles.buttonNext} onPress={() => handleSignUp(2)}>\r\n                    <Text style={styles.buttonText}>Next</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        marginBottom: 10,\r\n        paddingLeft: 10,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        marginBottom: 10,\r\n    },\r\n    \r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '80%',\r\n    marginTop: 20,\r\n  },\r\n  buttonPrev: {\r\n    backgroundColor: '#ccc', // Light gray\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  buttonNext: {\r\n    backgroundColor: 'blue',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default SignUpScreen;\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\n\r\n// const SignUpScreen =  ({ onStepChange }) => {\r\n\r\n//     // State to manage user input\r\n//     const [firstname, setFirstname] = useState('');\r\n//     const [lastname, setLastname] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n\r\n//     // State for error messages\r\n//     const [error, setError] = useState('');\r\n\r\n//     // Function to handle form validation\r\n//     const validateForm = () => {\r\n//         setError('');\r\n\r\n//         if (!firstname) {\r\n//             setError('All fields are required');\r\n//             return false;\r\n//         }\r\n\r\n//         // if (!firstname || !lastname || !email || !password) {\r\n//         //     setError('All fields are required');\r\n//         //     return false;\r\n//         // }\r\n\r\n//         // Add more sophisticated validation logic if needed\r\n\r\n//         return true;\r\n//     };\r\n\r\n//     // Function to handle sign-up action\r\n//     // const handleSignUp = () => {\r\n//     //     if (validateForm()) {\r\n//     //         //Navigate to SignUp2 when the form is valid\r\n//     //          navigation.navigate('SignUp2', { firstname, lastname, email, password });\r\n//     //         // // Perform sign-up logic here (e.g., make an API request)\r\n//     //     ;\r\n//     //     }\r\n//     // };\r\n\r\n//     const handleSignUp = (newStep) => {\r\n//         if (validateForm()) {\r\n//             onStepChange(newStep); // Call the callback to move to another step\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <View style={styles.container}>\r\n//             <Text style={styles.title}>Sign Up</Text>\r\n\r\n//             <TextInput\r\n//                 style={styles.input}\r\n//                 placeholder=\"Firstname\"\r\n//                 onChangeText={(text) => setFirstname(text)}\r\n//                 value={firstname}\r\n//             />\r\n\r\n//             <TextInput\r\n//                 style={styles.input}\r\n//                 placeholder=\"Lastname\"\r\n//                 onChangeText={(text) => setLastname(text)}\r\n//                 value={lastname}\r\n//             />\r\n\r\n//             <TextInput\r\n//                 style={styles.input}\r\n//                 placeholder=\"Email\"\r\n//                 onChangeText={(text) => setEmail(text)}\r\n//                 value={email}\r\n//                 keyboardType=\"email-address\"\r\n//             />\r\n\r\n//             <TextInput\r\n//                 style={styles.input}\r\n//                 placeholder=\"Password\"\r\n//                 onChangeText={(text) => setPassword(text)}\r\n//                 value={password}\r\n//                 secureTextEntry\r\n//             />\r\n\r\n//             {/* Display error message if there is one */}\r\n//             {error ? <Text style={styles.error}>{error}</Text> : null}\r\n\r\n//             <View style={styles.buttonContainer}>\r\n//                 <TouchableOpacity style={styles.buttonPrev} onPress={() =>onStepChange(1)}>\r\n//                 <Text style={styles.buttonText}>Prev</Text>\r\n//                 </TouchableOpacity>\r\n\r\n//                 <TouchableOpacity style={styles.buttonNext} onPress={() =>handleSignUp(2)}>\r\n//                 <Text style={styles.buttonText}>Next</Text>\r\n//                 </TouchableOpacity> \r\n//             </View>\r\n//         </View>\r\n//     );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1,\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//     },\r\n//     title: {\r\n//         fontSize: 24,\r\n//         fontWeight: 'bold',\r\n//         marginBottom: 20,\r\n//     },\r\n//     input: {\r\n//         width: '80%',\r\n//         height: 40,\r\n//         borderColor: 'gray',\r\n//         borderWidth: 1,\r\n//         marginBottom: 10,\r\n//         paddingLeft: 10,\r\n//     },\r\n//     buttonText: {\r\n//         color: 'white',\r\n//         fontWeight: 'bold',\r\n//         textAlign: 'center',\r\n//     },\r\n//     error: {\r\n//         color: 'red',\r\n//         marginBottom: 10,\r\n//     },\r\n    \r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc', // Light gray\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n// });\r\n\r\n// export default SignUpScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}