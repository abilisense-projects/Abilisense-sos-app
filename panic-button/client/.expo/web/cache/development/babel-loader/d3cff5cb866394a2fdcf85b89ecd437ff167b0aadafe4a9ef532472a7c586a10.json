{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { signUpValidationSchema } from \"../../config/validations\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUp2 = function SignUp2(_ref) {\n  var onStepChange = _ref.onStepChange;\n  var _useState = useState({\n      phoneNumber: '',\n      country: '',\n      city: '',\n      street: '',\n      buildingNumber: '',\n      entrance: '',\n      floor: '',\n      apartmentNumber: '',\n      additionalNotes: '',\n      dateOfBirth: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errors = _useState4[0],\n    setErrors = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isDatePickerVisible = _useState6[0],\n    setDatePickerVisible = _useState6[1];\n  var fieldDisplayNames = {\n    phoneNumber: 'Phone number',\n    country: 'Country',\n    city: 'City',\n    street: 'Street',\n    buildingNumber: 'Building number',\n    entrance: 'Entrance',\n    floor: 'Floor',\n    apartmentNumber: 'Apartment number',\n    additionalNotes: 'Additional notes',\n    dateOfBirth: 'Date of birth YYYY-MM-DD'\n  };\n  var handleInputChange = function handleInputChange(key, text) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, key, text)));\n    setErrors(_objectSpread(_objectSpread({}, errors), {}, _defineProperty({}, key, null)));\n  };\n  var isFieldValid = function isFieldValid(key) {\n    if (formData[key] && !errors[key]) {\n      try {\n        signUpValidationSchema.validateSyncAt(key, formData);\n        return true;\n      } catch (validationError) {\n        return false;\n      }\n    }\n    return false;\n  };\n  var renderLabel = function renderLabel(key) {\n    return _jsx(Text, {\n      style: styles.placeholderLabel,\n      children: formData[key] ? fieldDisplayNames[key] : ''\n    });\n  };\n  var handleSignUp = function handleSignUp(newStep) {\n    var formErrors = {};\n    Object.keys(formData).forEach(function (key) {\n      try {\n        signUpValidationSchema.validateSyncAt(key, formData);\n      } catch (validationError) {\n        formErrors[key] = validationError.message;\n      }\n    });\n    if (Object.keys(formErrors).length === 0) {\n      setErrors({});\n      onStepChange(newStep);\n    } else {\n      setErrors(formErrors);\n    }\n  };\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisible(true);\n  };\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisible(false);\n  };\n  var handleDateConfirm = function handleDateConfirm(date) {\n    var formattedDate = date.toISOString().split('T')[0];\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      dateOfBirth: formattedDate\n    }));\n    hideDatePicker();\n  };\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: {\n      flex: 1\n    },\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Sign Up - Step 2\"\n      }), Object.keys(formData).map(function (key) {\n        return _jsxs(View, {\n          style: styles.inputContainer,\n          children: [renderLabel(key), _jsx(TextInput, {\n            style: _objectSpread(_objectSpread({}, styles.input), {}, {\n              height: 40,\n              borderColor: isFieldValid(key) ? 'green' : errors[key] ? 'red' : 'gray'\n            }),\n            placeholder: fieldDisplayNames[key],\n            onChangeText: function onChangeText(text) {\n              return handleInputChange(key, text);\n            },\n            value: formData[key],\n            keyboardType: key === 'dateOfBirth' ? 'numeric' : 'default',\n            onFocus: key === 'dateOfBirth' ? showDatePicker : undefined\n          }), isFieldValid(key) && _jsx(View, {\n            style: styles.iconContainer,\n            children: _jsx(MaterialIcons, {\n              name: \"check\",\n              size: 24,\n              color: \"green\",\n              style: styles.icon\n            })\n          }), errors[key] && _jsx(Text, {\n            style: styles.error,\n            children: errors[key]\n          })]\n        }, key);\n      }), _jsx(Pressable, {\n        style: styles.dateButton,\n        onPress: showDatePicker,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Date\"\n        })\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(Pressable, {\n          style: styles.buttonPrev,\n          onPress: function onPress() {\n            return onStepChange(1);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Prev\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.buttonNext,\n          onPress: function onPress() {\n            return handleSignUp(3);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Next\"\n          })\n        })]\n      }), _jsx(DateTimePickerModal, {\n        isVisible: isDatePickerVisible,\n        mode: \"date\",\n        onConfirm: handleDateConfirm,\n        onCancel: hideDatePicker\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  inputContainer: {\n    position: 'relative',\n    marginBottom: 20\n  },\n  input: {\n    width: '80%',\n    borderWidth: 1,\n    paddingLeft: 10,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  error: {\n    color: 'red',\n    marginTop: 5\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '80%',\n    marginTop: 20\n  },\n  buttonPrev: {\n    backgroundColor: '#ccc',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    marginRight: 10\n  },\n  buttonNext: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    flex: 1\n  },\n  icon: {\n    marginLeft: 10\n  },\n  iconContainer: {\n    position: 'absolute',\n    top: 12,\n    right: 12\n  },\n  placeholderLabel: {\n    position: 'absolute',\n    left: 10,\n    top: -8,\n    backgroundColor: 'rgb(243, 243, 243)',\n    paddingHorizontal: 5,\n    color: 'black'\n  },\n  dateButton: {\n    backgroundColor: 'green',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  }\n});\nexport default SignUp2;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","ScrollView","KeyboardAvoidingView","Platform","StyleSheet","signUpValidationSchema","MaterialIcons","DateTimePickerModal","jsx","_jsx","jsxs","_jsxs","SignUp2","_ref","onStepChange","_useState","phoneNumber","country","city","street","buildingNumber","entrance","floor","apartmentNumber","additionalNotes","dateOfBirth","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","errors","setErrors","_useState5","_useState6","isDatePickerVisible","setDatePickerVisible","fieldDisplayNames","handleInputChange","key","text","_objectSpread","_defineProperty","isFieldValid","validateSyncAt","validationError","renderLabel","style","styles","placeholderLabel","children","handleSignUp","newStep","formErrors","Object","keys","forEach","message","length","showDatePicker","hideDatePicker","handleDateConfirm","date","formattedDate","toISOString","split","behavior","OS","flex","contentContainerStyle","container","title","map","inputContainer","input","height","borderColor","placeholder","onChangeText","value","keyboardType","onFocus","undefined","iconContainer","name","size","color","icon","error","dateButton","onPress","buttonText","buttonContainer","buttonPrev","buttonNext","isVisible","mode","onConfirm","onCancel","create","flexGrow","justifyContent","alignItems","paddingVertical","fontSize","fontWeight","marginBottom","position","width","borderWidth","paddingLeft","flexDirection","textAlign","marginTop","backgroundColor","padding","borderRadius","marginRight","marginLeft","top","right","left","paddingHorizontal"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/SignUp2.js"],"sourcesContent":["//ישן טוב\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\n// import axios from 'axios';\r\n\r\n// const SignUp2 = ({onStepChange}) => {\r\n\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n//   const [country, setCountry] = useState('');\r\n//   const [city, setCity] = useState('');\r\n//   const [street, setStreet] = useState('');\r\n//   const [streetNum, setStreetNum] = useState('');\r\n//   const [entrance, setEntrance] = useState('');\r\n//   const [houseNumber, setHouseNumber] = useState('');\r\n//   const [dob, setDob] = useState('');\r\n\r\n//     // State for error messages\r\n//     const [error, setError] = useState('');\r\n\r\n\r\n//     const validateForm = () => {\r\n      \r\n//       setError('');\r\n      \r\n//       if (!phoneNumber) {\r\n//         setError('All fields are required');\r\n//         return false;\r\n//       }\r\n\r\n//       // if (!phoneNumber || !country || !city || !street || !streetNum || !entrance || !houseNumber || !dob) {\r\n//       //   setError('All fields are required');\r\n//       //   return false;\r\n//       // }\r\n    \r\n//       // Add more sophisticated validation logic if needed\r\n    \r\n//       return true;\r\n//     };\r\n\r\n\r\n//   const handleSignUp = (newStep) => {\r\n//     if (validateForm()) {\r\n//       onStepChange(newStep); // Call the callback to move to another step\r\n//     }\r\n// }\r\n  \r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Phone Number\"\r\n//         onChangeText={(text) => setPhoneNumber(text)}\r\n//         value={phoneNumber}\r\n//         keyboardType=\"phone-pad\"\r\n//       />\r\n\r\n//       <Text style={styles.subtitle}>Exact Residential Address:</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Country\"\r\n//         onChangeText={(text) => setCountry(text)}\r\n//         value={country}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"City\"\r\n//         onChangeText={(text) => setCity(text)}\r\n//         value={city}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Street\"\r\n//         onChangeText={(text) => setStreet(text)}\r\n//         value={street}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Street Number\"\r\n//         onChangeText={(text) => setStreetNum(text)}\r\n//         value={streetNum}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Entrance\"\r\n//         onChangeText={(text) => setEntrance(text)}\r\n//         value={entrance}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"House Number\"\r\n//         onChangeText={(text) => setHouseNumber(text)}\r\n//         value={houseNumber}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Date of Birth (YYYY-MM-DD)\"\r\n//         onChangeText={(text) => setDob(text)}\r\n//         value={dob}\r\n//         keyboardType=\"numeric\"\r\n//       />\r\n\r\n//       {/* Display error message if there is one */}\r\n//       {error ? <Text style={styles.error}>{error}</Text> : null}\r\n\r\n//       <View style={styles.buttonContainer}>\r\n//           <TouchableOpacity style={styles.buttonPrev} onPress={() =>onStepChange(1)}>\r\n//           <Text style={styles.buttonText}>Prev</Text>\r\n//           </TouchableOpacity>\r\n//            <TouchableOpacity style={styles.buttonNext} onPress={() =>handleSignUp(3)}>\r\n//           <Text style={styles.buttonText}>Next</Text>\r\n//           </TouchableOpacity> \r\n//       </View>\r\n\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   subtitle: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//     marginTop: 10,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     paddingLeft: 10,\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginBottom: 10,\r\n// },\r\n//   button: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     marginTop: 10,\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc', // Light gray\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n// });\r\n\r\n// export default SignUp2;\r\n\r\n\r\n//חדש טוב!!\r\n// import React, { useState } from 'react';\r\n// import { View, Text, TextInput, Pressable, TouchableOpacity, StyleSheet } from 'react-native';\r\n// import { signUpValidationSchema } from '../../config/validations';\r\n// import { MaterialIcons } from '@expo/vector-icons';\r\n// import { date } from 'yup';\r\n\r\n// const SignUp2 = ({ onStepChange }) => {\r\n//   const [formData, setFormData] = useState({\r\n//     phoneNumber: '',\r\n//     country: '',\r\n//     city: '',\r\n//     street: '',\r\n//     buildingNumber: '',\r\n//     entrance: '',\r\n//     floor: '',\r\n//     apartmentNumber:'',\r\n//     additionalNotes:'',\r\n//     dob : '',\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleInputChange = (key, text) => {\r\n//     setFormData({ ...formData, [key]: text });\r\n//     setErrors({ ...errors, [key]: null }); // Reset error when the user starts typing\r\n//   };\r\n\r\n//   const isFieldValid = (key) => {\r\n//     if (formData[key] && !errors[key]) {\r\n//       // Check validation conditions\r\n//       try {\r\n//         signUpValidationSchema.validateSyncAt(key, formData);\r\n//         return true;\r\n//       } catch (validationError) {\r\n//         return false;\r\n//       }\r\n//     }\r\n//     return false;\r\n//   };\r\n\r\n//   const renderLabel = (key) => {\r\n//     return (\r\n//       <Text style={styles.placeholderLabel}>\r\n//         {formData[key] ? key.charAt(0).toUpperCase() + key.slice(1) : ''}\r\n//       </Text>\r\n//     );\r\n//   };\r\n\r\n//   const handleSignUp = (newStep) => {\r\n//     const formErrors = {};\r\n//     Object.keys(formData).forEach((key) => {\r\n//       try {\r\n//         signUpValidationSchema.validateSyncAt(key, formData);\r\n//       } catch (validationError) {\r\n//         formErrors[key] = validationError.message;\r\n//       }\r\n//     });\r\n\r\n//     if (Object.keys(formErrors).length === 0) {\r\n//       // No errors, proceed to the next step\r\n//       setErrors({});\r\n//       onStepChange(newStep);\r\n//     } else {\r\n//       // Validation failed, set the errors\r\n//       setErrors(formErrors);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n//       {Object.keys(formData).map((key) => (\r\n//         <View key={key} style={styles.inputContainer}>\r\n//           {renderLabel(key)}\r\n//           <TextInput\r\n//             style={{\r\n//               ...styles.input,\r\n//               height: 40, // Set a fixed height for the input\r\n//               borderColor: isFieldValid(key) ? 'green' : errors[key] ? 'red' : 'gray',\r\n//             }}\r\n//             placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\r\n//             onChangeText={(text) => handleInputChange(key, text)}\r\n//             value={formData[key]}\r\n//             keyboardType={key === 'dob' ? 'numeric' : 'default'}\r\n//           />\r\n//           {isFieldValid(key) && (\r\n//             <View style={styles.iconContainer}>\r\n//               <MaterialIcons name=\"check\" size={24} color=\"green\" style={styles.icon} />\r\n//             </View>\r\n//           )}\r\n//           {errors[key] && <Text style={styles.error}>{errors[key]}</Text>}\r\n//         </View>\r\n//       ))}\r\n\r\n//       <View style={styles.buttonContainer}>\r\n//         <Pressable style={styles.buttonPrev} onPress={() => onStepChange(1)}>\r\n//           <Text style={styles.buttonText}>Prev</Text>\r\n//         </Pressable>\r\n\r\n//         <Pressable style={styles.buttonNext} onPress={() => handleSignUp(3)}>\r\n//           <Text style={styles.buttonText}>Next</Text>\r\n//         </Pressable>\r\n//       </View>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   inputContainer: {\r\n//     position: 'relative',\r\n//     marginBottom: 20,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     borderWidth: 1,\r\n//     paddingLeft: 10,\r\n//     flexDirection: 'row',\r\n//     alignItems: 'center', // Center the icon vertically\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginTop: 5,\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n//   icon: {\r\n//     marginLeft: 10, // Adjust the margin as needed\r\n//   },\r\n//   iconContainer: {\r\n//     position: 'absolute',\r\n//     top: 12,\r\n//     right: 12,\r\n//   },\r\n//   placeholderLabel: {\r\n//     position: 'absolute',\r\n//     left: 10,\r\n//     top: -8,\r\n//     backgroundColor: 'rgb(243, 243, 243), 195, 197',\r\n//     paddingHorizontal: 5,\r\n//     color: 'black',\r\n//   },\r\n// });\r\n\r\n// export default SignUp2;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import {\r\n//   View,Text,TextInput,Pressable,ScrollView,KeyboardAvoidingView,Platform,StyleSheet,\r\n// } from 'react-native';\r\n// import { signUpValidationSchema } from '../../config/validations';\r\n// import { MaterialIcons } from '@expo/vector-icons';\r\n\r\n// const SignUp2 = ({ onStepChange }) => {\r\n//   const [formData, setFormData] = useState({\r\n//     phoneNumber: '',\r\n//     country: '',\r\n//     city: '',\r\n//     street: '',\r\n//     buildingNumber: '',\r\n//     entrance: '',\r\n//     floor: '',\r\n//     apartmentNumber: '',\r\n//     additionalNotes: '',\r\n//     dateOfBirth: '',\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleInputChange = (key, text) => {\r\n//     setFormData({ ...formData, [key]: text });\r\n//     setErrors({ ...errors, [key]: null }); // Reset error when the user starts typing\r\n//   };\r\n\r\n//   const isFieldValid = (key) => {\r\n//     if (formData[key] && !errors[key]) {\r\n//       // Check validation conditions\r\n//       try {\r\n//         signUpValidationSchema.validateSyncAt(key, formData);\r\n//         return true;\r\n//       } catch (validationError) {\r\n//         return false;\r\n//       }\r\n//     }\r\n//     return false;\r\n//   };\r\n\r\n//   const renderLabel = (key) => {\r\n//     return (\r\n//       <Text style={styles.placeholderLabel}>\r\n//         {formData[key] ? key.charAt(0).toUpperCase() + key.slice(1) : ''}\r\n//       </Text>\r\n//     );\r\n//   };\r\n\r\n//   const handleSignUp = (newStep) => {\r\n//     const formErrors = {};\r\n//     Object.keys(formData).forEach((key) => {\r\n//       try {\r\n//         signUpValidationSchema.validateSyncAt(key, formData);\r\n//       } catch (validationError) {\r\n//         formErrors[key] = validationError.message;\r\n//       }\r\n//     });\r\n\r\n//     if (Object.keys(formErrors).length === 0) {\r\n//       // No errors, proceed to the next step\r\n//       setErrors({});\r\n//       onStepChange(newStep);\r\n//     } else {\r\n//       // Validation failed, set the errors\r\n//       setErrors(formErrors);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <KeyboardAvoidingView\r\n//       behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n//       style={{ flex: 1 }}\r\n//     >\r\n//       <ScrollView contentContainerStyle={styles.container}>\r\n//         <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n//         {Object.keys(formData).map((key) => (\r\n//           <View key={key} style={styles.inputContainer}>\r\n//             {renderLabel(key)}\r\n//             <TextInput\r\n//               style={{\r\n//                 ...styles.input,\r\n//                 height: 40, // Set a fixed height for the input\r\n//                 borderColor: isFieldValid(key)\r\n//                   ? 'green'\r\n//                   : errors[key]\r\n//                   ? 'red'\r\n//                   : 'gray',\r\n//               }}\r\n//               placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\r\n//               onChangeText={(text) => handleInputChange(key, text)}\r\n//               value={formData[key]}\r\n//               keyboardType={key === 'dob' ? 'numeric' : 'default'}\r\n//             />\r\n//             {isFieldValid(key) && (\r\n//               <View style={styles.iconContainer}>\r\n//                 <MaterialIcons name=\"check\" size={24} color=\"green\" style={styles.icon} />\r\n//               </View>\r\n//             )}\r\n//             {errors[key] && <Text style={styles.error}>{errors[key]}</Text>}\r\n//           </View>\r\n//         ))}\r\n\r\n//         <View style={styles.buttonContainer}>\r\n//           <Pressable style={styles.buttonPrev} onPress={() => onStepChange(1)}>\r\n//             <Text style={styles.buttonText}>Prev</Text>\r\n//           </Pressable>\r\n\r\n//           <Pressable style={styles.buttonNext} onPress={() => handleSignUp(3)}>\r\n//             <Text style={styles.buttonText}>Next</Text>\r\n//           </Pressable>\r\n//         </View>\r\n//       </ScrollView>\r\n//     </KeyboardAvoidingView>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flexGrow: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//     paddingVertical: 20,\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   inputContainer: {\r\n//     position: 'relative',\r\n//     marginBottom: 20,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     borderWidth: 1,\r\n//     paddingLeft: 10,\r\n//     flexDirection: 'row',\r\n//     alignItems: 'center', // Center the icon vertically\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginTop: 5,\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n//   icon: {\r\n//     marginLeft: 10, // Adjust the margin as needed\r\n//   },\r\n//   iconContainer: {\r\n//     position: 'absolute',\r\n//     top: 12,\r\n//     right: 12,\r\n//   },\r\n//   placeholderLabel: {\r\n//     position: 'absolute',\r\n//     left: 10,\r\n//     top: -8,\r\n//     backgroundColor: 'rgb(243, 243, 243)',\r\n//     paddingHorizontal: 5,\r\n//     color: 'black',\r\n//   },\r\n// });\r\n\r\n// export default SignUp2;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Pressable,\r\n  ScrollView,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport { signUpValidationSchema } from '../../config/validations';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\r\n\r\nconst SignUp2 = ({ onStepChange }) => {\r\n  const [formData, setFormData] = useState({\r\n    phoneNumber: '',\r\n    country: '',\r\n    city: '',\r\n    street: '',\r\n    buildingNumber: '',\r\n    entrance: '',\r\n    floor: '',\r\n    apartmentNumber: '',\r\n    additionalNotes: '',\r\n    dateOfBirth: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isDatePickerVisible, setDatePickerVisible] = useState(false);\r\n\r\n  const fieldDisplayNames = {\r\n    phoneNumber: 'Phone number',\r\n    country: 'Country',\r\n    city: 'City',\r\n    street: 'Street',\r\n    buildingNumber: 'Building number',\r\n    entrance: 'Entrance',\r\n    floor: 'Floor',\r\n    apartmentNumber: 'Apartment number',\r\n    additionalNotes: 'Additional notes',\r\n    dateOfBirth: 'Date of birth YYYY-MM-DD',\r\n  };\r\n\r\n  const handleInputChange = (key, text) => {\r\n    setFormData({ ...formData, [key]: text });\r\n    setErrors({ ...errors, [key]: null }); // Reset error when the user starts typing\r\n  };\r\n\r\n  const isFieldValid = (key) => {\r\n    if (formData[key] && !errors[key]) {\r\n      // Check validation conditions\r\n      try {\r\n        signUpValidationSchema.validateSyncAt(key, formData);\r\n        return true;\r\n      } catch (validationError) {\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const renderLabel = (key) => {\r\n    return (\r\n      <Text style={styles.placeholderLabel}>\r\n        {formData[key] ? fieldDisplayNames[key] : ''}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  const handleSignUp = (newStep) => {\r\n    const formErrors = {};\r\n    Object.keys(formData).forEach((key) => {\r\n      try {\r\n        signUpValidationSchema.validateSyncAt(key, formData);\r\n      } catch (validationError) {\r\n        formErrors[key] = validationError.message;\r\n      }\r\n    });\r\n\r\n    if (Object.keys(formErrors).length === 0) {\r\n      // No errors, proceed to the next step\r\n      setErrors({});\r\n      onStepChange(newStep);\r\n    } else {\r\n      // Validation failed, set the errors\r\n      setErrors(formErrors);\r\n    }\r\n  };\r\n\r\n  const showDatePicker = () => {\r\n    setDatePickerVisible(true);\r\n  };\r\n\r\n  const hideDatePicker = () => {\r\n    setDatePickerVisible(false);\r\n  };\r\n\r\n  const handleDateConfirm = (date) => {\r\n    // Format the date and update the form data\r\n    const formattedDate = date.toISOString().split('T')[0];\r\n    setFormData({ ...formData, dateOfBirth: formattedDate });\r\n    hideDatePicker();\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <ScrollView contentContainerStyle={styles.container}>\r\n        <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n        {Object.keys(formData).map((key) => (\r\n          <View key={key} style={styles.inputContainer}>\r\n            {renderLabel(key)}\r\n            <TextInput\r\n              style={{\r\n                ...styles.input,\r\n                height: 40,\r\n                borderColor: isFieldValid(key)\r\n                  ? 'green'\r\n                  : errors[key]\r\n                  ? 'red'\r\n                  : 'gray',\r\n              }}\r\n              placeholder={fieldDisplayNames[key]}\r\n              onChangeText={(text) => handleInputChange(key, text)}\r\n              value={formData[key]}\r\n              keyboardType={key === 'dateOfBirth' ? 'numeric' : 'default'}\r\n              onFocus={key === 'dateOfBirth' ? showDatePicker : undefined}\r\n            />\r\n            {isFieldValid(key) && (\r\n              <View style={styles.iconContainer}>\r\n                <MaterialIcons name=\"check\" size={24} color=\"green\" style={styles.icon} />\r\n              </View>\r\n            )}\r\n            {errors[key] && <Text style={styles.error}>{errors[key]}</Text>}\r\n          </View>\r\n        ))}\r\n\r\n        <Pressable style={styles.dateButton} onPress={showDatePicker}>\r\n          <Text style={styles.buttonText}>Date</Text>\r\n        </Pressable>\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <Pressable style={styles.buttonPrev} onPress={() => onStepChange(1)}>\r\n            <Text style={styles.buttonText}>Prev</Text>\r\n          </Pressable>\r\n\r\n          <Pressable style={styles.buttonNext} onPress={() => handleSignUp(3)}>\r\n            <Text style={styles.buttonText}>Next</Text>\r\n          </Pressable>\r\n        </View>\r\n\r\n        <DateTimePickerModal\r\n          isVisible={isDatePickerVisible}\r\n          mode=\"date\"\r\n          onConfirm={handleDateConfirm}\r\n          onCancel={hideDatePicker}\r\n        />\r\n      </ScrollView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  inputContainer: {\r\n    position: 'relative',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    borderWidth: 1,\r\n    paddingLeft: 10,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginTop: 5,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '80%',\r\n    marginTop: 20,\r\n  },\r\n  buttonPrev: {\r\n    backgroundColor: '#ccc',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  buttonNext: {\r\n    backgroundColor: 'blue',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    flex: 1,\r\n  },\r\n  icon: {\r\n    marginLeft: 10,\r\n  },\r\n  iconContainer: {\r\n    position: 'absolute',\r\n    top: 12,\r\n    right: 12,\r\n  },\r\n  placeholderLabel: {\r\n    position: 'absolute',\r\n    left: 10,\r\n    top: -8,\r\n    backgroundColor: 'rgb(243, 243, 243)',\r\n    paddingHorizontal: 5,\r\n    color: 'black',\r\n  },\r\n  dateButton: {\r\n    backgroundColor: 'green',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default SignUp2;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}