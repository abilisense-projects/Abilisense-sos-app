{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { signUpValidationSchema } from \"./validation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUp2 = function SignUp2(_ref) {\n  var onStepChange = _ref.onStepChange;\n  var formik = useFormik({\n    initialValues: {\n      phoneNumber: '',\n      country: '',\n      city: '',\n      street: '',\n      streetNum: '',\n      entrance: '',\n      houseNumber: '',\n      dob: ''\n    },\n    validationSchema: signUpValidationSchema,\n    onSubmit: function onSubmit(values) {\n      onStepChange(3);\n    }\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Sign Up - Step 2\"\n    }), _jsx(TextInput, {\n      style: [styles.input, formik.errors.phoneNumber && styles.errorBorder],\n      placeholder: \"Phone Number\",\n      onChangeText: formik.handleChange('phoneNumber'),\n      value: formik.values.phoneNumber,\n      keyboardType: \"phone-pad\"\n    }), formik.errors.phoneNumber && _jsx(Text, {\n      style: styles.error,\n      children: formik.errors.phoneNumber\n    }), _jsx(Text, {\n      style: styles.subtitle,\n      children: \"Exact Residential Address:\"\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.buttonPrev,\n        onPress: function onPress() {\n          return onStepChange(1);\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Prev\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonNext,\n        onPress: formik.handleSubmit,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Next\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  errorBorder: {\n    borderColor: 'red'\n  }\n});\nexport default SignUp2;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","axios","useFormik","signUpValidationSchema","jsx","_jsx","jsxs","_jsxs","SignUp2","_ref","onStepChange","formik","initialValues","phoneNumber","country","city","street","streetNum","entrance","houseNumber","dob","validationSchema","onSubmit","values","style","styles","container","children","title","input","errors","errorBorder","placeholder","onChangeText","handleChange","value","keyboardType","error","subtitle","buttonContainer","buttonPrev","onPress","buttonText","buttonNext","handleSubmit","create","borderColor"],"sources":["C:/Users/n0548/Desktop/Abilisence Project/project1/panic-button/client/components/signUp/SignUp2.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\n// import axios from 'axios';\r\n\r\n// const SignUp2 = ({onStepChange}) => {\r\n\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n//   const [country, setCountry] = useState('');\r\n//   const [city, setCity] = useState('');\r\n//   const [street, setStreet] = useState('');\r\n//   const [streetNum, setStreetNum] = useState('');\r\n//   const [entrance, setEntrance] = useState('');\r\n//   const [houseNumber, setHouseNumber] = useState('');\r\n//   const [dob, setDob] = useState('');\r\n\r\n//     // State for error messages\r\n//     const [error, setError] = useState('');\r\n\r\n\r\n//     const validateForm = () => {\r\n      \r\n//       setError('');\r\n      \r\n//       if (!phoneNumber) {\r\n//         setError('All fields are required');\r\n//         return false;\r\n//       }\r\n\r\n//       // if (!phoneNumber || !country || !city || !street || !streetNum || !entrance || !houseNumber || !dob) {\r\n//       //   setError('All fields are required');\r\n//       //   return false;\r\n//       // }\r\n    \r\n//       // Add more sophisticated validation logic if needed\r\n    \r\n//       return true;\r\n//     };\r\n\r\n\r\n//   const handleSignUp = (newStep) => {\r\n//     if (validateForm()) {\r\n//       onStepChange(newStep); // Call the callback to move to another step\r\n//     }\r\n// }\r\n  \r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Phone Number\"\r\n//         onChangeText={(text) => setPhoneNumber(text)}\r\n//         value={phoneNumber}\r\n//         keyboardType=\"phone-pad\"\r\n//       />\r\n\r\n//       <Text style={styles.subtitle}>Exact Residential Address:</Text>\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Country\"\r\n//         onChangeText={(text) => setCountry(text)}\r\n//         value={country}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"City\"\r\n//         onChangeText={(text) => setCity(text)}\r\n//         value={city}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Street\"\r\n//         onChangeText={(text) => setStreet(text)}\r\n//         value={street}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Street Number\"\r\n//         onChangeText={(text) => setStreetNum(text)}\r\n//         value={streetNum}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Entrance\"\r\n//         onChangeText={(text) => setEntrance(text)}\r\n//         value={entrance}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"House Number\"\r\n//         onChangeText={(text) => setHouseNumber(text)}\r\n//         value={houseNumber}\r\n//       />\r\n\r\n//       <TextInput\r\n//         style={styles.input}\r\n//         placeholder=\"Date of Birth (YYYY-MM-DD)\"\r\n//         onChangeText={(text) => setDob(text)}\r\n//         value={dob}\r\n//         keyboardType=\"numeric\"\r\n//       />\r\n\r\n//       {/* Display error message if there is one */}\r\n//       {error ? <Text style={styles.error}>{error}</Text> : null}\r\n\r\n//       <View style={styles.buttonContainer}>\r\n//           <TouchableOpacity style={styles.buttonPrev} onPress={() =>onStepChange(1)}>\r\n//           <Text style={styles.buttonText}>Prev</Text>\r\n//           </TouchableOpacity>\r\n//            <TouchableOpacity style={styles.buttonNext} onPress={() =>handleSignUp(3)}>\r\n//           <Text style={styles.buttonText}>Next</Text>\r\n//           </TouchableOpacity> \r\n//       </View>\r\n\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   subtitle: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//     marginTop: 10,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     paddingLeft: 10,\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginBottom: 10,\r\n// },\r\n//   button: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     marginTop: 10,\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc', // Light gray\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n// });\r\n\r\n// export default SignUp2;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport { signUpValidationSchema } from './validation';\r\n\r\nconst SignUp2 = ({ onStepChange }) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      phoneNumber: '',\r\n      country: '',\r\n      city: '',\r\n      street: '',\r\n      streetNum: '',\r\n      entrance: '',\r\n      houseNumber: '',\r\n      dob: '',\r\n    },\r\n    validationSchema: signUpValidationSchema,\r\n    onSubmit: (values) => {\r\n      onStepChange(3); // Move to the next step if validation passes\r\n    },\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Sign Up - Step 2</Text>\r\n\r\n      <TextInput\r\n        style={[styles.input, formik.errors.phoneNumber && styles.errorBorder]}\r\n        placeholder=\"Phone Number\"\r\n        onChangeText={formik.handleChange('phoneNumber')}\r\n        value={formik.values.phoneNumber}\r\n        keyboardType=\"phone-pad\"\r\n      />\r\n      {formik.errors.phoneNumber && <Text style={styles.error}>{formik.errors.phoneNumber}</Text>}\r\n\r\n      <Text style={styles.subtitle}>Exact Residential Address:</Text>\r\n\r\n      {/* Add similar TextInput and error display logic for other fields */}\r\n      \r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity style={styles.buttonPrev} onPress={() => onStepChange(1)}>\r\n          <Text style={styles.buttonText}>Prev</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.buttonNext} onPress={formik.handleSubmit}>\r\n          <Text style={styles.buttonText}>Next</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n //   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   title: {\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     marginBottom: 20,\r\n//   },\r\n//   subtitle: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//     marginTop: 10,\r\n//   },\r\n//   input: {\r\n//     width: '80%',\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     paddingLeft: 10,\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginBottom: 10,\r\n// },\r\n//   button: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     marginTop: 10,\r\n//   },\r\n//   buttonText: {\r\n//     color: 'white',\r\n//     fontWeight: 'bold',\r\n//     textAlign: 'center',\r\n//   },\r\n//   buttonContainer: {\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     width: '80%',\r\n//     marginTop: 20,\r\n//   },\r\n//   buttonPrev: {\r\n//     backgroundColor: '#ccc', // Light gray\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//     marginRight: 10,\r\n//   },\r\n//   buttonNext: {\r\n//     backgroundColor: 'blue',\r\n//     padding: 10,\r\n//     borderRadius: 5,\r\n//     flex: 1,\r\n//   },\r\n\r\n  errorBorder: {\r\n    borderColor: 'red',\r\n  },\r\n});\r\n\r\nexport default SignUp2;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}